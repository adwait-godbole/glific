searchNodes=[{"doc":"Glific keeps the contexts that define your domain and business logic. Contexts are also responsible for managing your data, regardless if it comes from the database, an external API or others. For now we'll keep some commonly used functions here, until we need a new file","ref":"Glific.html","title":"Glific","type":"module"},{"doc":"Convert map string keys to :atom keys","ref":"Glific.html#atomize_keys/1","title":"Glific.atomize_keys/1","type":"function"},{"doc":"Delete multiple items from the map","ref":"Glific.html#delete_multiple/2","title":"Glific.delete_multiple/2","type":"function"},{"doc":"execute string in eex","ref":"Glific.html#execute_eex/1","title":"Glific.execute_eex/1","type":"function"},{"doc":"Return a time object where you go back x units. We introduce the notion of hour and minute","ref":"Glific.html#go_back_time/3","title":"Glific.go_back_time/3","type":"function"},{"doc":"A hack to suppress error messages when running lots of flows. These are expected and we want to improve signal &lt;-&gt; noise ratio","ref":"Glific.html#ignore_error?/1","title":"Glific.ignore_error?/1","type":"function"},{"doc":"See if the current time is within the past time units","ref":"Glific.html#in_past_time/3","title":"Glific.in_past_time/3","type":"function"},{"doc":"Log the error and also send it over to our friends at appsignal","ref":"Glific.html#log_error/2","title":"Glific.log_error/2","type":"function"},{"doc":"Given a string seperated by spaces, commas, or semi-colons, create a set of individual elements in the string","ref":"Glific.html#make_set/2","title":"Glific.make_set/2","type":"function"},{"doc":"parse and integer and die if parse fails","ref":"Glific.html#parse_maybe_integer!/1","title":"Glific.parse_maybe_integer!/1","type":"function"},{"doc":"Wrapper to return :ok/:error when parsing strings to potential integers","ref":"Glific.html#parse_maybe_integer/1","title":"Glific.parse_maybe_integer/1","type":"function"},{"doc":"You shouldn’t really use String.to_atom/1 on user-supplied data. The BEAM has a limit on how many different atoms you can have and they’re not garbage collected! With data coming from outside the system, stick to strings or use String.to_existing_atom/1 instead! So this is a generic function which will convert the string to atom and throws an error in case of invalid key","ref":"Glific.html#safe_string_to_atom/1","title":"Glific.safe_string_to_atom/1","type":"function"},{"doc":"Compute the signature at a specific time for the body","ref":"Glific.html#signature/3","title":"Glific.signature/3","type":"function"},{"doc":"easy way for glific developers to get a stacktrace when debugging","ref":"Glific.html#stacktrace/0","title":"Glific.stacktrace/0","type":"function"},{"doc":"Lets get rid of all non valid characters. We are assuming any language and hence using unicode syntax and not restricting ourselves to alphanumeric","ref":"Glific.html#string_clean/1","title":"Glific.string_clean/1","type":"function"},{"doc":"convert string to snake case","ref":"Glific.html#string_snake_case/1","title":"Glific.string_snake_case/1","type":"function"},{"doc":"Intermediary function to update the input params with organization id as operation is performed by glific_admin for other organizations","ref":"Glific.html#substitute_organization_id/3","title":"Glific.substitute_organization_id/3","type":"function"},{"doc":"Really simple function to ensure folks do not add Repo and/or IO calls to an EEx snippet. This is an extremely short term fix to avoid shooting ourselves in the foot, but we should move to lua for flows scripting in the near future Note that folks can potentially find other ways to access the same modules, so this by no means should be considered remotely secure","ref":"Glific.html#suspicious_code/1","title":"Glific.suspicious_code/1","type":"function"},{"doc":"Validates inputed shortcode, if shortcode is invalid it returns message that the shortcode is invalid along with the valid shortcode.","ref":"Glific.html#validate_shortcode/1","title":"Glific.validate_shortcode/1","type":"function"},{"doc":"This is a module to convert speech to text","ref":"Glific.ASR.GoogleASR.html","title":"Glific.ASR.GoogleASR","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#delete!/3","title":"Glific.ASR.GoogleASR.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#delete/3","title":"Glific.ASR.GoogleASR.delete/3","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#get!/3","title":"Glific.ASR.GoogleASR.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#get/3","title":"Glific.ASR.GoogleASR.get/3","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#head!/3","title":"Glific.ASR.GoogleASR.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#head/3","title":"Glific.ASR.GoogleASR.head/3","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#options!/3","title":"Glific.ASR.GoogleASR.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#options/3","title":"Glific.ASR.GoogleASR.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.ASR.GoogleASR.html#patch!/4","title":"Glific.ASR.GoogleASR.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.ASR.GoogleASR.html#patch/4","title":"Glific.ASR.GoogleASR.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.ASR.GoogleASR.html#post!/4","title":"Glific.ASR.GoogleASR.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.ASR.GoogleASR.html#post/4","title":"Glific.ASR.GoogleASR.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.ASR.GoogleASR.html#put!/4","title":"Glific.ASR.GoogleASR.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.ASR.GoogleASR.html#put/4","title":"Glific.ASR.GoogleASR.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.ASR.GoogleASR.html#request!/2","title":"Glific.ASR.GoogleASR.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#request/2","title":"Glific.ASR.GoogleASR.request/2","type":"function"},{"doc":"This function will take organization_id and the url for audio. encoding: We have a list of endoing which is supported with these google api for more information check here https://cloud.google.com/speech-to-text/docs/encoding Sample rate in Hertz of the audio data sent in all RecognitionAudio messages. Valid values are: 8000-48000. 16000 is optimal. For best results, set the sampling rate of the audio source to 16000 Hz. If that's not possible, use the native sample rate of the audio source (instead of re-sampling). This field is optional for FLAC and WAV audio files, but is required for all other audio formats languageCode: This field support multiple languages to more info check this links https://www.rfc-editor.org/rfc/bcp/bcp47.txt https://cloud.google.com/speech-to-text/docs/languages profanityFilter: If enabled, Speech-to-Text will attempt to detect profane words and return only the first letter followed by asterisks in the transcript (for example, f * ). enableWordConfidence: You can specify that Speech-to-Text indicate a value of accuracy, or confidence level, for individual words in a transcription. enableAutomaticPunctuation: When you enable this feature, Speech-to-Text automatically infers the presence of periods, commas, and question marks in your audio data and adds them to the transcript.","ref":"Glific.ASR.GoogleASR.html#speech_to_text/3","title":"Glific.ASR.GoogleASR.speech_to_text/3","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#trace!/3","title":"Glific.ASR.GoogleASR.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.ASR.GoogleASR.html#trace/3","title":"Glific.ASR.GoogleASR.trace/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.ASR.GoogleASR.html#t:option/0","title":"Glific.ASR.GoogleASR.option/0","type":"type"},{"doc":"The AccessControl context.","ref":"Glific.AccessControl.html","title":"Glific.AccessControl","type":"module"},{"doc":"Common function to filtering entity objects based on user role, fun_with_flag flag and entity type","ref":"Glific.AccessControl.html#check_access/2","title":"Glific.AccessControl.check_access/2","type":"function"},{"doc":"Return the count of roles, using the same filter as list_roles","ref":"Glific.AccessControl.html#count_roles/1","title":"Glific.AccessControl.count_roles/1","type":"function"},{"doc":"Creates a permission. Examples iex&gt; create_permission ( %{ field : value } ) { :ok , % Permission { } } iex&gt; create_permission ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.html#create_permission/1","title":"Glific.AccessControl.create_permission/1","type":"function"},{"doc":"Creates a role. Examples iex&gt; create_role ( %{ field : value } ) { :ok , % Role { } } iex&gt; create_role ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.html#create_role/1","title":"Glific.AccessControl.create_role/1","type":"function"},{"doc":"Deletes a permission. Examples iex&gt; delete_permission ( permission ) { :ok , % Permission { } } iex&gt; delete_permission ( permission ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.html#delete_permission/1","title":"Glific.AccessControl.delete_permission/1","type":"function"},{"doc":"Deletes a role. Examples iex&gt; delete_role ( role ) { :ok , % Role { } } iex&gt; delete_role ( role ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.html#delete_role/1","title":"Glific.AccessControl.delete_role/1","type":"function"},{"doc":"Common function to filtering entity objects based on user role, fun_with_flag flag and entity type","ref":"Glific.AccessControl.html#do_check_access/3","title":"Glific.AccessControl.do_check_access/3","type":"function"},{"doc":"Gets a single permission. Raises Ecto.NoResultsError if the Permission does not exist. Examples iex&gt; get_permission! ( 123 ) % Permission { } iex&gt; get_permission! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.AccessControl.html#get_permission!/1","title":"Glific.AccessControl.get_permission!/1","type":"function"},{"doc":"Gets a single role. Raises Ecto.NoResultsError if the Role does not exist. Examples iex&gt; get_role! ( 123 ) % Role { } iex&gt; get_role! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.AccessControl.html#get_role!/1","title":"Glific.AccessControl.get_role!/1","type":"function"},{"doc":"Returns the list of permissions. Examples iex&gt; list_permissions ( ) [ % Permission { } , ... ]","ref":"Glific.AccessControl.html#list_permissions/0","title":"Glific.AccessControl.list_permissions/0","type":"function"},{"doc":"Returns the list of roles. Checks if roles and permission flag is enabled first. If roles and permission is enabled then list all roles If roles and permission is disabled then list only default roles Examples iex&gt; list_roles ( ) [ % Role { } , ... ]","ref":"Glific.AccessControl.html#list_roles/1","title":"Glific.AccessControl.list_roles/1","type":"function"},{"doc":"Returns the labels of organization roles. Examples iex&gt; organization_roles ( ) [ &quot;Teacher&quot; , &quot;Mentor&quot; ]","ref":"Glific.AccessControl.html#organization_roles/1","title":"Glific.AccessControl.organization_roles/1","type":"function"},{"doc":"Updates a permission. Examples iex&gt; update_permission ( permission , %{ field : new_value } ) { :ok , % Permission { } } iex&gt; update_permission ( permission , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.html#update_permission/2","title":"Glific.AccessControl.update_permission/2","type":"function"},{"doc":"Updates a role. Examples iex&gt; update_role ( role , %{ field : new_value } ) { :ok , % Role { } } iex&gt; update_role ( role , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.html#update_role/2","title":"Glific.AccessControl.update_role/2","type":"function"},{"doc":"A pipe for managing the role flows","ref":"Glific.AccessControl.FlowRole.html","title":"Glific.AccessControl.FlowRole","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.AccessControl.FlowRole.html#changeset/2","title":"Glific.AccessControl.FlowRole.changeset/2","type":"function"},{"doc":"Filtering entity object based on user role","ref":"Glific.AccessControl.FlowRole.html#check_access/2","title":"Glific.AccessControl.FlowRole.check_access/2","type":"function"},{"doc":"Creates a access control. Examples iex&gt; create_flow_role ( %{ field : value } ) { :ok , % FlowRole { } } iex&gt; create_flow_role ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.FlowRole.html#create_flow_role/1","title":"Glific.AccessControl.FlowRole.create_flow_role/1","type":"function"},{"doc":"Delete flow roles","ref":"Glific.AccessControl.FlowRole.html#delete_flow_roles_by_role_ids/2","title":"Glific.AccessControl.FlowRole.delete_flow_roles_by_role_ids/2","type":"function"},{"doc":"Update flow roles based on add_role_ids and delete_role_ids and return number_deleted as integer and roles added as access_controls","ref":"Glific.AccessControl.FlowRole.html#update_flow_roles/1","title":"Glific.AccessControl.FlowRole.update_flow_roles/1","type":"function"},{"doc":"","ref":"Glific.AccessControl.FlowRole.html#t:t/0","title":"Glific.AccessControl.FlowRole.t/0","type":"type"},{"doc":"A pipe for managing the role groups","ref":"Glific.AccessControl.GroupRole.html","title":"Glific.AccessControl.GroupRole","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.AccessControl.GroupRole.html#changeset/2","title":"Glific.AccessControl.GroupRole.changeset/2","type":"function"},{"doc":"Filtering entity object based on user role","ref":"Glific.AccessControl.GroupRole.html#check_access/2","title":"Glific.AccessControl.GroupRole.check_access/2","type":"function"},{"doc":"Creates a access control. Examples iex&gt; create_group_role ( %{ field : value } ) { :ok , % GroupRole { } } iex&gt; create_group_role ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.GroupRole.html#create_group_role/1","title":"Glific.AccessControl.GroupRole.create_group_role/1","type":"function"},{"doc":"Delete group roles","ref":"Glific.AccessControl.GroupRole.html#delete_group_roles_by_role_ids/2","title":"Glific.AccessControl.GroupRole.delete_group_roles_by_role_ids/2","type":"function"},{"doc":"Update group roles based on add_role_ids and delete_role_ids and return number_deleted as integer and roles added as access_controls","ref":"Glific.AccessControl.GroupRole.html#update_group_roles/1","title":"Glific.AccessControl.GroupRole.update_group_roles/1","type":"function"},{"doc":"","ref":"Glific.AccessControl.GroupRole.html#t:t/0","title":"Glific.AccessControl.GroupRole.t/0","type":"type"},{"doc":"The minimal wrapper for the base Access Control Permission structure","ref":"Glific.AccessControl.Permission.html","title":"Glific.AccessControl.Permission","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.AccessControl.Permission.html#changeset/2","title":"Glific.AccessControl.Permission.changeset/2","type":"function"},{"doc":"","ref":"Glific.AccessControl.Permission.html#t:t/0","title":"Glific.AccessControl.Permission.t/0","type":"type"},{"doc":"The minimal wrapper for the base Access Control Role structure","ref":"Glific.AccessControl.Role.html","title":"Glific.AccessControl.Role","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.AccessControl.Role.html#changeset/2","title":"Glific.AccessControl.Role.changeset/2","type":"function"},{"doc":"","ref":"Glific.AccessControl.Role.html#t:t/0","title":"Glific.AccessControl.Role.t/0","type":"type"},{"doc":"A pipe for managing the role triggers","ref":"Glific.AccessControl.TriggerRole.html","title":"Glific.AccessControl.TriggerRole","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.AccessControl.TriggerRole.html#changeset/2","title":"Glific.AccessControl.TriggerRole.changeset/2","type":"function"},{"doc":"Filtering entity object based on user role","ref":"Glific.AccessControl.TriggerRole.html#check_access/2","title":"Glific.AccessControl.TriggerRole.check_access/2","type":"function"},{"doc":"Creates a access control. Examples iex&gt; create_trigger_role ( %{ field : value } ) { :ok , % TriggerRole { } } iex&gt; create_trigger_role ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.TriggerRole.html#create_trigger_role/1","title":"Glific.AccessControl.TriggerRole.create_trigger_role/1","type":"function"},{"doc":"Delete trigger roles","ref":"Glific.AccessControl.TriggerRole.html#delete_trigger_roles_by_role_ids/2","title":"Glific.AccessControl.TriggerRole.delete_trigger_roles_by_role_ids/2","type":"function"},{"doc":"Update trigger roles based on add_role_ids and delete_role_ids and return number_deleted as integer and roles added as access_controls","ref":"Glific.AccessControl.TriggerRole.html#update_trigger_roles/1","title":"Glific.AccessControl.TriggerRole.update_trigger_roles/1","type":"function"},{"doc":"","ref":"Glific.AccessControl.TriggerRole.html#t:t/0","title":"Glific.AccessControl.TriggerRole.t/0","type":"type"},{"doc":"A pipe for managing the user roles","ref":"Glific.AccessControl.UserRole.html","title":"Glific.AccessControl.UserRole","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.AccessControl.UserRole.html#changeset/2","title":"Glific.AccessControl.UserRole.changeset/2","type":"function"},{"doc":"Creates a access control. Examples iex&gt; create_user_role ( %{ field : value } ) { :ok , % UserRole { } } iex&gt; create_user_role ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.AccessControl.UserRole.html#create_user_role/1","title":"Glific.AccessControl.UserRole.create_user_role/1","type":"function"},{"doc":"Delete user roles","ref":"Glific.AccessControl.UserRole.html#delete_user_roles_by_role_ids/2","title":"Glific.AccessControl.UserRole.delete_user_roles_by_role_ids/2","type":"function"},{"doc":"Update user roles based on add_role_ids and delete_role_ids and return number_deleted as integer and roles added as access_controls","ref":"Glific.AccessControl.UserRole.html#update_user_roles/1","title":"Glific.AccessControl.UserRole.update_user_roles/1","type":"function"},{"doc":"","ref":"Glific.AccessControl.UserRole.html#t:t/0","title":"Glific.AccessControl.UserRole.t/0","type":"type"},{"doc":"A simple interface that connect Oban job status to Appsignal","ref":"Glific.Appsignal.html","title":"Glific.Appsignal","type":"module"},{"doc":"Glific BigQuery Dataset and table creation","ref":"Glific.BigQuery.html","title":"Glific.BigQuery","type":"module"},{"doc":"Alter bigquery table schema, if required this function should be called from iex","ref":"Glific.BigQuery.html#alter_tables/4","title":"Glific.BigQuery.alter_tables/4","type":"function"},{"doc":"Decoding the credential for bigquery","ref":"Glific.BigQuery.html#decode_bigquery_credential/3","title":"Glific.BigQuery.decode_bigquery_credential/3","type":"function"},{"doc":"Refresh the bigquery schema and update all the older versions.","ref":"Glific.BigQuery.html#do_refresh_the_schema/2","title":"Glific.BigQuery.do_refresh_the_schema/2","type":"function"},{"doc":"Format dates for the bigquery.","ref":"Glific.BigQuery.html#format_date/2","title":"Glific.BigQuery.format_date/2","type":"function"},{"doc":"Format all the json values","ref":"Glific.BigQuery.html#format_json/1","title":"Glific.BigQuery.format_json/1","type":"function"},{"doc":"Insert rows in the bigquery","ref":"Glific.BigQuery.html#make_insert_query/4","title":"Glific.BigQuery.make_insert_query/4","type":"function"},{"doc":"Merge delta and main tables.","ref":"Glific.BigQuery.html#make_job_to_remove_duplicate/2","title":"Glific.BigQuery.make_job_to_remove_duplicate/2","type":"function"},{"doc":"Creating a dataset with messages and contacts as tables","ref":"Glific.BigQuery.html#sync_schema_with_bigquery/1","title":"Glific.BigQuery.sync_schema_with_bigquery/1","type":"function"},{"doc":"Book keeping table to keep track of the last job that we processed from the messages belonging to the organization","ref":"Glific.BigQuery.BigQueryJob.html","title":"Glific.BigQuery.BigQueryJob","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.BigQuery.BigQueryJob.html#changeset/2","title":"Glific.BigQuery.BigQueryJob.changeset/2","type":"function"},{"doc":"","ref":"Glific.BigQuery.BigQueryJob.html#t:t/0","title":"Glific.BigQuery.BigQueryJob.t/0","type":"type"},{"doc":"Process the message table for each organization. Chunk number of messages in groups of 128 and create a bigquery Worker Job to deliver the message to the bigquery servers We centralize both the cron job and the worker job in one module","ref":"Glific.BigQuery.BigQueryWorker.html","title":"Glific.BigQuery.BigQueryWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.BigQuery.BigQueryWorker.html#perform/1","title":"Glific.BigQuery.BigQueryWorker.perform/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. we sweep the messages table and queue them up for delivery to bigquery","ref":"Glific.BigQuery.BigQueryWorker.html#perform_periodic/1","title":"Glific.BigQuery.BigQueryWorker.perform_periodic/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. We updates existing tables","ref":"Glific.BigQuery.BigQueryWorker.html#periodic_updates/1","title":"Glific.BigQuery.BigQueryWorker.periodic_updates/1","type":"function"},{"doc":"Schema for tables to be created for a dataset","ref":"Glific.BigQuery.Schema.html","title":"Glific.BigQuery.Schema","type":"module"},{"doc":"Schema for contact history table","ref":"Glific.BigQuery.Schema.html#contact_history_schema/0","title":"Glific.BigQuery.Schema.contact_history_schema/0","type":"function"},{"doc":"Schema for contacts table","ref":"Glific.BigQuery.Schema.html#contact_schema/0","title":"Glific.BigQuery.Schema.contact_schema/0","type":"function"},{"doc":"Procedure for flat fields","ref":"Glific.BigQuery.Schema.html#flat_fields_procedure/2","title":"Glific.BigQuery.Schema.flat_fields_procedure/2","type":"function"},{"doc":"Schema for flow context schema","ref":"Glific.BigQuery.Schema.html#flow_context_schema/0","title":"Glific.BigQuery.Schema.flow_context_schema/0","type":"function"},{"doc":"Schema for flow count table","ref":"Glific.BigQuery.Schema.html#flow_count_schema/0","title":"Glific.BigQuery.Schema.flow_count_schema/0","type":"function"},{"doc":"Schema for flow results table","ref":"Glific.BigQuery.Schema.html#flow_result_schema/0","title":"Glific.BigQuery.Schema.flow_result_schema/0","type":"function"},{"doc":"Schema for flows table","ref":"Glific.BigQuery.Schema.html#flow_schema/0","title":"Glific.BigQuery.Schema.flow_schema/0","type":"function"},{"doc":"Schema for message conversation table","ref":"Glific.BigQuery.Schema.html#message_conversation_schema/0","title":"Glific.BigQuery.Schema.message_conversation_schema/0","type":"function"},{"doc":"Schema for messages table","ref":"Glific.BigQuery.Schema.html#message_schema/0","title":"Glific.BigQuery.Schema.message_schema/0","type":"function"},{"doc":"Schema for messages media table","ref":"Glific.BigQuery.Schema.html#messages_media_schema/0","title":"Glific.BigQuery.Schema.messages_media_schema/0","type":"function"},{"doc":"Schema for profile table","ref":"Glific.BigQuery.Schema.html#profile_schema/0","title":"Glific.BigQuery.Schema.profile_schema/0","type":"function"},{"doc":"Schema for the stats_global_schema table","ref":"Glific.BigQuery.Schema.html#stats_all_schema/0","title":"Glific.BigQuery.Schema.stats_all_schema/0","type":"function"},{"doc":"Schema for stats_schema table","ref":"Glific.BigQuery.Schema.html#stats_schema/0","title":"Glific.BigQuery.Schema.stats_schema/0","type":"function"},{"doc":"Represent a menu interpreted from the CSV. Each Menu item either sends a content message or sends a sub-menu. A menu is an array of menu items","ref":"Glific.CSV.Content.html","title":"Glific.CSV.Content","type":"module"},{"doc":"","ref":"Glific.CSV.Content.html#t:t/0","title":"Glific.CSV.Content.t/0","type":"type"},{"doc":"First implemenetation to convert sheets to flows using a menu structure and UUID","ref":"Glific.CSV.File.html","title":"Glific.CSV.File","type":"module"},{"doc":"Given a header, extract the indexes of the language, menu and content items which helps us when parsing each row","ref":"Glific.CSV.File.html#parse_header/1","title":"Glific.CSV.File.parse_header/1","type":"function"},{"doc":"Read a csv file, and split it up into a bunch of tuples that we are interested in. Assuming that the csv file is valid for now","ref":"Glific.CSV.File.html#process_csv_file/3","title":"Glific.CSV.File.process_csv_file/3","type":"function"},{"doc":"","ref":"Glific.CSV.File.html#t:t/0","title":"Glific.CSV.File.t/0","type":"type"},{"doc":"Given a CSV model, and a tracking shortcode, generate the json flow for the CSV incorporating the UUID's used in previous conversions. Store the latest UUID mapping back in the database","ref":"Glific.CSV.Flow.html","title":"Glific.CSV.Flow","type":"module"},{"doc":"Given a menu + content structure, generate the flow for it that matches floweditor input","ref":"Glific.CSV.Flow.html#gen_flow/3","title":"Glific.CSV.Flow.gen_flow/3","type":"function"},{"doc":"Represent a menu interpreted from the CSV. Each Menu item either sends a content message or sends a sub-menu. A menu is an array of menu items","ref":"Glific.CSV.Menu.html","title":"Glific.CSV.Menu","type":"module"},{"doc":"","ref":"Glific.CSV.Menu.html#t:t/0","title":"Glific.CSV.Menu.t/0","type":"type"},{"doc":"Wrapper to allow each organization to modify how the templates are assembled. We will store this either in the DB and/or in the Flow CSV. For now, for experimental purposes we will store it in code :)","ref":"Glific.CSV.Template.html","title":"Glific.CSV.Template","type":"module"},{"doc":"Given a template type and a language, returns the template to stich together the items from the CSV","ref":"Glific.CSV.Template.html#get_template/2","title":"Glific.CSV.Template.get_template/2","type":"function"},{"doc":"Glific Cache management","ref":"Glific.Caches.html","title":"Glific.Caches","type":"module"},{"doc":"Get a cached value based on a key with fallback","ref":"Glific.Caches.html#fetch/3","title":"Glific.Caches.fetch/3","type":"function"},{"doc":"Get a cached value based on a key","ref":"Glific.Caches.html#get/3","title":"Glific.Caches.get/3","type":"function"},{"doc":"Retrieve a global value from the cache global scope","ref":"Glific.Caches.html#get_global/1","title":"Glific.Caches.get_global/1","type":"function"},{"doc":"Set a global value, ttl is in number of hours For global keys, we expect relatively short ttls","ref":"Glific.Caches.html#put_global/3","title":"Glific.Caches.put_global/3","type":"function"},{"doc":"Remove a value from the cache","ref":"Glific.Caches.html#remove/2","title":"Glific.Caches.remove/2","type":"function"},{"doc":"The cache API behaviour","ref":"Glific.Caches.CacheBehaviour.html","title":"Glific.Caches.CacheBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:fetch/3","title":"Glific.Caches.CacheBehaviour.fetch/3","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:get/2","title":"Glific.Caches.CacheBehaviour.get/2","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:remove/2","title":"Glific.Caches.CacheBehaviour.remove/2","type":"callback"},{"doc":"","ref":"Glific.Caches.CacheBehaviour.html#c:set/4","title":"Glific.Caches.CacheBehaviour.set/4","type":"callback"},{"doc":"Wrapper module that allows us to invoke organization specific callback functions to tweak the way the system handles things. This allows clients to override functionality in a similar manner to plugins wordpress. At some point we will move this to a more extensible scheme, which is as yet undetermined","ref":"Glific.Clients.html","title":"Glific.Clients","type":"module"},{"doc":"Programmatially block clients based on organization needs. Use case could be: Allow only numbers from India and US","ref":"Glific.Clients.html#blocked?/2","title":"Glific.Clients.blocked?/2","type":"function"},{"doc":"Allow an organization to dynamically select which contact the broadcast message should go to. This gives NGOs more flexibility when building flows","ref":"Glific.Clients.html#broadcast/3","title":"Glific.Clients.broadcast/3","type":"function"},{"doc":"Allow an organization to ran a glific functions at a daily basis.","ref":"Glific.Clients.html#daily_tasks/1","title":"Glific.Clients.daily_tasks/1","type":"function"},{"doc":"Overwrite the default GCS storage bucket","ref":"Glific.Clients.html#gcs_file_name/1","title":"Glific.Clients.gcs_file_name/1","type":"function"},{"doc":"Allow an organization to ran a glific functions on a weekly basis.","ref":"Glific.Clients.html#hourly_tasks/1","title":"Glific.Clients.hourly_tasks/1","type":"function"},{"doc":"Allow an organization to add additional conditions on starting a trigger This allows an org to add a daily trigger which is executed only on some days of the week","ref":"Glific.Clients.html#trigger_condition/1","title":"Glific.Clients.trigger_condition/1","type":"function"},{"doc":"Allow an organization to use glific functions to implement webhooks. A faster way of modifying the DB and doing some advanced stuff in an easy manner","ref":"Glific.Clients.html#webhook/2","title":"Glific.Clients.webhook/2","type":"function"},{"doc":"Allow an organization to ran a glific functions on a weekly basis.","ref":"Glific.Clients.html#weekly_tasks/1","title":"Glific.Clients.weekly_tasks/1","type":"function"},{"doc":"Custom code extenison for ArogyaWorld","ref":"Glific.Clients.ArogyaWorld.html","title":"Glific.Clients.ArogyaWorld","type":"module"},{"doc":"add data that needs to be sent to the database","ref":"Glific.Clients.ArogyaWorld.html#add_data_from_csv/4","title":"Glific.Clients.ArogyaWorld.add_data_from_csv/4","type":"function"},{"doc":"adds the weekly dynamic data loaded from the sheet based on current week","ref":"Glific.Clients.ArogyaWorld.html#add_weekly_dynamic_data/3","title":"Glific.Clients.ArogyaWorld.add_weekly_dynamic_data/3","type":"function"},{"doc":"Clean static weekly data from the CSV file.","ref":"Glific.Clients.ArogyaWorld.html#cleanup_static_data/2","title":"Glific.Clients.ArogyaWorld.cleanup_static_data/2","type":"function"},{"doc":"Clean week data from the CSV file.","ref":"Glific.Clients.ArogyaWorld.html#cleanup_week_data/2","title":"Glific.Clients.ArogyaWorld.cleanup_week_data/2","type":"function"},{"doc":"Get the messages based on flow label","ref":"Glific.Clients.ArogyaWorld.html#get_messages_by_flow_label/1","title":"Glific.Clients.ArogyaWorld.get_messages_by_flow_label/1","type":"function"},{"doc":"Return the question id based on the label","ref":"Glific.Clients.ArogyaWorld.html#get_question_id/1","title":"Glific.Clients.ArogyaWorld.get_question_id/1","type":"function"},{"doc":"Return the response of the question for a contact","ref":"Glific.Clients.ArogyaWorld.html#get_response/2","title":"Glific.Clients.ArogyaWorld.get_response/2","type":"function"},{"doc":"Return the response score based on the body","ref":"Glific.Clients.ArogyaWorld.html#get_response_score/3","title":"Glific.Clients.ArogyaWorld.get_response_score/3","type":"function"},{"doc":"Get response message based on day and week","ref":"Glific.Clients.ArogyaWorld.html#get_responses_by_week_and_day/3","title":"Glific.Clients.ArogyaWorld.get_responses_by_week_and_day/3","type":"function"},{"doc":"Hourly task jobs for the ArogyaWorld","ref":"Glific.Clients.ArogyaWorld.html#hourly_tasks/1","title":"Glific.Clients.ArogyaWorld.hourly_tasks/1","type":"function"},{"doc":"Run this function on the initial load","ref":"Glific.Clients.ArogyaWorld.html#initial_load/1","title":"Glific.Clients.ArogyaWorld.initial_load/1","type":"function"},{"doc":"load participant files from gcs","ref":"Glific.Clients.ArogyaWorld.html#load_participant_file/2","title":"Glific.Clients.ArogyaWorld.load_participant_file/2","type":"function"},{"doc":"message mapping to HSM UUID","ref":"Glific.Clients.ArogyaWorld.html#message_hsm_mapping/2","title":"Glific.Clients.ArogyaWorld.message_hsm_mapping/2","type":"function"},{"doc":"question mapping to HSM UUID","ref":"Glific.Clients.ArogyaWorld.html#question_hsm_mapping/2","title":"Glific.Clients.ArogyaWorld.question_hsm_mapping/2","type":"function"},{"doc":"response to score mapping","ref":"Glific.Clients.ArogyaWorld.html#response_score_mapping/2","title":"Glific.Clients.ArogyaWorld.response_score_mapping/2","type":"function"},{"doc":"creates the static data map that needs to be sent to users","ref":"Glific.Clients.ArogyaWorld.html#static_message_schedule_map/2","title":"Glific.Clients.ArogyaWorld.static_message_schedule_map/2","type":"function"},{"doc":"get template form EEx without variables","ref":"Glific.Clients.ArogyaWorld.html#template/1","title":"Glific.Clients.ArogyaWorld.template/1","type":"function"},{"doc":"get template form EEx based on variables","ref":"Glific.Clients.ArogyaWorld.html#template/2","title":"Glific.Clients.ArogyaWorld.template/2","type":"function"},{"doc":"Conditionally execute the trigger based on: ID, Week, Day.","ref":"Glific.Clients.ArogyaWorld.html#trigger_condition/1","title":"Glific.Clients.ArogyaWorld.trigger_condition/1","type":"function"},{"doc":"Create a file in GCS bucket for candidate response","ref":"Glific.Clients.ArogyaWorld.html#upload_participant_responses/2","title":"Glific.Clients.ArogyaWorld.upload_participant_responses/2","type":"function"},{"doc":"Webhook functions for the ArogyaWorld","ref":"Glific.Clients.ArogyaWorld.html#webhook/2","title":"Glific.Clients.ArogyaWorld.webhook/2","type":"function"},{"doc":"Fetches data from Plio Bigquery dataset to send reports to users","ref":"Glific.Clients.Avanti.html","title":"Glific.Clients.Avanti","type":"module"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.Avanti.html#webhook/2","title":"Glific.Clients.Avanti.webhook/2","type":"function"},{"doc":"Custom webhook implementation specific to balajanaagraha usecase","ref":"Glific.Clients.Balajanaagraha.html","title":"Glific.Clients.Balajanaagraha","type":"module"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.Balajanaagraha.html#webhook/2","title":"Glific.Clients.Balajanaagraha.webhook/2","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.Bandhu.html","title":"Glific.Clients.Bandhu","type":"module"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.Bandhu.html#webhook/2","title":"Glific.Clients.Bandhu.webhook/2","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.DigitalGreen.html","title":"Glific.Clients.DigitalGreen","type":"module"},{"doc":"A callback function to support daily tasks for the client in the backend.","ref":"Glific.Clients.DigitalGreen.html#daily_tasks/1","title":"Glific.Clients.DigitalGreen.daily_tasks/1","type":"function"},{"doc":"get template for IEX","ref":"Glific.Clients.DigitalGreen.html#send_template/2","title":"Glific.Clients.DigitalGreen.send_template/2","type":"function"},{"doc":"Returns time in second till next defined Timeslot","ref":"Glific.Clients.DigitalGreen.html#time_till_next_slot/1","title":"Glific.Clients.DigitalGreen.time_till_next_slot/1","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.DigitalGreen.html#webhook/2","title":"Glific.Clients.DigitalGreen.webhook/2","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.KEF.html","title":"Glific.Clients.KEF","type":"module"},{"doc":"Generate custom GCS bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.KEF.html#gcs_file_name/1","title":"Glific.Clients.KEF.gcs_file_name/1","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.KEF.html#webhook/2","title":"Glific.Clients.KEF.webhook/2","type":"function"},{"doc":"Custom webhook implementation specific to Lahi usecase","ref":"Glific.Clients.Lahi.html","title":"Glific.Clients.Lahi","type":"module"},{"doc":"Tweak GCS Bucket name based Lahi usecase","ref":"Glific.Clients.Lahi.html#gcs_file_name/1","title":"Glific.Clients.Lahi.gcs_file_name/1","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.Lahi.html#webhook/2","title":"Glific.Clients.Lahi.webhook/2","type":"function"},{"doc":"Custom webhook implementation specific to MukkaMaar usecase","ref":"Glific.Clients.MukkaMaar.html","title":"Glific.Clients.MukkaMaar","type":"module"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.MukkaMaar.html#webhook/2","title":"Glific.Clients.MukkaMaar.webhook/2","type":"function"},{"doc":"Custom webhook implementation specific to NayiDisha usecase","ref":"Glific.Clients.NayiDisha.html","title":"Glific.Clients.NayiDisha","type":"module"},{"doc":"get template for IEX","ref":"Glific.Clients.NayiDisha.html#template/2","title":"Glific.Clients.NayiDisha.template/2","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.NayiDisha.html#webhook/2","title":"Glific.Clients.NayiDisha.webhook/2","type":"function"},{"doc":"Custom webhook implementation specific to NayiDisha usecase","ref":"Glific.Clients.NayiDisha.Data.html","title":"Glific.Clients.NayiDisha.Data","type":"module"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.NayiDisha.Data.html#load/0","title":"Glific.Clients.NayiDisha.Data.load/0","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.ReapBenefit.html","title":"Glific.Clients.ReapBenefit","type":"module"},{"doc":"In the case of RB we retrive the flow name of the object (id any) and set that as the directory name","ref":"Glific.Clients.ReapBenefit.html#gcs_file_name/1","title":"Glific.Clients.ReapBenefit.gcs_file_name/1","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.ReapBenefit.html#webhook/2","title":"Glific.Clients.ReapBenefit.webhook/2","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.Sol.html","title":"Glific.Clients.Sol","type":"module"},{"doc":"In the case of SOL we retrive the name of the contact is in and store and set the remote name to be a sub-directory under that name We add a contact id suffix to prevent name collisions","ref":"Glific.Clients.Sol.html#gcs_file_name/1","title":"Glific.Clients.Sol.gcs_file_name/1","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.Sol.html#webhook/2","title":"Glific.Clients.Sol.webhook/2","type":"function"},{"doc":"Example implementation of survey computation for STiR Glific.Clients.Stir.compute_art_content(res)","ref":"Glific.Clients.Stir.html","title":"Glific.Clients.Stir","type":"module"},{"doc":"Return art content","ref":"Glific.Clients.Stir.html#compute_art_content/1","title":"Glific.Clients.Stir.compute_art_content/1","type":"function"},{"doc":"Return integer depending on number of n as response in messages","ref":"Glific.Clients.Stir.html#compute_art_results/1","title":"Glific.Clients.Stir.compute_art_results/1","type":"function"},{"doc":"Return total score","ref":"Glific.Clients.Stir.html#compute_survey_score/1","title":"Glific.Clients.Stir.compute_survey_score/1","type":"function"},{"doc":"Get a GCS file name for specific user","ref":"Glific.Clients.Stir.html#gcs_file_name/1","title":"Glific.Clients.Stir.gcs_file_name/1","type":"function"},{"doc":"This module will focus on suno sunao usecase","ref":"Glific.Clients.SunoSunao.html","title":"Glific.Clients.SunoSunao","type":"module"},{"doc":"This is a webhook which will call into google speech to text api","ref":"Glific.Clients.SunoSunao.html#webhook/2","title":"Glific.Clients.SunoSunao.webhook/2","type":"function"},{"doc":"Tweak GCS Bucket name based on group that the contact is in (if any)","ref":"Glific.Clients.Tap.html","title":"Glific.Clients.Tap","type":"module"},{"doc":"Fix the contact name issue","ref":"Glific.Clients.Tap.html#fix_contact_name/0","title":"Glific.Clients.Tap.fix_contact_name/0","type":"function"},{"doc":"In the case of TAP we retrive the first group the contact is in and store and set the remote name to be a sub-directory under that group (if one exists)","ref":"Glific.Clients.Tap.html#gcs_file_name/1","title":"Glific.Clients.Tap.gcs_file_name/1","type":"function"},{"doc":"Check if a contact has more profiles and add that to message.","ref":"Glific.Clients.Tap.html#maybe_add_profile_activity/3","title":"Glific.Clients.Tap.maybe_add_profile_activity/3","type":"function"},{"doc":"get template form EEx without variables","ref":"Glific.Clients.Tap.html#template/2","title":"Glific.Clients.Tap.template/2","type":"function"},{"doc":"Update the fields for all the profiles.","ref":"Glific.Clients.Tap.html#update_all_profile_fields/4","title":"Glific.Clients.Tap.update_all_profile_fields/4","type":"function"},{"doc":"Create a webhook with different signatures, so we can easily implement additional functionality as needed","ref":"Glific.Clients.Tap.html#webhook/2","title":"Glific.Clients.Tap.webhook/2","type":"function"},{"doc":"Glific Cloak migration management on changing encryption keys","ref":"Glific.CloakMigration.html","title":"Glific.CloakMigration","type":"module"},{"doc":"migrate to new key for encryption","ref":"Glific.CloakMigration.html#cloak_migrate/0","title":"Glific.CloakMigration.cloak_migrate/0","type":"function"},{"doc":"Glific interface for all provider communication","ref":"Glific.Communications.html","title":"Glific.Communications","type":"module"},{"doc":"Get the current provider handler based on the config","ref":"Glific.Communications.html#provider_handler/1","title":"Glific.Communications.provider_handler/1","type":"function"},{"doc":"Get the current provider worker based on the organization | Config | Defaultconfig","ref":"Glific.Communications.html#provider_worker/1","title":"Glific.Communications.provider_worker/1","type":"function"},{"doc":"Unified function to publish data on the graphql subscription endpoint. This is still looking for a place to actually reside. This is a good next stop for now For now the data types are Message and all join Tag tables","ref":"Glific.Communications.html#publish_data/3","title":"Glific.Communications.publish_data/3","type":"function"},{"doc":"This module provides a simple interface for sending emails.","ref":"Glific.Communications.Mailer.html","title":"Glific.Communications.Mailer","type":"module"},{"doc":"All notification differ only in subject and content, Lets write a common function and centralize notification code","ref":"Glific.Communications.Mailer.html#common_send/4","title":"Glific.Communications.Mailer.common_send/4","type":"function"},{"doc":"","ref":"Glific.Communications.Mailer.html#deliver!/2","title":"Glific.Communications.Mailer.deliver!/2","type":"function"},{"doc":"","ref":"Glific.Communications.Mailer.html#deliver/2","title":"Glific.Communications.Mailer.deliver/2","type":"function"},{"doc":"","ref":"Glific.Communications.Mailer.html#deliver_many/2","title":"Glific.Communications.Mailer.deliver_many/2","type":"function"},{"doc":"Support CC for all the emails","ref":"Glific.Communications.Mailer.html#glific_support/0","title":"Glific.Communications.Mailer.glific_support/0","type":"function"},{"doc":"Sends an email to the given recipient.","ref":"Glific.Communications.Mailer.html#send/2","title":"Glific.Communications.Mailer.send/2","type":"function"},{"doc":"Default sender for all the emails","ref":"Glific.Communications.Mailer.html#sender/0","title":"Glific.Communications.Mailer.sender/0","type":"function"},{"doc":"The Message Communication Context, which encapsulates and manages tags and the related join tables.","ref":"Glific.Communications.Message.html","title":"Glific.Communications.Message","type":"module"},{"doc":"Callback in case of any error while sending the message","ref":"Glific.Communications.Message.html#handle_error_response/2","title":"Glific.Communications.Message.handle_error_response/2","type":"function"},{"doc":"Callback when message send successfully.","ref":"Glific.Communications.Message.html#handle_success_response/2","title":"Glific.Communications.Message.handle_success_response/2","type":"function"},{"doc":"Callback when we receive a message from whats app","ref":"Glific.Communications.Message.html#receive_message/2","title":"Glific.Communications.Message.receive_message/2","type":"function"},{"doc":"Send message to receiver using define provider.","ref":"Glific.Communications.Message.html#send_message/2","title":"Glific.Communications.Message.send_message/2","type":"function"},{"doc":"Callback to update the provider status for a message","ref":"Glific.Communications.Message.html#update_bsp_status/3","title":"Glific.Communications.Message.update_bsp_status/3","type":"function"},{"doc":"The Contacts context.","ref":"Glific.Contacts.html","title":"Glific.Contacts","type":"module"},{"doc":"Add permissioning specific to groups, in this case we want to restrict the visibility of groups that the user can see","ref":"Glific.Contacts.html#add_permission/2","title":"Glific.Contacts.add_permission/2","type":"function"},{"doc":"Check if we can send a message to the contact","ref":"Glific.Contacts.html#can_send_message_to?/1","title":"Glific.Contacts.can_send_message_to?/1","type":"function"},{"doc":"Check if we can send a session message to the contact","ref":"Glific.Contacts.html#can_send_message_to?/2","title":"Glific.Contacts.can_send_message_to?/2","type":"function"},{"doc":"Check if we can send a session message to the contact with some extra perameters Specifically designed for when we are trying to optin an opted out contact","ref":"Glific.Contacts.html#can_send_message_to?/3","title":"Glific.Contacts.can_send_message_to?/3","type":"function"},{"doc":"create new contact histroy record.","ref":"Glific.Contacts.html#capture_history/3","title":"Glific.Contacts.capture_history/3","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking contact changes. Examples iex&gt; change_contact ( contact ) % Ecto.Changeset { data : % Contact { } }","ref":"Glific.Contacts.html#change_contact/2","title":"Glific.Contacts.change_contact/2","type":"function"},{"doc":"Get contact's current location","ref":"Glific.Contacts.html#contact_location/1","title":"Glific.Contacts.contact_location/1","type":"function"},{"doc":"Update DB fields when contact opted in and ignore if it's blocked","ref":"Glific.Contacts.html#contact_opted_in/4","title":"Glific.Contacts.contact_opted_in/4","type":"function"},{"doc":"Update DB fields when contact opted out","ref":"Glific.Contacts.html#contact_opted_out/4","title":"Glific.Contacts.contact_opted_out/4","type":"function"},{"doc":"count contact history","ref":"Glific.Contacts.html#count_contact_history/1","title":"Glific.Contacts.count_contact_history/1","type":"function"},{"doc":"Return the count of contacts, using the same filter as list_contacts","ref":"Glific.Contacts.html#count_contacts/1","title":"Glific.Contacts.count_contacts/1","type":"function"},{"doc":"Creates a contact. Examples iex&gt; create_contact ( %{ field : value } ) { :ok , % Contact { } } iex&gt; create_contact ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Contacts.html#create_contact/1","title":"Glific.Contacts.create_contact/1","type":"function"},{"doc":"Creates a location. Examples iex&gt; Glific.Contacts . create_location ( %{ name : value } ) { :ok , % Glific.Contacts.Location { } } iex&gt; Glific.Contacts . create_location ( %{ bad_field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Contacts.html#create_location/1","title":"Glific.Contacts.create_location/1","type":"function"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#delete!/3","title":"Glific.Contacts.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#delete/3","title":"Glific.Contacts.delete/3","type":"function"},{"doc":"Deletes a contact. Examples iex&gt; delete_contact ( contact ) { :ok , % Contact { } } iex&gt; delete_contact ( contact ) { :error , % Ecto.Changeset { } }","ref":"Glific.Contacts.html#delete_contact/1","title":"Glific.Contacts.delete_contact/1","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#get!/3","title":"Glific.Contacts.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#get/3","title":"Glific.Contacts.get/3","type":"function"},{"doc":"Gets a single contact. Raises Ecto.NoResultsError if the Contact does not exist. Examples iex&gt; get_contact! ( 123 ) % Contact { } iex&gt; get_contact! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Contacts.html#get_contact!/1","title":"Glific.Contacts.get_contact!/1","type":"function"},{"doc":"Gets a single contact by phone nunmber. Raises Ecto.NoResultsError if the Contact does not exist. Examples iex&gt; get_contact_by_phone! ( &quot;9876543210_1&quot; ) % Contact { } iex&gt; get_contact! ( &quot;123&quot; ) ** (Ecto.NoResultsError)","ref":"Glific.Contacts.html#get_contact_by_phone!/1","title":"Glific.Contacts.get_contact_by_phone!/1","type":"function"},{"doc":"Convert contact field to map for variable substitution","ref":"Glific.Contacts.html#get_contact_field_map/1","title":"Glific.Contacts.get_contact_field_map/1","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#head!/3","title":"Glific.Contacts.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#head/3","title":"Glific.Contacts.head/3","type":"function"},{"doc":"check if contact is blocked or not","ref":"Glific.Contacts.html#is_contact_blocked?/1","title":"Glific.Contacts.is_contact_blocked?/1","type":"function"},{"doc":"Check if this contact id is a new contact. In general, we should always retrive as little as possible from the DB","ref":"Glific.Contacts.html#is_new_contact/1","title":"Glific.Contacts.is_new_contact/1","type":"function"},{"doc":"Checks if the contact passed in argument is organization root contact or not","ref":"Glific.Contacts.html#is_org_root_contact?/1","title":"Glific.Contacts.is_org_root_contact?/1","type":"function"},{"doc":"Lets centralize the code to detect simulator messages and interaction","ref":"Glific.Contacts.html#is_simulator_contact?/1","title":"Glific.Contacts.is_simulator_contact?/1","type":"function"},{"doc":"Get contact history","ref":"Glific.Contacts.html#list_contact_history/1","title":"Glific.Contacts.list_contact_history/1","type":"function"},{"doc":"Returns the list of contacts. Examples iex&gt; list_contacts ( ) [ % Contact { } , ... ] Get the list of contacts filtered by various search options Include contacts only if within list of groups Include contacts only if have list of tags","ref":"Glific.Contacts.html#list_contacts/1","title":"Glific.Contacts.list_contacts/1","type":"function"},{"doc":"Return the list of contacts who are also users","ref":"Glific.Contacts.html#list_user_contacts/1","title":"Glific.Contacts.list_user_contacts/1","type":"function"},{"doc":"This function is called by the messaging framework for all incoming messages, hence might be a good candidate to maintain a contact level cache at some point We use a fetch followed by create, to avoid the explosion in the id namespace. We also avoid updating the contact to skip the DB call, and only do so if the name has changed","ref":"Glific.Contacts.html#maybe_create_contact/1","title":"Glific.Contacts.maybe_create_contact/1","type":"function"},{"doc":"Opt out a contact if the provider returns an error code about Number not exisiting or not on whatsapp","ref":"Glific.Contacts.html#number_does_not_exist/2","title":"Glific.Contacts.number_does_not_exist/2","type":"function"},{"doc":"Upload a contact phone as opted in","ref":"Glific.Contacts.html#optin_contact/1","title":"Glific.Contacts.optin_contact/1","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#options!/3","title":"Glific.Contacts.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#options/3","title":"Glific.Contacts.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Contacts.html#patch!/4","title":"Glific.Contacts.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Contacts.html#patch/4","title":"Glific.Contacts.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Contacts.html#post!/4","title":"Glific.Contacts.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Contacts.html#post/4","title":"Glific.Contacts.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Contacts.html#put!/4","title":"Glific.Contacts.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Contacts.html#put/4","title":"Glific.Contacts.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Contacts.html#request!/2","title":"Glific.Contacts.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#request/2","title":"Glific.Contacts.request/2","type":"function"},{"doc":"Set session status for opted in and opted out contacts","ref":"Glific.Contacts.html#set_session_status/2","title":"Glific.Contacts.set_session_status/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#trace!/3","title":"Glific.Contacts.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Contacts.html#trace/3","title":"Glific.Contacts.trace/3","type":"function"},{"doc":"Updates a contact. Examples iex&gt; update_contact ( contact , %{ field : new_value } ) { :ok , % Contact { } } iex&gt; update_contact ( contact , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Contacts.html#update_contact/2","title":"Glific.Contacts.update_contact/2","type":"function"},{"doc":"Invoked from cron jobs to mass update the status of contacts belonging to a specific organization In this case, if we can, we might want to do it across the entire DB since the update is across all organizations. The main issue might be the row level security of postgres and how it ties in. For now, lets stick to per organization","ref":"Glific.Contacts.html#update_contact_status/2","title":"Glific.Contacts.update_contact_status/2","type":"function"},{"doc":"Gets or Creates a Contact based on the unique indexes in the table. If there is a match it returns the existing contact, else it creates a new one","ref":"Glific.Contacts.html#upsert/1","title":"Glific.Contacts.upsert/1","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Contacts.html#t:option/0","title":"Glific.Contacts.option/0","type":"type"},{"doc":"The minimal wrapper for the base Contact structure","ref":"Glific.Contacts.Contact.html","title":"Glific.Contacts.Contact","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.Contact.html#changeset/2","title":"Glific.Contacts.Contact.changeset/2","type":"function"},{"doc":"Populate virtual field of masked phone number","ref":"Glific.Contacts.Contact.html#populate_masked_phone/1","title":"Glific.Contacts.Contact.populate_masked_phone/1","type":"function"},{"doc":"","ref":"Glific.Contacts.Contact.html#t:t/0","title":"Glific.Contacts.Contact.t/0","type":"type"},{"doc":"The minimal wrapper for the base Contact structure","ref":"Glific.Contacts.ContactHistory.html","title":"Glific.Contacts.ContactHistory","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.ContactHistory.html#changeset/2","title":"Glific.Contacts.ContactHistory.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.ContactHistory.html#t:t/0","title":"Glific.Contacts.ContactHistory.t/0","type":"type"},{"doc":"The minimal wrapper for the base Contact structure","ref":"Glific.Contacts.ContactsField.html","title":"Glific.Contacts.ContactsField","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.ContactsField.html#changeset/2","title":"Glific.Contacts.ContactsField.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.ContactsField.html#t:t/0","title":"Glific.Contacts.ContactsField.t/0","type":"type"},{"doc":"The Contact Importer Module","ref":"Glific.Contacts.Import.html","title":"Glific.Contacts.Import","type":"module"},{"doc":"Move the existing contacts to a group.","ref":"Glific.Contacts.Import.html#add_contacts_to_group/3","title":"Glific.Contacts.Import.add_contacts_to_group/3","type":"function"},{"doc":"This method allows importing of contacts to a particular organization and group The method takes in a csv file path and adds the contacts to the particular organization and group.","ref":"Glific.Contacts.Import.html#import_contacts/3","title":"Glific.Contacts.Import.import_contacts/3","type":"function"},{"doc":"Current location of a contact","ref":"Glific.Contacts.Location.html","title":"Glific.Contacts.Location","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Contacts.Location.html#changeset/2","title":"Glific.Contacts.Location.changeset/2","type":"function"},{"doc":"","ref":"Glific.Contacts.Location.html#t:t/0","title":"Glific.Contacts.Location.t/0","type":"type"},{"doc":"The main Glific abstraction that exposes the data in a stuctured manner as a set of conversations. For now each contact is associated with one and only one conversation. We will keep the API simple for now, but it is likely to become more complex and will require a fair number of iterations to get right","ref":"Glific.Conversations.html","title":"Glific.Conversations","type":"module"},{"doc":"Adding special offset to calculate recent message based on message number","ref":"Glific.Conversations.html#add_special_offset/4","title":"Glific.Conversations.add_special_offset/4","type":"function"},{"doc":"Returns the last M conversations, each conversation not more than N messages","ref":"Glific.Conversations.html#list_conversations/2","title":"Glific.Conversations.list_conversations/2","type":"function"},{"doc":"The Glific Abstraction to represent the conversation with a user. This unifies a vast majority of the glific data types including: message, contact, and tag","ref":"Glific.Conversations.Conversation.html","title":"Glific.Conversations.Conversation","type":"module"},{"doc":"Create a new conversation. A contact or a group is required for the conversation. Messages can be added later on","ref":"Glific.Conversations.Conversation.html#new/3","title":"Glific.Conversations.Conversation.new/3","type":"function"},{"doc":"","ref":"Glific.Conversations.Conversation.html#t:t/0","title":"Glific.Conversations.Conversation.t/0","type":"type"},{"doc":"The main Glific abstraction that exposes the group conversation data in a stuctured manner as a set of conversations. For now each group is associated with a set of outgoing messages We will keep the API simple for now, but it is likely to become similar to the contact conversations API","ref":"Glific.ConversationsGroup.html","title":"Glific.ConversationsGroup","type":"module"},{"doc":"Returns the last M conversations, each conversation not more than N messages","ref":"Glific.ConversationsGroup.html#list_conversations/2","title":"Glific.ConversationsGroup.list_conversations/2","type":"function"},{"doc":"Module to communicate with DialogFlow v2. This module was taken directly from: https://github.com/resuelve/flowex/ I pulled it into our repository since the comments were in Spanish and it did not seem to be maintained, that we could not use as is. The dependency list was quite old etc.","ref":"Glific.Dialogflow.html","title":"Glific.Dialogflow","type":"module"},{"doc":"Execute a webhook action, could be either get or post for now","ref":"Glific.Dialogflow.html#execute/3","title":"Glific.Dialogflow.execute/3","type":"function"},{"doc":"Get the list of all intents from the NLP agent","ref":"Glific.Dialogflow.html#get_intent_list/1","title":"Glific.Dialogflow.get_intent_list/1","type":"function"},{"doc":"The request controller which sends and parses requests.","ref":"Glific.Dialogflow.html#request/4","title":"Glific.Dialogflow.request/4","type":"function"},{"doc":"The intent object which has the intent information from any classifiers","ref":"Glific.Dialogflow.Intent.html","title":"Glific.Dialogflow.Intent","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Dialogflow.Intent.html#changeset/2","title":"Glific.Dialogflow.Intent.changeset/2","type":"function"},{"doc":"Create an Intent for the NLP framework","ref":"Glific.Dialogflow.Intent.html#create_intent/1","title":"Glific.Dialogflow.Intent.create_intent/1","type":"function"},{"doc":"Get a list of all the intent names.","ref":"Glific.Dialogflow.Intent.html#get_intent_name_list/1","title":"Glific.Dialogflow.Intent.get_intent_name_list/1","type":"function"},{"doc":"","ref":"Glific.Dialogflow.Intent.html#t:t/0","title":"Glific.Dialogflow.Intent.t/0","type":"type"},{"doc":"A worker to handle send message processes","ref":"Glific.Dialogflow.SessionWorker.html","title":"Glific.Dialogflow.SessionWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Dialogflow.SessionWorker.html#perform/1","title":"Glific.Dialogflow.SessionWorker.perform/1","type":"function"},{"doc":"Helper to help manage intents","ref":"Glific.Dialogflow.Sessions.html","title":"Glific.Dialogflow.Sessions","type":"module"},{"doc":"Add message to queue worker to detect the intent","ref":"Glific.Dialogflow.Sessions.html#detect_intent/3","title":"Glific.Dialogflow.Sessions.detect_intent/3","type":"function"},{"doc":"Function to communicate with dialogflow to detect the intent of the request","ref":"Glific.Dialogflow.Sessions.html#make_request/4","title":"Glific.Dialogflow.Sessions.make_request/4","type":"function"},{"doc":"Cloak for encrypting strings","ref":"Glific.Encrypted.Binary.html","title":"Glific.Encrypted.Binary","type":"module"},{"doc":"Cloak for encrypting maps","ref":"Glific.Encrypted.Map.html","title":"Glific.Encrypted.Map","type":"module"},{"doc":"The Enum provides a location for all enum related macros. All the constants that Ecto/Elixir used are exposed here as macros, so other files can invoke them as simple functions","ref":"Glific.Enums.html","title":"Glific.Enums","type":"module"},{"doc":"Lets ensure that the constants evaluate to some expected values Examples iex&gt; Glific.Enums.api_status_const() [:ok, :error] iex&gt; Glific.Enums.contact_status_const() [:blocked, :failed, :invalid, :processing, :valid] iex&gt; Glific.Enums.contact_provider_status_const() [:none, :session, :session_and_hsm, :hsm] iex&gt; Glific.Enums.flow_case_const() [:has_any_word] iex&gt; Glific.Enums.flow_router_const() [:switch] iex&gt; Glific.Enums.flow_action_type_const() [:enter_flow, :send_msg, :set_contact_language, :wait_for_response, :set_contact_field] iex&gt; Glific.Enums.flow_type_const() [:message] iex&gt; Glific.Enums.message_flow_const() [:inbound, :outbound] iex&gt; Glific.Enums.message_status_const() [:sent, :delivered, :enqueued, :error, :read, :received, :contact_opt_out] iex&gt; Glific.Enums.message_type_const() [:audio, :contact, :document, :hsm, :image, :location, :list, :quick_reply, :text, :video, :sticker] iex&gt; Glific.Enums.question_type_const() [:text, :numeric, :date] iex&gt; Glific.Enums.sort_order_const() [:asc, :desc] We also test the ecto enums in this file, since they exist outside a module iex&gt; Glific.Enums.APIStatus. enum_map () Glific.Enums.api_status_const() iex&gt; Glific.Enums.ContactStatus. enum_map () Glific.Enums.contact_status_const() iex&gt; Glific.Enums.ContactProviderStatus. enum_map () Glific.Enums.contact_provider_status_const() iex&gt; Glific.Enums.FlowCase. enum_map () Glific.Enums.flow_case_const() iex&gt; Glific.Enums.FlowRouter. enum_map () Glific.Enums.flow_router_const() iex&gt; Glific.Enums.FlowActionType. enum_map () Glific.Enums.flow_action_type_const() iex&gt; Glific.Enums.FlowType. enum_map () Glific.Enums.flow_type_const() iex&gt; Glific.Enums.MessageFlow. enum_map () Glific.Enums.message_flow_const() iex&gt; Glific.Enums.MessageStatus. enum_map () Glific.Enums.message_status_const() iex&gt; Glific.Enums.MessageType. enum_map () Glific.Enums.message_type_const() iex&gt; Glific.Enums.QuestionType. enum_map () Glific.Enums.question_type_const() iex&gt; Glific.Enums.SortOrder. enum_map () Glific.Enums.sort_order_const() iex&gt; Glific.Enums.ContactFieldValueType. enum_map () Glific.Enums.contact_field_value_type_const() iex&gt; Glific.Enums.ContactFieldScope. enum_map () Glific.Enums.contact_field_scope_const() iex&gt; Glific.Enums.UserRoles. enum_map () Glific.Enums.user_roles_const() iex&gt; Glific.Enums.TemplateButtonType. enum_map () Glific.Enums.template_button_type_const() iex&gt; Glific.Enums.OrganizationStatus. enum_map () Glific.Enums.organization_status_const() iex&gt; Glific.Enums.InteractiveMessageType. enum_map () Glific.Enums.interactive_message_type_const() iex&gt; Glific.Enums.ImportContactsType. enum_map () Glific.Enums.import_contacts_type_const()","ref":"Glific.Enums.html#api_status_const/0","title":"Glific.Enums.api_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_field_scope_const/0","title":"Glific.Enums.contact_field_scope_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_field_value_type_const/0","title":"Glific.Enums.contact_field_value_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_provider_status_const/0","title":"Glific.Enums.contact_provider_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#contact_status_const/0","title":"Glific.Enums.contact_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_action_type_const/0","title":"Glific.Enums.flow_action_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_case_const/0","title":"Glific.Enums.flow_case_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_router_const/0","title":"Glific.Enums.flow_router_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#flow_type_const/0","title":"Glific.Enums.flow_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#import_contacts_type_const/0","title":"Glific.Enums.import_contacts_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#interactive_message_type_const/0","title":"Glific.Enums.interactive_message_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_flow_const/0","title":"Glific.Enums.message_flow_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_status_const/0","title":"Glific.Enums.message_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#message_type_const/0","title":"Glific.Enums.message_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#organization_status_const/0","title":"Glific.Enums.organization_status_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#question_type_const/0","title":"Glific.Enums.question_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#sort_order_const/0","title":"Glific.Enums.sort_order_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#template_button_type_const/0","title":"Glific.Enums.template_button_type_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.html#user_roles_const/0","title":"Glific.Enums.user_roles_const/0","type":"macro"},{"doc":"","ref":"Glific.Enums.APIStatus.html","title":"Glific.Enums.APIStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.APIStatus.html#cast/1","title":"Glific.Enums.APIStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#create_type/0","title":"Glific.Enums.APIStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#drop_type/0","title":"Glific.Enums.APIStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.APIStatus.html#dump/1","title":"Glific.Enums.APIStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.APIStatus.html#embed_as/1","title":"Glific.Enums.APIStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.APIStatus.html#equal?/2","title":"Glific.Enums.APIStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.APIStatus.html#load/1","title":"Glific.Enums.APIStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#schema/0","title":"Glific.Enums.APIStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#schemaless_type/0","title":"Glific.Enums.APIStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.APIStatus.html#type/0","title":"Glific.Enums.APIStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#valid_value?/1","title":"Glific.Enums.APIStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.APIStatus.html#t:t/0","title":"Glific.Enums.APIStatus.t/0","type":"type"},{"doc":"The Enums constant are where all enum values across our entire application should be defined. This is the source of truth for all enums","ref":"Glific.Enums.Constants.html","title":"Glific.Enums.Constants","type":"module"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html","title":"Glific.Enums.ContactFieldScope","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.ContactFieldScope.html#cast/1","title":"Glific.Enums.ContactFieldScope.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#create_type/0","title":"Glific.Enums.ContactFieldScope.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#drop_type/0","title":"Glific.Enums.ContactFieldScope.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.ContactFieldScope.html#dump/1","title":"Glific.Enums.ContactFieldScope.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.ContactFieldScope.html#embed_as/1","title":"Glific.Enums.ContactFieldScope.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.ContactFieldScope.html#equal?/2","title":"Glific.Enums.ContactFieldScope.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.ContactFieldScope.html#load/1","title":"Glific.Enums.ContactFieldScope.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#schema/0","title":"Glific.Enums.ContactFieldScope.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#schemaless_type/0","title":"Glific.Enums.ContactFieldScope.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.ContactFieldScope.html#type/0","title":"Glific.Enums.ContactFieldScope.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#valid_value?/1","title":"Glific.Enums.ContactFieldScope.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldScope.html#t:t/0","title":"Glific.Enums.ContactFieldScope.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html","title":"Glific.Enums.ContactFieldValueType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.ContactFieldValueType.html#cast/1","title":"Glific.Enums.ContactFieldValueType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#create_type/0","title":"Glific.Enums.ContactFieldValueType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#drop_type/0","title":"Glific.Enums.ContactFieldValueType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.ContactFieldValueType.html#dump/1","title":"Glific.Enums.ContactFieldValueType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.ContactFieldValueType.html#embed_as/1","title":"Glific.Enums.ContactFieldValueType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.ContactFieldValueType.html#equal?/2","title":"Glific.Enums.ContactFieldValueType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.ContactFieldValueType.html#load/1","title":"Glific.Enums.ContactFieldValueType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#schema/0","title":"Glific.Enums.ContactFieldValueType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#schemaless_type/0","title":"Glific.Enums.ContactFieldValueType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.ContactFieldValueType.html#type/0","title":"Glific.Enums.ContactFieldValueType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#valid_value?/1","title":"Glific.Enums.ContactFieldValueType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactFieldValueType.html#t:t/0","title":"Glific.Enums.ContactFieldValueType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html","title":"Glific.Enums.ContactProviderStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.ContactProviderStatus.html#cast/1","title":"Glific.Enums.ContactProviderStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#create_type/0","title":"Glific.Enums.ContactProviderStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#drop_type/0","title":"Glific.Enums.ContactProviderStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.ContactProviderStatus.html#dump/1","title":"Glific.Enums.ContactProviderStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.ContactProviderStatus.html#embed_as/1","title":"Glific.Enums.ContactProviderStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.ContactProviderStatus.html#equal?/2","title":"Glific.Enums.ContactProviderStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.ContactProviderStatus.html#load/1","title":"Glific.Enums.ContactProviderStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#schema/0","title":"Glific.Enums.ContactProviderStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#schemaless_type/0","title":"Glific.Enums.ContactProviderStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.ContactProviderStatus.html#type/0","title":"Glific.Enums.ContactProviderStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#valid_value?/1","title":"Glific.Enums.ContactProviderStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactProviderStatus.html#t:t/0","title":"Glific.Enums.ContactProviderStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ContactStatus.html","title":"Glific.Enums.ContactStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.ContactStatus.html#cast/1","title":"Glific.Enums.ContactStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#create_type/0","title":"Glific.Enums.ContactStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#drop_type/0","title":"Glific.Enums.ContactStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.ContactStatus.html#dump/1","title":"Glific.Enums.ContactStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.ContactStatus.html#embed_as/1","title":"Glific.Enums.ContactStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.ContactStatus.html#equal?/2","title":"Glific.Enums.ContactStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.ContactStatus.html#load/1","title":"Glific.Enums.ContactStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#schema/0","title":"Glific.Enums.ContactStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#schemaless_type/0","title":"Glific.Enums.ContactStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.ContactStatus.html#type/0","title":"Glific.Enums.ContactStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#valid_value?/1","title":"Glific.Enums.ContactStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ContactStatus.html#t:t/0","title":"Glific.Enums.ContactStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowActionType.html","title":"Glific.Enums.FlowActionType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.FlowActionType.html#cast/1","title":"Glific.Enums.FlowActionType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#create_type/0","title":"Glific.Enums.FlowActionType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#drop_type/0","title":"Glific.Enums.FlowActionType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.FlowActionType.html#dump/1","title":"Glific.Enums.FlowActionType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.FlowActionType.html#embed_as/1","title":"Glific.Enums.FlowActionType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.FlowActionType.html#equal?/2","title":"Glific.Enums.FlowActionType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.FlowActionType.html#load/1","title":"Glific.Enums.FlowActionType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#schema/0","title":"Glific.Enums.FlowActionType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#schemaless_type/0","title":"Glific.Enums.FlowActionType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.FlowActionType.html#type/0","title":"Glific.Enums.FlowActionType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#valid_value?/1","title":"Glific.Enums.FlowActionType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowActionType.html#t:t/0","title":"Glific.Enums.FlowActionType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowCase.html","title":"Glific.Enums.FlowCase","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.FlowCase.html#cast/1","title":"Glific.Enums.FlowCase.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#create_type/0","title":"Glific.Enums.FlowCase.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#drop_type/0","title":"Glific.Enums.FlowCase.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.FlowCase.html#dump/1","title":"Glific.Enums.FlowCase.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.FlowCase.html#embed_as/1","title":"Glific.Enums.FlowCase.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.FlowCase.html#equal?/2","title":"Glific.Enums.FlowCase.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.FlowCase.html#load/1","title":"Glific.Enums.FlowCase.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#schema/0","title":"Glific.Enums.FlowCase.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#schemaless_type/0","title":"Glific.Enums.FlowCase.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.FlowCase.html#type/0","title":"Glific.Enums.FlowCase.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#valid_value?/1","title":"Glific.Enums.FlowCase.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowCase.html#t:t/0","title":"Glific.Enums.FlowCase.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowRouter.html","title":"Glific.Enums.FlowRouter","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.FlowRouter.html#cast/1","title":"Glific.Enums.FlowRouter.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#create_type/0","title":"Glific.Enums.FlowRouter.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#drop_type/0","title":"Glific.Enums.FlowRouter.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.FlowRouter.html#dump/1","title":"Glific.Enums.FlowRouter.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.FlowRouter.html#embed_as/1","title":"Glific.Enums.FlowRouter.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.FlowRouter.html#equal?/2","title":"Glific.Enums.FlowRouter.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.FlowRouter.html#load/1","title":"Glific.Enums.FlowRouter.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#schema/0","title":"Glific.Enums.FlowRouter.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#schemaless_type/0","title":"Glific.Enums.FlowRouter.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.FlowRouter.html#type/0","title":"Glific.Enums.FlowRouter.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#valid_value?/1","title":"Glific.Enums.FlowRouter.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowRouter.html#t:t/0","title":"Glific.Enums.FlowRouter.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.FlowType.html","title":"Glific.Enums.FlowType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.FlowType.html#cast/1","title":"Glific.Enums.FlowType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#create_type/0","title":"Glific.Enums.FlowType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#drop_type/0","title":"Glific.Enums.FlowType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.FlowType.html#dump/1","title":"Glific.Enums.FlowType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.FlowType.html#embed_as/1","title":"Glific.Enums.FlowType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.FlowType.html#equal?/2","title":"Glific.Enums.FlowType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.FlowType.html#load/1","title":"Glific.Enums.FlowType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#schema/0","title":"Glific.Enums.FlowType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#schemaless_type/0","title":"Glific.Enums.FlowType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.FlowType.html#type/0","title":"Glific.Enums.FlowType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#valid_value?/1","title":"Glific.Enums.FlowType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.FlowType.html#t:t/0","title":"Glific.Enums.FlowType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html","title":"Glific.Enums.ImportContactsType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.ImportContactsType.html#cast/1","title":"Glific.Enums.ImportContactsType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html#create_type/0","title":"Glific.Enums.ImportContactsType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html#drop_type/0","title":"Glific.Enums.ImportContactsType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.ImportContactsType.html#dump/1","title":"Glific.Enums.ImportContactsType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.ImportContactsType.html#embed_as/1","title":"Glific.Enums.ImportContactsType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.ImportContactsType.html#equal?/2","title":"Glific.Enums.ImportContactsType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.ImportContactsType.html#load/1","title":"Glific.Enums.ImportContactsType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html#schema/0","title":"Glific.Enums.ImportContactsType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html#schemaless_type/0","title":"Glific.Enums.ImportContactsType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.ImportContactsType.html#type/0","title":"Glific.Enums.ImportContactsType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html#valid_value?/1","title":"Glific.Enums.ImportContactsType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.ImportContactsType.html#t:t/0","title":"Glific.Enums.ImportContactsType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html","title":"Glific.Enums.InteractiveMessageType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.InteractiveMessageType.html#cast/1","title":"Glific.Enums.InteractiveMessageType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html#create_type/0","title":"Glific.Enums.InteractiveMessageType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html#drop_type/0","title":"Glific.Enums.InteractiveMessageType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.InteractiveMessageType.html#dump/1","title":"Glific.Enums.InteractiveMessageType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.InteractiveMessageType.html#embed_as/1","title":"Glific.Enums.InteractiveMessageType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.InteractiveMessageType.html#equal?/2","title":"Glific.Enums.InteractiveMessageType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.InteractiveMessageType.html#load/1","title":"Glific.Enums.InteractiveMessageType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html#schema/0","title":"Glific.Enums.InteractiveMessageType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html#schemaless_type/0","title":"Glific.Enums.InteractiveMessageType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.InteractiveMessageType.html#type/0","title":"Glific.Enums.InteractiveMessageType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html#valid_value?/1","title":"Glific.Enums.InteractiveMessageType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.InteractiveMessageType.html#t:t/0","title":"Glific.Enums.InteractiveMessageType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageFlow.html","title":"Glific.Enums.MessageFlow","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.MessageFlow.html#cast/1","title":"Glific.Enums.MessageFlow.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#create_type/0","title":"Glific.Enums.MessageFlow.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#drop_type/0","title":"Glific.Enums.MessageFlow.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.MessageFlow.html#dump/1","title":"Glific.Enums.MessageFlow.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.MessageFlow.html#embed_as/1","title":"Glific.Enums.MessageFlow.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.MessageFlow.html#equal?/2","title":"Glific.Enums.MessageFlow.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.MessageFlow.html#load/1","title":"Glific.Enums.MessageFlow.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#schema/0","title":"Glific.Enums.MessageFlow.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#schemaless_type/0","title":"Glific.Enums.MessageFlow.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.MessageFlow.html#type/0","title":"Glific.Enums.MessageFlow.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#valid_value?/1","title":"Glific.Enums.MessageFlow.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageFlow.html#t:t/0","title":"Glific.Enums.MessageFlow.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageStatus.html","title":"Glific.Enums.MessageStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.MessageStatus.html#cast/1","title":"Glific.Enums.MessageStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#create_type/0","title":"Glific.Enums.MessageStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#drop_type/0","title":"Glific.Enums.MessageStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.MessageStatus.html#dump/1","title":"Glific.Enums.MessageStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.MessageStatus.html#embed_as/1","title":"Glific.Enums.MessageStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.MessageStatus.html#equal?/2","title":"Glific.Enums.MessageStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.MessageStatus.html#load/1","title":"Glific.Enums.MessageStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#schema/0","title":"Glific.Enums.MessageStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#schemaless_type/0","title":"Glific.Enums.MessageStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.MessageStatus.html#type/0","title":"Glific.Enums.MessageStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#valid_value?/1","title":"Glific.Enums.MessageStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageStatus.html#t:t/0","title":"Glific.Enums.MessageStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.MessageType.html","title":"Glific.Enums.MessageType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.MessageType.html#cast/1","title":"Glific.Enums.MessageType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#create_type/0","title":"Glific.Enums.MessageType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#drop_type/0","title":"Glific.Enums.MessageType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.MessageType.html#dump/1","title":"Glific.Enums.MessageType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.MessageType.html#embed_as/1","title":"Glific.Enums.MessageType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.MessageType.html#equal?/2","title":"Glific.Enums.MessageType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.MessageType.html#load/1","title":"Glific.Enums.MessageType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#schema/0","title":"Glific.Enums.MessageType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#schemaless_type/0","title":"Glific.Enums.MessageType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.MessageType.html#type/0","title":"Glific.Enums.MessageType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#valid_value?/1","title":"Glific.Enums.MessageType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.MessageType.html#t:t/0","title":"Glific.Enums.MessageType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html","title":"Glific.Enums.OrganizationStatus","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.OrganizationStatus.html#cast/1","title":"Glific.Enums.OrganizationStatus.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html#create_type/0","title":"Glific.Enums.OrganizationStatus.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html#drop_type/0","title":"Glific.Enums.OrganizationStatus.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.OrganizationStatus.html#dump/1","title":"Glific.Enums.OrganizationStatus.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.OrganizationStatus.html#embed_as/1","title":"Glific.Enums.OrganizationStatus.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.OrganizationStatus.html#equal?/2","title":"Glific.Enums.OrganizationStatus.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.OrganizationStatus.html#load/1","title":"Glific.Enums.OrganizationStatus.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html#schema/0","title":"Glific.Enums.OrganizationStatus.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html#schemaless_type/0","title":"Glific.Enums.OrganizationStatus.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.OrganizationStatus.html#type/0","title":"Glific.Enums.OrganizationStatus.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html#valid_value?/1","title":"Glific.Enums.OrganizationStatus.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.OrganizationStatus.html#t:t/0","title":"Glific.Enums.OrganizationStatus.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.QuestionType.html","title":"Glific.Enums.QuestionType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.QuestionType.html#cast/1","title":"Glific.Enums.QuestionType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#create_type/0","title":"Glific.Enums.QuestionType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#drop_type/0","title":"Glific.Enums.QuestionType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.QuestionType.html#dump/1","title":"Glific.Enums.QuestionType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.QuestionType.html#embed_as/1","title":"Glific.Enums.QuestionType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.QuestionType.html#equal?/2","title":"Glific.Enums.QuestionType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.QuestionType.html#load/1","title":"Glific.Enums.QuestionType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#schema/0","title":"Glific.Enums.QuestionType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#schemaless_type/0","title":"Glific.Enums.QuestionType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.QuestionType.html#type/0","title":"Glific.Enums.QuestionType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#valid_value?/1","title":"Glific.Enums.QuestionType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.QuestionType.html#t:t/0","title":"Glific.Enums.QuestionType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.SortOrder.html","title":"Glific.Enums.SortOrder","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.SortOrder.html#cast/1","title":"Glific.Enums.SortOrder.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#create_type/0","title":"Glific.Enums.SortOrder.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#drop_type/0","title":"Glific.Enums.SortOrder.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.SortOrder.html#dump/1","title":"Glific.Enums.SortOrder.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.SortOrder.html#embed_as/1","title":"Glific.Enums.SortOrder.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.SortOrder.html#equal?/2","title":"Glific.Enums.SortOrder.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.SortOrder.html#load/1","title":"Glific.Enums.SortOrder.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#schema/0","title":"Glific.Enums.SortOrder.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#schemaless_type/0","title":"Glific.Enums.SortOrder.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.SortOrder.html#type/0","title":"Glific.Enums.SortOrder.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#valid_value?/1","title":"Glific.Enums.SortOrder.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.SortOrder.html#t:t/0","title":"Glific.Enums.SortOrder.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html","title":"Glific.Enums.TemplateButtonType","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.TemplateButtonType.html#cast/1","title":"Glific.Enums.TemplateButtonType.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html#create_type/0","title":"Glific.Enums.TemplateButtonType.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html#drop_type/0","title":"Glific.Enums.TemplateButtonType.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.TemplateButtonType.html#dump/1","title":"Glific.Enums.TemplateButtonType.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.TemplateButtonType.html#embed_as/1","title":"Glific.Enums.TemplateButtonType.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.TemplateButtonType.html#equal?/2","title":"Glific.Enums.TemplateButtonType.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.TemplateButtonType.html#load/1","title":"Glific.Enums.TemplateButtonType.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html#schema/0","title":"Glific.Enums.TemplateButtonType.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html#schemaless_type/0","title":"Glific.Enums.TemplateButtonType.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.TemplateButtonType.html#type/0","title":"Glific.Enums.TemplateButtonType.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html#valid_value?/1","title":"Glific.Enums.TemplateButtonType.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.TemplateButtonType.html#t:t/0","title":"Glific.Enums.TemplateButtonType.t/0","type":"type"},{"doc":"","ref":"Glific.Enums.UserRoles.html","title":"Glific.Enums.UserRoles","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Enums.UserRoles.html#cast/1","title":"Glific.Enums.UserRoles.cast/1","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#create_type/0","title":"Glific.Enums.UserRoles.create_type/0","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#drop_type/0","title":"Glific.Enums.UserRoles.drop_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Enums.UserRoles.html#dump/1","title":"Glific.Enums.UserRoles.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Enums.UserRoles.html#embed_as/1","title":"Glific.Enums.UserRoles.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Enums.UserRoles.html#equal?/2","title":"Glific.Enums.UserRoles.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Enums.UserRoles.html#load/1","title":"Glific.Enums.UserRoles.load/1","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#schema/0","title":"Glific.Enums.UserRoles.schema/0","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#schemaless_type/0","title":"Glific.Enums.UserRoles.schemaless_type/0","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Enums.UserRoles.html#type/0","title":"Glific.Enums.UserRoles.type/0","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#valid_value?/1","title":"Glific.Enums.UserRoles.valid_value?/1","type":"function"},{"doc":"","ref":"Glific.Enums.UserRoles.html#t:t/0","title":"Glific.Enums.UserRoles.t/0","type":"type"},{"doc":"A simple module to periodically delete old data to clean up db","ref":"Glific.Erase.html","title":"Glific.Erase","type":"module"},{"doc":"This is called from the cron job on a regular schedule and cleans database periodically","ref":"Glific.Erase.html#perform_periodic/0","title":"Glific.Erase.perform_periodic/0","type":"function"},{"doc":"Do the weekly DB cleaner tasks, typically in the middle of the night on sunday morning","ref":"Glific.Erase.html#perform_weekly/0","title":"Glific.Erase.perform_weekly/0","type":"function"},{"doc":"The table structure for all our extensions","ref":"Glific.Extensions.Extension.html","title":"Glific.Extensions.Extension","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Extensions.Extension.html#changeset/2","title":"Glific.Extensions.Extension.changeset/2","type":"function"},{"doc":"Create a extension record","ref":"Glific.Extensions.Extension.html#create_extension/1","title":"Glific.Extensions.Extension.create_extension/1","type":"function"},{"doc":"Delete the extension record","ref":"Glific.Extensions.Extension.html#delete_extension/1","title":"Glific.Extensions.Extension.delete_extension/1","type":"function"},{"doc":"Retrieve a extension record by clauses","ref":"Glific.Extensions.Extension.html#get_extension/1","title":"Glific.Extensions.Extension.get_extension/1","type":"function"},{"doc":"Update the extension record","ref":"Glific.Extensions.Extension.html#update_extension/2","title":"Glific.Extensions.Extension.update_extension/2","type":"function"},{"doc":"","ref":"Glific.Extensions.Extension.html#t:t/0","title":"Glific.Extensions.Extension.t/0","type":"type"},{"doc":"Centralizing all the code we need to handle flags across Glific. For now, we'll also put operational code on flags here, as we figure out the right structure","ref":"Glific.Flags.html","title":"Glific.Flags","type":"module"},{"doc":"See if we have valid dialogflow credentials, if so, enable dialogflow else disable it","ref":"Glific.Flags.html#dialogflow/1","title":"Glific.Flags.dialogflow/1","type":"function"},{"doc":"Update the out of office flag, so we know if we should actually do any work","ref":"Glific.Flags.html#out_of_office_update/1","title":"Glific.Flags.out_of_office_update/1","type":"function"},{"doc":"The Flows context.","ref":"Glific.Flows.html","title":"Glific.Flows","type":"module"},{"doc":"A generic json traversal and building the structure for a specific flow schema which is an array of objects in the json file. Used for Node/Actions, Node/Exits, Router/Cases, and Router/Categories","ref":"Glific.Flows.html#build_flow_objects/4","title":"Glific.Flows.build_flow_objects/4","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking flow changes. Examples iex&gt; change_flow ( flow ) % Ecto.Changeset { data : % Flow { } }","ref":"Glific.Flows.html#change_flow/2","title":"Glific.Flows.change_flow/2","type":"function"},{"doc":"Check the required fields for all flow objects. If missing, raise an exception","ref":"Glific.Flows.html#check_required_fields/2","title":"Glific.Flows.check_required_fields/2","type":"function"},{"doc":"Make a copy of a flow","ref":"Glific.Flows.html#copy_flow/2","title":"Glific.Flows.copy_flow/2","type":"function"},{"doc":"Return the count of flows, using the same filter as list_flows","ref":"Glific.Flows.html#count_flows/1","title":"Glific.Flows.count_flows/1","type":"function"},{"doc":"Creates a flow. Examples iex&gt; create_flow ( %{ field : value } ) { :ok , % Flow { } } iex&gt; create_flow ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Flows.html#create_flow/1","title":"Glific.Flows.create_flow/1","type":"function"},{"doc":"Save new revision for the flow","ref":"Glific.Flows.html#create_flow_revision/1","title":"Glific.Flows.create_flow_revision/1","type":"function"},{"doc":"Deletes a flow. Examples iex&gt; delete_flow ( flow ) { :ok , % Flow { } } iex&gt; delete_flow ( flow ) { :error , % Ecto.Changeset { } }","ref":"Glific.Flows.html#delete_flow/1","title":"Glific.Flows.delete_flow/1","type":"function"},{"doc":"Generate a json map with all the flows related fields.","ref":"Glific.Flows.html#export_flow/1","title":"Glific.Flows.export_flow/1","type":"function"},{"doc":"Process subflows and check if there is more subflows in it.","ref":"Glific.Flows.html#export_flow_details/2","title":"Glific.Flows.export_flow_details/2","type":"function"},{"doc":"Fetches a single flow Returns Resource not found if the Interactive Template does not exist. Examples iex&gt; fetch_interactive_template ( 123 , 1 ) { :ok , % Flow { } } iex&gt; fetch_interactive_template ( 456 , 1 ) { :error , [ &quot;Elixir.Glific.Flows.Flow&quot; , &quot;Resource not found&quot; ] }","ref":"Glific.Flows.html#fetch_flow/1","title":"Glific.Flows.fetch_flow/1","type":"function"},{"doc":"Check if a flow has been activated since the time sent as a parameter e.g. outofoffice will check if that flow was activated in the last 24 hours daily/weekly will check since start of day/week, etc","ref":"Glific.Flows.html#flow_activated/3","title":"Glific.Flows.flow_activated/3","type":"function"},{"doc":"Create a map of keywords that map to flow ids for each active organization. Also cache this value including the outoffice shortcode","ref":"Glific.Flows.html#flow_keywords_map/1","title":"Glific.Flows.flow_keywords_map/1","type":"function"},{"doc":"A helper function to interact with the Caching API and get the cached flow. It will also set the loaded flow to cache in case it does not exists.","ref":"Glific.Flows.html#get_cached_flow/2","title":"Glific.Flows.get_cached_flow/2","type":"function"},{"doc":"Gets a single flow. Raises Ecto.NoResultsError if the Flow does not exist. Examples iex&gt; get_flow! ( 123 ) % Flow { } iex&gt; get_flow! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Flows.html#get_flow!/1","title":"Glific.Flows.get_flow!/1","type":"function"},{"doc":"Get specific flow revision by number","ref":"Glific.Flows.html#get_flow_revision/2","title":"Glific.Flows.get_flow_revision/2","type":"function"},{"doc":"Get a list of all the revisions based on a flow UUID","ref":"Glific.Flows.html#get_flow_revision_list/1","title":"Glific.Flows.get_flow_revision_list/1","type":"function"},{"doc":"Extract all the subflows form the parent flow definition.","ref":"Glific.Flows.html#get_sub_flows/1","title":"Glific.Flows.get_sub_flows/1","type":"function"},{"doc":"import a flow from json","ref":"Glific.Flows.html#import_flow/2","title":"Glific.Flows.import_flow/2","type":"function"},{"doc":"Check if the type is a media type we handle in flows","ref":"Glific.Flows.html#is_media_type?/1","title":"Glific.Flows.is_media_type?/1","type":"function"},{"doc":"Check if the flow is optin flow. Currently we are checking based on the optin keyword only.","ref":"Glific.Flows.html#is_optin_flow?/1","title":"Glific.Flows.is_optin_flow?/1","type":"function"},{"doc":"Returns the list of flows. Examples iex&gt; list_flows ( ) [ % Flow { } , ... ]","ref":"Glific.Flows.html#list_flows/1","title":"Glific.Flows.list_flows/1","type":"function"},{"doc":"Update latest flow revision status as published and increment the version Update cached flow definition","ref":"Glific.Flows.html#publish_flow/1","title":"Glific.Flows.publish_flow/1","type":"function"},{"doc":"Start flow for a contact and cache the result","ref":"Glific.Flows.html#start_contact_flow/2","title":"Glific.Flows.start_contact_flow/2","type":"function"},{"doc":"Start flow for contacts of a group","ref":"Glific.Flows.html#start_group_flow/2","title":"Glific.Flows.start_group_flow/2","type":"function"},{"doc":"Terminate all flows for a contact","ref":"Glific.Flows.html#terminate_contact_flows?/1","title":"Glific.Flows.terminate_contact_flows?/1","type":"function"},{"doc":"Update the cached flow from db. This typically happens when the flow definition is updated via the UI","ref":"Glific.Flows.html#update_cached_flow/2","title":"Glific.Flows.update_cached_flow/2","type":"function"},{"doc":"Updates a flow. Examples iex&gt; update_flow ( flow , %{ field : new_value } ) { :ok , % Flow { } } iex&gt; update_flow ( flow , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Flows.html#update_flow/2","title":"Glific.Flows.update_flow/2","type":"function"},{"doc":"The Action object which encapsulates one action in a given node.","ref":"Glific.Flows.Action.html","title":"Glific.Flows.Action","type":"module"},{"doc":"Execute a action, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Action.html#execute/3","title":"Glific.Flows.Action.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Action.html#process/3","title":"Glific.Flows.Action.process/3","type":"function"},{"doc":"Validate a action and all its children","ref":"Glific.Flows.Action.html#validate/3","title":"Glific.Flows.Action.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Action.html#t:t/0","title":"Glific.Flows.Action.t/0","type":"type"},{"doc":"Start a flow to a group so we can blast it out as soon as possible and ensure we are under the rate limits.","ref":"Glific.Flows.Broadcast.html","title":"Glific.Flows.Broadcast","type":"module"},{"doc":"We are using this function from the flows.","ref":"Glific.Flows.Broadcast.html#broadcast_contacts/2","title":"Glific.Flows.Broadcast.broadcast_contacts/2","type":"function"},{"doc":"The one simple public interface to broadcast a group","ref":"Glific.Flows.Broadcast.html#broadcast_flow_to_group/2","title":"Glific.Flows.Broadcast.broadcast_flow_to_group/2","type":"function"},{"doc":"The one simple public interface to broadcast a group","ref":"Glific.Flows.Broadcast.html#broadcast_message_to_group/3","title":"Glific.Flows.Broadcast.broadcast_message_to_group/3","type":"function"},{"doc":"Get broadcast stats for a flow","ref":"Glific.Flows.Broadcast.html#broadcast_stats/1","title":"Glific.Flows.Broadcast.broadcast_stats/1","type":"function"},{"doc":"The one simple public interface to execute a group broadcast for an organization","ref":"Glific.Flows.Broadcast.html#execute_group_broadcasts/1","title":"Glific.Flows.Broadcast.execute_group_broadcasts/1","type":"function"},{"doc":"get_broadcast_contact_ids","ref":"Glific.Flows.Broadcast.html#get_broadcast_contact_ids/1","title":"Glific.Flows.Broadcast.get_broadcast_contact_ids/1","type":"function"},{"doc":"Mark all the processed flow broadcast as completed","ref":"Glific.Flows.Broadcast.html#mark_message_broadcast_completed/1","title":"Glific.Flows.Broadcast.mark_message_broadcast_completed/1","type":"function"},{"doc":"Start a group broadcast for a giving broadcast struct","ref":"Glific.Flows.Broadcast.html#process_broadcast_group/1","title":"Glific.Flows.Broadcast.process_broadcast_group/1","type":"function"},{"doc":"A worker to handle send message processes","ref":"Glific.Flows.BroadcastWorker.html","title":"Glific.Flows.BroadcastWorker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Flows.BroadcastWorker.html#perform/1","title":"Glific.Flows.BroadcastWorker.perform/1","type":"function"},{"doc":"The Case object which encapsulates one category in a given node.","ref":"Glific.Flows.Case.html","title":"Glific.Flows.Case","type":"module"},{"doc":"Execute a case, given a message. This is the only execute function which has a different signature, since it just consumes one message at a time and executes it against a predefined function It also returns a boolean, rather than a tuple","ref":"Glific.Flows.Case.html#execute/3","title":"Glific.Flows.Case.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Case.html#process/3","title":"Glific.Flows.Case.process/3","type":"function"},{"doc":"Validate a case","ref":"Glific.Flows.Case.html#validate/3","title":"Glific.Flows.Case.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Case.html#t:t/0","title":"Glific.Flows.Case.t/0","type":"type"},{"doc":"The Category object which encapsulates one category in a given node.","ref":"Glific.Flows.Category.html","title":"Glific.Flows.Category","type":"module"},{"doc":"Execute a category, given a message stream.","ref":"Glific.Flows.Category.html#execute/3","title":"Glific.Flows.Category.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Category.html#process/3","title":"Glific.Flows.Category.process/3","type":"function"},{"doc":"Validate a category","ref":"Glific.Flows.Category.html#validate/3","title":"Glific.Flows.Category.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Category.html#t:t/0","title":"Glific.Flows.Category.t/0","type":"type"},{"doc":"Since many of the functions, also do a few actions like send a message etc centralizing it here","ref":"Glific.Flows.ContactAction.html","title":"Glific.Flows.ContactAction","type":"module"},{"doc":"Contact opts in via a flow","ref":"Glific.Flows.ContactAction.html#optin/2","title":"Glific.Flows.ContactAction.optin/2","type":"function"},{"doc":"Contact opts out","ref":"Glific.Flows.ContactAction.html#optout/1","title":"Glific.Flows.ContactAction.optout/1","type":"function"},{"doc":"This is just a think wrapper for send_message, since its basically the same, but instead of sending the message to the contact, sends it to another contact that is identified in the action. You can send the same notification to multiple contacts","ref":"Glific.Flows.ContactAction.html#send_broadcast/3","title":"Glific.Flows.ContactAction.send_broadcast/3","type":"function"},{"doc":"Send interactive messages","ref":"Glific.Flows.ContactAction.html#send_interactive_message/3","title":"Glific.Flows.ContactAction.send_interactive_message/3","type":"function"},{"doc":"If the template is not defined for the message send text messages. Given a shortcode and a context, send the right session template message to the contact. We also need to handle translations for template messages, since whatsapp gives them unique uuids","ref":"Glific.Flows.ContactAction.html#send_message/4","title":"Glific.Flows.ContactAction.send_message/4","type":"function"},{"doc":"Since many of the functions set/update fields in contact and related tables, lets centralize all the code here for now","ref":"Glific.Flows.ContactField.html","title":"Glific.Flows.ContactField","type":"module"},{"doc":"Add a field {key, value} to a contact. For now, all preferences are stored under the settings map, with a sub-map of preferences. We expect to get more clarity on this soon","ref":"Glific.Flows.ContactField.html#add_contact_field/5","title":"Glific.Flows.ContactField.add_contact_field/5","type":"function"},{"doc":"Return the count of contacts_fields, using the same filter as list_contacts_fields","ref":"Glific.Flows.ContactField.html#count_contacts_fields/1","title":"Glific.Flows.ContactField.count_contacts_fields/1","type":"function"},{"doc":"Create contact field","ref":"Glific.Flows.ContactField.html#create_contact_field/1","title":"Glific.Flows.ContactField.create_contact_field/1","type":"function"},{"doc":"Deletes a contact field. Examples iex&gt; delete_contacts_field ( contacts_field ) { :ok , % ContactsField { } } iex&gt; delete_contacts_field ( contacts_field ) { :error , % Ecto.Changeset { } }","ref":"Glific.Flows.ContactField.html#delete_contacts_field/1","title":"Glific.Flows.ContactField.delete_contacts_field/1","type":"function"},{"doc":"Add contact field taking contact as parameter. We should change the name of this function for the consistency","ref":"Glific.Flows.ContactField.html#do_add_contact_field/5","title":"Glific.Flows.ContactField.do_add_contact_field/5","type":"function"},{"doc":"list contacts fields.","ref":"Glific.Flows.ContactField.html#list_contacts_fields/1","title":"Glific.Flows.ContactField.list_contacts_fields/1","type":"function"},{"doc":"Create or update contact field","ref":"Glific.Flows.ContactField.html#maybe_create_contact_field/1","title":"Glific.Flows.ContactField.maybe_create_contact_field/1","type":"function"},{"doc":"Update profile field if there is an active profile id set","ref":"Glific.Flows.ContactField.html#maybe_update_profile_field/2","title":"Glific.Flows.ContactField.maybe_update_profile_field/2","type":"function"},{"doc":"parse contact fields values with check if it has","ref":"Glific.Flows.ContactField.html#parse_contact_field_value/2","title":"Glific.Flows.ContactField.parse_contact_field_value/2","type":"function"},{"doc":"Reset the fields for a contact.","ref":"Glific.Flows.ContactField.html#reset_contact_fields/1","title":"Glific.Flows.ContactField.reset_contact_fields/1","type":"function"},{"doc":"Updates a contact field. Examples iex&gt; update_contacts_field ( contacts_field , %{ field : new_value } ) { :ok , % ContactsField { } } iex&gt; update_contacts_field ( contacts_field , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Flows.ContactField.html#update_contacts_field/2","title":"Glific.Flows.ContactField.update_contacts_field/2","type":"function"},{"doc":"Since many of the functions set/update fields in contact and related tables, lets centralize all the code here for now","ref":"Glific.Flows.ContactSetting.html","title":"Glific.Flows.ContactSetting","type":"module"},{"doc":"Add a preference to a contact. For now, all preferences are stored under the settings map, with a sub-map of preferences. We expect to get more clarity on this soon","ref":"Glific.Flows.ContactSetting.html#add_contact_preference/3","title":"Glific.Flows.ContactSetting.add_contact_preference/3","type":"function"},{"doc":"Delete a preference from a contact. We actually dont really delete it, we just set the value to false, and hence turn it off","ref":"Glific.Flows.ContactSetting.html#delete_contact_preference/2","title":"Glific.Flows.ContactSetting.delete_contact_preference/2","type":"function"},{"doc":"Get all the preferences for this contact","ref":"Glific.Flows.ContactSetting.html#get_contact_preferences/1","title":"Glific.Flows.ContactSetting.get_contact_preferences/1","type":"function"},{"doc":"Update profile language if there is an active profile id set","ref":"Glific.Flows.ContactSetting.html#maybe_update_profile_language/2","title":"Glific.Flows.ContactSetting.maybe_update_profile_language/2","type":"function"},{"doc":"Reset the preferences for a contact.","ref":"Glific.Flows.ContactSetting.html#reset_contact_preference/1","title":"Glific.Flows.ContactSetting.reset_contact_preference/1","type":"function"},{"doc":"Set the language for a contact","ref":"Glific.Flows.ContactSetting.html#set_contact_language/2","title":"Glific.Flows.ContactSetting.set_contact_language/2","type":"function"},{"doc":"Set the name for a contact","ref":"Glific.Flows.ContactSetting.html#set_contact_name/2","title":"Glific.Flows.ContactSetting.set_contact_name/2","type":"function"},{"doc":"Wrapper function for setting the contact preference, if preference is empty, it indicates to reset the preference","ref":"Glific.Flows.ContactSetting.html#set_contact_preference/2","title":"Glific.Flows.ContactSetting.set_contact_preference/2","type":"function"},{"doc":"The Exit object which encapsulates one exit in a given node.","ref":"Glific.Flows.Exit.html","title":"Glific.Flows.Exit","type":"module"},{"doc":"Execute a exit, given a message stream.","ref":"Glific.Flows.Exit.html#execute/3","title":"Glific.Flows.Exit.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Exit.html#process/3","title":"Glific.Flows.Exit.process/3","type":"function"},{"doc":"Validate a exit","ref":"Glific.Flows.Exit.html#validate/3","title":"Glific.Flows.Exit.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Exit.html#t:t/0","title":"Glific.Flows.Exit.t/0","type":"type"},{"doc":"The flow object which encapsulates the complete flow as emitted by by https://github.com/nyaruka/floweditor","ref":"Glific.Flows.Flow.html","title":"Glific.Flows.Flow","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.Flow.html#changeset/2","title":"Glific.Flows.Flow.changeset/2","type":"function"},{"doc":"Return a flow for a specific uuid. Cache is not present in cache","ref":"Glific.Flows.Flow.html#get_flow/3","title":"Glific.Flows.Flow.get_flow/3","type":"function"},{"doc":"load the latest revision, specifically json definition from the flow_revision table. We return the clean definition back","ref":"Glific.Flows.Flow.html#get_latest_definition/1","title":"Glific.Flows.Flow.get_latest_definition/1","type":"function"},{"doc":"Helper function to load a active flow from the database and build an object","ref":"Glific.Flows.Flow.html#get_loaded_flow/3","title":"Glific.Flows.Flow.get_loaded_flow/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types. While we are doing this we also fix the map, if the variables to resolve Other/No Response is true","ref":"Glific.Flows.Flow.html#process/3","title":"Glific.Flows.Flow.process/3","type":"function"},{"doc":"Create a subflow of an existing flow","ref":"Glific.Flows.Flow.html#start_sub_flow/3","title":"Glific.Flows.Flow.start_sub_flow/3","type":"function"},{"doc":"Validate a flow and ensures the flow is valid with our internal rule-set","ref":"Glific.Flows.Flow.html#validate_flow/3","title":"Glific.Flows.Flow.validate_flow/3","type":"function"},{"doc":"Changeset helper for keywords","ref":"Glific.Flows.Flow.html#validate_keywords/2","title":"Glific.Flows.Flow.validate_keywords/2","type":"function"},{"doc":"","ref":"Glific.Flows.Flow.html#t:t/0","title":"Glific.Flows.Flow.t/0","type":"type"},{"doc":"When we are running a flow, we are running it in the context of a contact and/or a conversation (or other Glific data types). Let encapsulate this in a module and isolate the flow from the other aspects of Glific","ref":"Glific.Flows.FlowContext.html","title":"Glific.Flows.FlowContext","type":"module"},{"doc":"Check if there is an active context (i.e. with a non null, node_uuid for this contact)","ref":"Glific.Flows.FlowContext.html#active_context/2","title":"Glific.Flows.FlowContext.active_context/2","type":"function"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowContext.html#changeset/2","title":"Glific.Flows.FlowContext.changeset/2","type":"function"},{"doc":"Create a FlowContext","ref":"Glific.Flows.FlowContext.html#create_flow_context/1","title":"Glific.Flows.FlowContext.create_flow_context/1","type":"function"},{"doc":"Delete all the contexts which are completed before two days","ref":"Glific.Flows.FlowContext.html#delete_completed_flow_contexts/1","title":"Glific.Flows.FlowContext.delete_completed_flow_contexts/1","type":"function"},{"doc":"Delete all the contexts which are older than 7 days","ref":"Glific.Flows.FlowContext.html#delete_old_flow_contexts/1","title":"Glific.Flows.FlowContext.delete_old_flow_contexts/1","type":"function"},{"doc":"Execute one (or more) steps in a flow based on the message stream","ref":"Glific.Flows.FlowContext.html#execute/2","title":"Glific.Flows.FlowContext.execute/2","type":"function"},{"doc":"Start a new context, if there is an existing context, blow it away","ref":"Glific.Flows.FlowContext.html#init_context/4","title":"Glific.Flows.FlowContext.init_context/4","type":"function"},{"doc":"Load the context object, given a flow object and a contact. At some point, we'll get the genserver to cache this","ref":"Glific.Flows.FlowContext.html#load_context/2","title":"Glific.Flows.FlowContext.load_context/2","type":"function"},{"doc":"Set all the flows for a specific context to be completed","ref":"Glific.Flows.FlowContext.html#mark_flows_complete/3","title":"Glific.Flows.FlowContext.mark_flows_complete/3","type":"function"},{"doc":"Count the number of times we have sent the same message in the recent past","ref":"Glific.Flows.FlowContext.html#match_outbound/3","title":"Glific.Flows.FlowContext.match_outbound/3","type":"function"},{"doc":"Generate a notification having all the flow context data.","ref":"Glific.Flows.FlowContext.html#notification/2","title":"Glific.Flows.FlowContext.notification/2","type":"function"},{"doc":"A single place to parse the variable in a string related to flows.","ref":"Glific.Flows.FlowContext.html#parse_context_string/2","title":"Glific.Flows.FlowContext.parse_context_string/2","type":"function"},{"doc":"Resets all the context for the user when we hit an error. This can potentially prevent an infinite loop from happening if flows are connected in a cycle","ref":"Glific.Flows.FlowContext.html#reset_all_contexts/2","title":"Glific.Flows.FlowContext.reset_all_contexts/2","type":"function"},{"doc":"Resets the context and sends control back to the parent context if one exists","ref":"Glific.Flows.FlowContext.html#reset_context/1","title":"Glific.Flows.FlowContext.reset_context/1","type":"function"},{"doc":"Reset this context, but dont follow parent context tail. This is used for tail call optimization","ref":"Glific.Flows.FlowContext.html#reset_one_context/2","title":"Glific.Flows.FlowContext.reset_one_context/2","type":"function"},{"doc":"Resume the flow for a given contact and a given flow id if still active","ref":"Glific.Flows.FlowContext.html#resume_contact_flow/4","title":"Glific.Flows.FlowContext.resume_contact_flow/4","type":"function"},{"doc":"Seed the context and set the wakeup time as needed","ref":"Glific.Flows.FlowContext.html#seed_context/4","title":"Glific.Flows.FlowContext.seed_context/4","type":"function"},{"doc":"Set the new node for the context","ref":"Glific.Flows.FlowContext.html#set_node/2","title":"Glific.Flows.FlowContext.set_node/2","type":"function"},{"doc":"Given an input string, consume the input and advance the state of the context","ref":"Glific.Flows.FlowContext.html#step_forward/2","title":"Glific.Flows.FlowContext.step_forward/2","type":"function"},{"doc":"Update the recent_* state as we consume or send a message","ref":"Glific.Flows.FlowContext.html#update_recent/3","title":"Glific.Flows.FlowContext.update_recent/3","type":"function"},{"doc":"Update the contact results with each element of the json map","ref":"Glific.Flows.FlowContext.html#update_results/2","title":"Glific.Flows.FlowContext.update_results/2","type":"function"},{"doc":"Find all the contexts which need to be woken up and processed","ref":"Glific.Flows.FlowContext.html#wakeup_flows/1","title":"Glific.Flows.FlowContext.wakeup_flows/1","type":"function"},{"doc":"Process one context at a time that is ready to be woken","ref":"Glific.Flows.FlowContext.html#wakeup_one/2","title":"Glific.Flows.FlowContext.wakeup_one/2","type":"function"},{"doc":"","ref":"Glific.Flows.FlowContext.html#t:t/0","title":"Glific.Flows.FlowContext.t/0","type":"type"},{"doc":"The flow count object","ref":"Glific.Flows.FlowCount.html","title":"Glific.Flows.FlowCount","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowCount.html#changeset/2","title":"Glific.Flows.FlowCount.changeset/2","type":"function"},{"doc":"Create flow count","ref":"Glific.Flows.FlowCount.html#create_flow_count/1","title":"Glific.Flows.FlowCount.create_flow_count/1","type":"function"},{"doc":"Get a list of flow count","ref":"Glific.Flows.FlowCount.html#get_flow_count_list/1","title":"Glific.Flows.FlowCount.get_flow_count_list/1","type":"function"},{"doc":"Resets the flow count for a given flow","ref":"Glific.Flows.FlowCount.html#reset_flow_count/1","title":"Glific.Flows.FlowCount.reset_flow_count/1","type":"function"},{"doc":"Update flow count","ref":"Glific.Flows.FlowCount.html#update_flow_count/2","title":"Glific.Flows.FlowCount.update_flow_count/2","type":"function"},{"doc":"Upsert flow count","ref":"Glific.Flows.FlowCount.html#upsert_flow_count/1","title":"Glific.Flows.FlowCount.upsert_flow_count/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowCount.html#t:t/0","title":"Glific.Flows.FlowCount.t/0","type":"type"},{"doc":"The flow label object","ref":"Glific.Flows.FlowLabel.html","title":"Glific.Flows.FlowLabel","type":"module"},{"doc":"Glific.Flows.FlowLabel.list_flow_label() Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowLabel.html#changeset/2","title":"Glific.Flows.FlowLabel.changeset/2","type":"function"},{"doc":"Return the count of flow labels, using the same filter as list_flow_labels","ref":"Glific.Flows.FlowLabel.html#count_flow_labels/1","title":"Glific.Flows.FlowLabel.count_flow_labels/1","type":"function"},{"doc":"Creates a flow_label. Examples iex&gt; create_flow_label ( %{ field : value } ) { :ok , % FlowLabel { } } iex&gt; create_flow_label ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Flows.FlowLabel.html#create_flow_label/1","title":"Glific.Flows.FlowLabel.create_flow_label/1","type":"function"},{"doc":"Given a organization id, retrieve all the flow labels for organization","ref":"Glific.Flows.FlowLabel.html#get_all_flowlabel/1","title":"Glific.Flows.FlowLabel.get_all_flowlabel/1","type":"function"},{"doc":"Try to first get the flow label, if not present, create it. We dont use the upsert function, since it consumes id's for every failure. we expect a lot more gets, than inserts","ref":"Glific.Flows.FlowLabel.html#get_or_create_flow_label/1","title":"Glific.Flows.FlowLabel.get_or_create_flow_label/1","type":"function"},{"doc":"Return the count of flow labels, using the same filter as list_flow_labels","ref":"Glific.Flows.FlowLabel.html#list_flow_labels/1","title":"Glific.Flows.FlowLabel.list_flow_labels/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowLabel.html#t:t/0","title":"Glific.Flows.FlowLabel.t/0","type":"type"},{"doc":"Table which stores the flow results for each run of a contact through a flow","ref":"Glific.Flows.FlowResult.html","title":"Glific.Flows.FlowResult","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowResult.html#changeset/2","title":"Glific.Flows.FlowResult.changeset/2","type":"function"},{"doc":"","ref":"Glific.Flows.FlowResult.html#t:t/0","title":"Glific.Flows.FlowResult.t/0","type":"type"},{"doc":"The flow revision object which encapsulates the complete flow as emitted by by https://github.com/nyaruka/floweditor","ref":"Glific.Flows.FlowRevision.html","title":"Glific.Flows.FlowRevision","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.FlowRevision.html#changeset/2","title":"Glific.Flows.FlowRevision.changeset/2","type":"function"},{"doc":"Default definition when we create a new flow","ref":"Glific.Flows.FlowRevision.html#default_definition/1","title":"Glific.Flows.FlowRevision.default_definition/1","type":"function"},{"doc":"","ref":"Glific.Flows.FlowRevision.html#t:t/0","title":"Glific.Flows.FlowRevision.t/0","type":"type"},{"doc":"The Localization object which stores all the localizations for all languages for a flow","ref":"Glific.Flows.Localization.html","title":"Glific.Flows.Localization","type":"module"},{"doc":"Given a language id and an case uuid, return the translation if one exists, else return the original text","ref":"Glific.Flows.Localization.html#get_translated_case_arguments/2","title":"Glific.Flows.Localization.get_translated_case_arguments/2","type":"function"},{"doc":"Given a language id and an category uuid, return the translation if one exists, else return the original text","ref":"Glific.Flows.Localization.html#get_translated_category_name/2","title":"Glific.Flows.Localization.get_translated_category_name/2","type":"function"},{"doc":"Given a language id and an template uuid, return the variable translation if one exists, else return the original variable","ref":"Glific.Flows.Localization.html#get_translated_template_vars/2","title":"Glific.Flows.Localization.get_translated_template_vars/2","type":"function"},{"doc":"Given a language id and an action uuid, return the translation if one exists, else return the original text","ref":"Glific.Flows.Localization.html#get_translation/3","title":"Glific.Flows.Localization.get_translation/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Localization.html#process/1","title":"Glific.Flows.Localization.process/1","type":"function"},{"doc":"","ref":"Glific.Flows.Localization.html#t:t/0","title":"Glific.Flows.Localization.t/0","type":"type"},{"doc":"When we are running a flow, we are running it in the context of a contact and/or a conversation (or other Glific data types). Let encapsulate this in a module and isolate the flow from the other aspects of Glific","ref":"Glific.Flows.MessageBroadcast.html","title":"Glific.Flows.MessageBroadcast","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.MessageBroadcast.html#changeset/2","title":"Glific.Flows.MessageBroadcast.changeset/2","type":"function"},{"doc":"","ref":"Glific.Flows.MessageBroadcast.html#t:t/0","title":"Glific.Flows.MessageBroadcast.t/0","type":"type"},{"doc":"When we are running a flow, we are running it in the context of a contact and/or a conversation (or other Glific data types). Let encapsulate this in a module and isolate the flow from the other aspects of Glific","ref":"Glific.Flows.MessageBroadcastContact.html","title":"Glific.Flows.MessageBroadcastContact","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.MessageBroadcastContact.html#changeset/2","title":"Glific.Flows.MessageBroadcastContact.changeset/2","type":"function"},{"doc":"","ref":"Glific.Flows.MessageBroadcastContact.html#t:t/0","title":"Glific.Flows.MessageBroadcastContact.t/0","type":"type"},{"doc":"substitute the contact fileds and result sets in the messages","ref":"Glific.Flows.MessageVarParser.html","title":"Glific.Flows.MessageVarParser","type":"module"},{"doc":"parse the message with variables","ref":"Glific.Flows.MessageVarParser.html#parse/2","title":"Glific.Flows.MessageVarParser.parse/2","type":"function"},{"doc":"Replace all the keys and values of a given map","ref":"Glific.Flows.MessageVarParser.html#parse_map/2","title":"Glific.Flows.MessageVarParser.parse_map/2","type":"function"},{"doc":"Interpolates the values from results into the message body. Might need to integrate it with the substitution above. It will just treat @results.variable to @results.variable.input","ref":"Glific.Flows.MessageVarParser.html#parse_results/2","title":"Glific.Flows.MessageVarParser.parse_results/2","type":"function"},{"doc":"The Node object which encapsulates one node in a given flow","ref":"Glific.Flows.Node.html","title":"Glific.Flows.Node","type":"module"},{"doc":"Wrapper function to bump the count of the node using our metrics subsystem","ref":"Glific.Flows.Node.html#bump_count/2","title":"Glific.Flows.Node.bump_count/2","type":"function"},{"doc":"Execute a node, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Node.html#execute/3","title":"Glific.Flows.Node.execute/3","type":"function"},{"doc":"If the node has a router component, and the flow has enabled us to fix other/no response pathways, do the needful for that node","ref":"Glific.Flows.Node.html#fix_node/3","title":"Glific.Flows.Node.fix_node/3","type":"function"},{"doc":"Wrapper function to abort and clean things up when we detect an infinite loop","ref":"Glific.Flows.Node.html#infinite_loop/2","title":"Glific.Flows.Node.infinite_loop/2","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Node.html#process/3","title":"Glific.Flows.Node.process/3","type":"function"},{"doc":"Validate a node and all its children","ref":"Glific.Flows.Node.html#validate/3","title":"Glific.Flows.Node.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Node.html#t:t/0","title":"Glific.Flows.Node.t/0","type":"type"},{"doc":"A central place to define and execute all periodic flows. The current periodic flows in priority order are: Monthly, Weekly, Daily A specific weekday (i.e - Monday, Tuesday, ..) OutOfOffice All these flows are shortcode driven for now. At some point, we will make this fleixible and let the NGO define the periodic interval","ref":"Glific.Flows.Periodic.html","title":"Glific.Flows.Periodic","type":"module"},{"doc":"Run all the periodic flows in priority order. Stop when we find the first one that we can execute","ref":"Glific.Flows.Periodic.html#run_flows/2","title":"Glific.Flows.Periodic.run_flows/2","type":"function"},{"doc":"The Router object which encapsulates the router in a given node.","ref":"Glific.Flows.Router.html","title":"Glific.Flows.Router","type":"module"},{"doc":"Execute a router, given a message stream. Consume the message stream as processing occurs","ref":"Glific.Flows.Router.html#execute/3","title":"Glific.Flows.Router.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Router.html#process/3","title":"Glific.Flows.Router.process/3","type":"function"},{"doc":"Validate a action and all its children","ref":"Glific.Flows.Router.html#validate/3","title":"Glific.Flows.Router.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Router.html#t:t/0","title":"Glific.Flows.Router.t/0","type":"type"},{"doc":"The Case object which encapsulates one category in a given node.","ref":"Glific.Flows.Templating.html","title":"Glific.Flows.Templating","type":"module"},{"doc":"We need to perform the execute in case template is an expression","ref":"Glific.Flows.Templating.html#execute/3","title":"Glific.Flows.Templating.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Templating.html#process/2","title":"Glific.Flows.Templating.process/2","type":"function"},{"doc":"","ref":"Glific.Flows.Templating.html#t:t/0","title":"Glific.Flows.Templating.t/0","type":"type"},{"doc":"The Wait object which encapsulates the wait for a router","ref":"Glific.Flows.Wait.html","title":"Glific.Flows.Wait","type":"module"},{"doc":"Execute a wait, given a message stream.","ref":"Glific.Flows.Wait.html#execute/3","title":"Glific.Flows.Wait.execute/3","type":"function"},{"doc":"Process a json structure from floweditor to the Glific data types","ref":"Glific.Flows.Wait.html#process/3","title":"Glific.Flows.Wait.process/3","type":"function"},{"doc":"Validate a wait","ref":"Glific.Flows.Wait.html#validate/3","title":"Glific.Flows.Wait.validate/3","type":"function"},{"doc":"","ref":"Glific.Flows.Wait.html#t:t/0","title":"Glific.Flows.Wait.t/0","type":"type"},{"doc":"Lets wrap all webhook functionality here as we try and get a better handle on the breadth and depth of webhooks.","ref":"Glific.Flows.Webhook.html","title":"Glific.Flows.Webhook","type":"module"},{"doc":"Execute a webhook action, could be either get or post for now","ref":"Glific.Flows.Webhook.html#execute/2","title":"Glific.Flows.Webhook.execute/2","type":"function"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Flows.Webhook.html#perform/1","title":"Glific.Flows.Webhook.perform/1","type":"function"},{"doc":"The webhook log object","ref":"Glific.Flows.WebhookLog.html","title":"Glific.Flows.WebhookLog","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Flows.WebhookLog.html#changeset/2","title":"Glific.Flows.WebhookLog.changeset/2","type":"function"},{"doc":"Return the count of webhook_logs, using the same filter as list_webhook_logs","ref":"Glific.Flows.WebhookLog.html#count_webhook_logs/1","title":"Glific.Flows.WebhookLog.count_webhook_logs/1","type":"function"},{"doc":"Create a Webhook Log","ref":"Glific.Flows.WebhookLog.html#create_webhook_log/1","title":"Glific.Flows.WebhookLog.create_webhook_log/1","type":"function"},{"doc":"Returns the list of webhook_logs. Since this is very basic and only listing funcatinality we added the status filter like this. In future we will put the status as virtual filed in the webhook logs itself.","ref":"Glific.Flows.WebhookLog.html#list_webhook_logs/1","title":"Glific.Flows.WebhookLog.list_webhook_logs/1","type":"function"},{"doc":"Update a Webhook Log","ref":"Glific.Flows.WebhookLog.html#update_webhook_log/2","title":"Glific.Flows.WebhookLog.update_webhook_log/2","type":"function"},{"doc":"","ref":"Glific.Flows.WebhookLog.html#t:t/0","title":"Glific.Flows.WebhookLog.t/0","type":"type"},{"doc":"Glific GCS Manager","ref":"Glific.GCS.html","title":"Glific.GCS","type":"module"},{"doc":"Put bucket name to the process","ref":"Glific.GCS.html#get_bucket_name/0","title":"Glific.GCS.get_bucket_name/0","type":"function"},{"doc":"Generate a sigend url for a private file","ref":"Glific.GCS.html#get_signed_url/3","title":"Glific.GCS.get_signed_url/3","type":"function"},{"doc":"Fetch token for GCS","ref":"Glific.GCS.html#get_token/1","title":"Glific.GCS.get_token/1","type":"function"},{"doc":"get bucket name from the process","ref":"Glific.GCS.html#put_bucket_name/1","title":"Glific.GCS.put_bucket_name/1","type":"function"},{"doc":"Creating a dataset with messages and contacts as tables","ref":"Glific.GCS.html#refresh_gcs_setup/1","title":"Glific.GCS.refresh_gcs_setup/1","type":"function"},{"doc":"Book keeping table to keep track of the last job that we processed from the messages belonging to the organization","ref":"Glific.GCS.GcsJob.html","title":"Glific.GCS.GcsJob","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.GCS.GcsJob.html#changeset/2","title":"Glific.GCS.GcsJob.changeset/2","type":"function"},{"doc":"","ref":"Glific.GCS.GcsJob.html#t:t/0","title":"Glific.GCS.GcsJob.t/0","type":"type"},{"doc":"Process the media table for each organization. Chunk number of message medias in groups of 128 and create a Gcs Worker Job to deliver the message media url to the gcs servers We centralize both the cron job and the worker job in one module","ref":"Glific.GCS.GcsWorker.html","title":"Glific.GCS.GcsWorker","type":"module"},{"doc":"Download a file to the specific path. Should move this to a more generic helper file in glific","ref":"Glific.GCS.GcsWorker.html#download_file_to_temp/3","title":"Glific.GCS.GcsWorker.download_file_to_temp/3","type":"function"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.GCS.GcsWorker.html#perform/1","title":"Glific.GCS.GcsWorker.perform/1","type":"function"},{"doc":"This is called from the cron job on a regular schedule. we sweep the message media url table and queue them up for delivery to gcs","ref":"Glific.GCS.GcsWorker.html#perform_periodic/1","title":"Glific.GCS.GcsWorker.perform_periodic/1","type":"function"},{"doc":"Public interface to upload a file provided by the org at local name to gcs as remote name","ref":"Glific.GCS.GcsWorker.html#upload_media/3","title":"Glific.GCS.GcsWorker.upload_media/3","type":"function"},{"doc":"The Groups context.","ref":"Glific.Groups.html","title":"Glific.Groups","type":"module"},{"doc":"Add permissioning specific to groups, in this case we want to restrict the visibility of groups that the user can see","ref":"Glific.Groups.html#add_permission/2","title":"Glific.Groups.add_permission/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking group changes. Examples iex&gt; change_group ( group ) % Ecto.Changeset { data : % Group { } }","ref":"Glific.Groups.html#change_group/2","title":"Glific.Groups.change_group/2","type":"function"},{"doc":"Get the contacts ids for a specific group that have not opted out","ref":"Glific.Groups.html#contact_ids/1","title":"Glific.Groups.contact_ids/1","type":"function"},{"doc":"Return the count of group contacts","ref":"Glific.Groups.html#contacts_count/1","title":"Glific.Groups.contacts_count/1","type":"function"},{"doc":"Return the count of groups, using the same filter as list_groups","ref":"Glific.Groups.html#count_groups/1","title":"Glific.Groups.count_groups/1","type":"function"},{"doc":"Creates a contact group. Examples iex&gt; create_contact_group ( %{ field : value } ) { :ok , % Contact { } } iex&gt; create_contact_group ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Groups.html#create_contact_group/1","title":"Glific.Groups.create_contact_group/1","type":"function"},{"doc":"Creates a group. Examples iex&gt; create_group ( %{ field : value } ) { :ok , % Group { } } iex&gt; create_group ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Groups.html#create_group/1","title":"Glific.Groups.create_group/1","type":"function"},{"doc":"Creates a user group. Examples iex&gt; create_user_group ( %{ field : value } ) { :ok , % User { } } iex&gt; create_user_group ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Groups.html#create_user_group/1","title":"Glific.Groups.create_user_group/1","type":"function"},{"doc":"Delete contact groups","ref":"Glific.Groups.html#delete_contact_groups_by_ids/2","title":"Glific.Groups.delete_contact_groups_by_ids/2","type":"function"},{"doc":"Deletes a group. Examples iex&gt; delete_group ( group ) { :ok , % Group { } } iex&gt; delete_group ( group ) { :error , % Ecto.Changeset { } }","ref":"Glific.Groups.html#delete_group/1","title":"Glific.Groups.delete_group/1","type":"function"},{"doc":"Delete group contacts","ref":"Glific.Groups.html#delete_group_contacts_by_ids/2","title":"Glific.Groups.delete_group_contacts_by_ids/2","type":"function"},{"doc":"Delete group users","ref":"Glific.Groups.html#delete_group_users_by_ids/2","title":"Glific.Groups.delete_group_users_by_ids/2","type":"function"},{"doc":"Delete user groups","ref":"Glific.Groups.html#delete_user_groups_by_ids/2","title":"Glific.Groups.delete_user_groups_by_ids/2","type":"function"},{"doc":"Gets a single group. Raises Ecto.NoResultsError if the Group does not exist. Examples iex&gt; get_group! ( 123 ) % Group { } iex&gt; get_group! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Groups.html#get_group!/1","title":"Glific.Groups.get_group!/1","type":"function"},{"doc":"Fetches all group ids in an organization","ref":"Glific.Groups.html#get_group_ids/0","title":"Glific.Groups.get_group_ids/0","type":"function"},{"doc":"Get group by group name. Create the group if it does not exist","ref":"Glific.Groups.html#get_or_create_group_by_label/2","title":"Glific.Groups.get_or_create_group_by_label/2","type":"function"},{"doc":"Given a group id, get stats on the contacts within this group based on bsp_status and also the total count","ref":"Glific.Groups.html#info_group_contacts/1","title":"Glific.Groups.info_group_contacts/1","type":"function"},{"doc":"Returns the list of groups. Examples iex&gt; list_groups ( ) [ % Group { } , ... ]","ref":"Glific.Groups.html#list_groups/2","title":"Glific.Groups.list_groups/2","type":"function"},{"doc":"Returns the list of groups. Examples iex&gt; list_organizations_groups ( ) [ % Group { } , ... ]","ref":"Glific.Groups.html#list_organizations_groups/1","title":"Glific.Groups.list_organizations_groups/1","type":"function"},{"doc":"Updates a group. Examples iex&gt; update_group ( group , %{ field : new_value } ) { :ok , % Group { } } iex&gt; update_group ( group , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Groups.html#update_group/2","title":"Glific.Groups.update_group/2","type":"function"},{"doc":"Updates user groups entries","ref":"Glific.Groups.html#update_user_groups/1","title":"Glific.Groups.update_user_groups/1","type":"function"},{"doc":"Return the count of group users","ref":"Glific.Groups.html#users_count/1","title":"Glific.Groups.users_count/1","type":"function"},{"doc":"A pipe for managing the contact groups","ref":"Glific.Groups.ContactGroup.html","title":"Glific.Groups.ContactGroup","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.ContactGroup.html#changeset/2","title":"Glific.Groups.ContactGroup.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.ContactGroup.html#t:t/0","title":"Glific.Groups.ContactGroup.t/0","type":"type"},{"doc":"Simple container to hold all the contact groups we associate with one contact","ref":"Glific.Groups.ContactGroups.html","title":"Glific.Groups.ContactGroups","type":"module"},{"doc":"Creates and/or deletes a list of contact groups, each group attached to the same contact","ref":"Glific.Groups.ContactGroups.html#update_contact_groups/1","title":"Glific.Groups.ContactGroups.update_contact_groups/1","type":"function"},{"doc":"","ref":"Glific.Groups.ContactGroups.html#t:t/0","title":"Glific.Groups.ContactGroups.t/0","type":"type"},{"doc":"The minimal wrapper for the base Group structure","ref":"Glific.Groups.Group.html","title":"Glific.Groups.Group","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.Group.html#changeset/2","title":"Glific.Groups.Group.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.Group.html#t:t/0","title":"Glific.Groups.Group.t/0","type":"type"},{"doc":"Simple container to hold all the group contacts we associate with one group","ref":"Glific.Groups.GroupContacts.html","title":"Glific.Groups.GroupContacts","type":"module"},{"doc":"Creates and/or deletes a list of group contacts, each contact attached to the same group","ref":"Glific.Groups.GroupContacts.html#update_group_contacts/1","title":"Glific.Groups.GroupContacts.update_group_contacts/1","type":"function"},{"doc":"","ref":"Glific.Groups.GroupContacts.html#t:t/0","title":"Glific.Groups.GroupContacts.t/0","type":"type"},{"doc":"Simple container to hold all the group users we associate with one group","ref":"Glific.Groups.GroupUsers.html","title":"Glific.Groups.GroupUsers","type":"module"},{"doc":"Creates and/or deletes a list of group users, each user attached to the same group","ref":"Glific.Groups.GroupUsers.html#update_group_users/1","title":"Glific.Groups.GroupUsers.update_group_users/1","type":"function"},{"doc":"","ref":"Glific.Groups.GroupUsers.html#t:t/0","title":"Glific.Groups.GroupUsers.t/0","type":"type"},{"doc":"A pipe for managing the user groups","ref":"Glific.Groups.UserGroup.html","title":"Glific.Groups.UserGroup","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Groups.UserGroup.html#changeset/2","title":"Glific.Groups.UserGroup.changeset/2","type":"function"},{"doc":"","ref":"Glific.Groups.UserGroup.html#t:t/0","title":"Glific.Groups.UserGroup.t/0","type":"type"},{"doc":"Simple container to hold all the user groups we associate with one user","ref":"Glific.Groups.UserGroups.html","title":"Glific.Groups.UserGroups","type":"module"},{"doc":"Creates and/or deletes a list of user groups, each group attached to the same user","ref":"Glific.Groups.UserGroups.html#update_user_groups/1","title":"Glific.Groups.UserGroups.update_user_groups/1","type":"function"},{"doc":"","ref":"Glific.Groups.UserGroups.html#t:t/0","title":"Glific.Groups.UserGroups.t/0","type":"type"},{"doc":"The Jobs context.","ref":"Glific.Jobs.html","title":"Glific.Jobs","type":"module"},{"doc":"Gets a single job entry for the organization. Raises Ecto.NoResultsError if the User does not exist.","ref":"Glific.Jobs.html#get_gcs_job/1","title":"Glific.Jobs.get_gcs_job/1","type":"function"},{"doc":"Update a bigquery_job with the message_id and organization_id","ref":"Glific.Jobs.html#update_bigquery_job/2","title":"Glific.Jobs.update_bigquery_job/2","type":"function"},{"doc":"Update a bigquery_job table","ref":"Glific.Jobs.html#update_bigquery_job/3","title":"Glific.Jobs.update_bigquery_job/3","type":"function"},{"doc":"Create or update a gcs_job with the message_id and organization_id","ref":"Glific.Jobs.html#update_gcs_job/1","title":"Glific.Jobs.update_gcs_job/1","type":"function"},{"doc":"Module for checking remaining balance","ref":"Glific.Jobs.BSPBalanceWorker.html","title":"Glific.Jobs.BSPBalanceWorker","type":"module"},{"doc":"periodic function for making calls to bsp for remaining balance","ref":"Glific.Jobs.BSPBalanceWorker.html#perform_periodic/1","title":"Glific.Jobs.BSPBalanceWorker.perform_periodic/1","type":"function"},{"doc":"Processes the tasks that need to be handled on a minute schedule","ref":"Glific.Jobs.MinuteWorker.html","title":"Glific.Jobs.MinuteWorker","type":"module"},{"doc":"Worker to implement cron job functionality as implemented by Oban. This is a work in progress and subject to change","ref":"Glific.Jobs.MinuteWorker.html#perform/1","title":"Glific.Jobs.MinuteWorker.perform/1","type":"function"},{"doc":"This module is used to send an email to the user when their balance is low.","ref":"Glific.Mails.BalanceAlertMail.html","title":"Glific.Mails.BalanceAlertMail","type":"module"},{"doc":"CriticalNotificationMail is a mail that is sent to the org admin when a critical error occurs.","ref":"Glific.Mails.CriticalNotificationMail.html","title":"Glific.Mails.CriticalNotificationMail","type":"module"},{"doc":"Sends a critical notification mail to the org admin.","ref":"Glific.Mails.CriticalNotificationMail.html#new_mail/2","title":"Glific.Mails.CriticalNotificationMail.new_mail/2","type":"function"},{"doc":"The mail log object","ref":"Glific.Mails.MailLog.html","title":"Glific.Mails.MailLog","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Mails.MailLog.html#changeset/2","title":"Glific.Mails.MailLog.changeset/2","type":"function"},{"doc":"Return the count of mail_logs, using the same filter as list_mail_logs","ref":"Glific.Mails.MailLog.html#count_mail_logs/1","title":"Glific.Mails.MailLog.count_mail_logs/1","type":"function"},{"doc":"Create a Mail Log","ref":"Glific.Mails.MailLog.html#create_mail_log/1","title":"Glific.Mails.MailLog.create_mail_log/1","type":"function"},{"doc":"Returns the list of mail logs. Since this is very basic and only listing funcatinality we added the status filter like this. In future we will put the status as virtual filed in the mail logs itself.","ref":"Glific.Mails.MailLog.html#list_mail_logs/1","title":"Glific.Mails.MailLog.list_mail_logs/1","type":"function"},{"doc":"Check if we have sent the mail in given time","ref":"Glific.Mails.MailLog.html#mail_sent_in_past_time?/3","title":"Glific.Mails.MailLog.mail_sent_in_past_time?/3","type":"function"},{"doc":"Update a Mail Log","ref":"Glific.Mails.MailLog.html#update_mail_log/2","title":"Glific.Mails.MailLog.update_mail_log/2","type":"function"},{"doc":"","ref":"Glific.Mails.MailLog.html#t:t/0","title":"Glific.Mails.MailLog.t/0","type":"type"},{"doc":"NewPartnerOnboardedMail will have the content for formatting for the new partner onboarded email.","ref":"Glific.Mails.NewPartnerOnboardedMail.html","title":"Glific.Mails.NewPartnerOnboardedMail","type":"module"},{"doc":"This is an auto generated file from waffle, that is used to control storage behavior","ref":"Glific.Media.html","title":"Glific.Media","type":"module"},{"doc":"","ref":"Glific.Media.html#acl/2","title":"Glific.Media.acl/2","type":"function"},{"doc":"","ref":"Glific.Media.html#asset_host/0","title":"Glific.Media.asset_host/0","type":"function"},{"doc":"","ref":"Glific.Media.html#async/0","title":"Glific.Media.async/0","type":"function"},{"doc":"","ref":"Glific.Media.html#bucket/0","title":"Glific.Media.bucket/0","type":"function"},{"doc":"","ref":"Glific.Media.html#bucket/1","title":"Glific.Media.bucket/1","type":"function"},{"doc":"","ref":"Glific.Media.html#default_url/1","title":"Glific.Media.default_url/1","type":"function"},{"doc":"","ref":"Glific.Media.html#default_url/2","title":"Glific.Media.default_url/2","type":"function"},{"doc":"","ref":"Glific.Media.html#delete/1","title":"Glific.Media.delete/1","type":"function"},{"doc":"","ref":"Glific.Media.html#filename/2","title":"Glific.Media.filename/2","type":"function"},{"doc":"","ref":"Glific.Media.html#gcs_object_headers/2","title":"Glific.Media.gcs_object_headers/2","type":"function"},{"doc":"","ref":"Glific.Media.html#remote_file_headers/1","title":"Glific.Media.remote_file_headers/1","type":"function"},{"doc":"","ref":"Glific.Media.html#s3_object_headers/2","title":"Glific.Media.s3_object_headers/2","type":"function"},{"doc":"","ref":"Glific.Media.html#storage_dir/2","title":"Glific.Media.storage_dir/2","type":"function"},{"doc":"","ref":"Glific.Media.html#storage_dir_prefix/0","title":"Glific.Media.storage_dir_prefix/0","type":"function"},{"doc":"","ref":"Glific.Media.html#store/1","title":"Glific.Media.store/1","type":"function"},{"doc":"","ref":"Glific.Media.html#transform/2","title":"Glific.Media.transform/2","type":"function"},{"doc":"","ref":"Glific.Media.html#url/1","title":"Glific.Media.url/1","type":"function"},{"doc":"","ref":"Glific.Media.html#url/2","title":"Glific.Media.url/2","type":"function"},{"doc":"","ref":"Glific.Media.html#url/3","title":"Glific.Media.url/3","type":"function"},{"doc":"","ref":"Glific.Media.html#urls/2","title":"Glific.Media.urls/2","type":"function"},{"doc":"","ref":"Glific.Media.html#validate/1","title":"Glific.Media.validate/1","type":"function"},{"doc":"","ref":"Glific.Media.Type.html","title":"Glific.Media.Type","type":"module"},{"doc":"Callback implementation for Ecto.Type.cast/1 .","ref":"Glific.Media.Type.html#cast/1","title":"Glific.Media.Type.cast/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.dump/1 .","ref":"Glific.Media.Type.html#dump/1","title":"Glific.Media.Type.dump/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.embed_as/1 .","ref":"Glific.Media.Type.html#embed_as/1","title":"Glific.Media.Type.embed_as/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.equal?/2 .","ref":"Glific.Media.Type.html#equal?/2","title":"Glific.Media.Type.equal?/2","type":"function"},{"doc":"Callback implementation for Ecto.Type.load/1 .","ref":"Glific.Media.Type.html#load/1","title":"Glific.Media.Type.load/1","type":"function"},{"doc":"Callback implementation for Ecto.Type.type/0 .","ref":"Glific.Media.Type.html#type/0","title":"Glific.Media.Type.type/0","type":"function"},{"doc":"The Messages Conversations context.","ref":"Glific.MessageConversations.html","title":"Glific.MessageConversations","type":"module"},{"doc":"Creates a message conversation Examples iex&gt; create_message_conversation ( %{ field : value } ) { :ok , % MessageConversation { } } iex&gt; create_message_conversation ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.MessageConversations.html#create_message_conversation/1","title":"Glific.MessageConversations.create_message_conversation/1","type":"function"},{"doc":"Deletes a message conversation. Examples iex&gt; delete_message_conversation ( message ) { :ok , % MessageConversation { } } iex&gt; delete_message_conversation ( message ) { :error , % Ecto.Changeset { } }","ref":"Glific.MessageConversations.html#delete_message_conversation/1","title":"Glific.MessageConversations.delete_message_conversation/1","type":"function"},{"doc":"Gets a single message conversation Raises Ecto.NoResultsError if the Message does not exist. Examples iex&gt; get_message_conversation! ( 123 ) % Message { } iex&gt; get_message_conversation! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.MessageConversations.html#get_message_conversation!/1","title":"Glific.MessageConversations.get_message_conversation!/1","type":"function"},{"doc":"Updates a message conversation. Examples iex&gt; update_message_conversation ( message_conversation , %{ field : new_value } ) { :ok , % MessageConversation { } } iex&gt; update_message_conversation ( message_conversation , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.MessageConversations.html#update_message_conversation/2","title":"Glific.MessageConversations.update_message_conversation/2","type":"function"},{"doc":"The Messages context.","ref":"Glific.Messages.html","title":"Glific.Messages","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking message changes. Examples iex&gt; change_message ( message ) % Ecto.Changeset { data : % Message { } }","ref":"Glific.Messages.html#change_message/2","title":"Glific.Messages.change_message/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking message media changes. Examples iex&gt; change_message_media ( message_media ) % Ecto.Changeset { data : % MessageMedia { } }","ref":"Glific.Messages.html#change_message_media/2","title":"Glific.Messages.change_message_media/2","type":"function"},{"doc":"Delete all messages of a contact","ref":"Glific.Messages.html#clear_messages/1","title":"Glific.Messages.clear_messages/1","type":"function"},{"doc":"Return the count of messages, using the same filter as list_messages","ref":"Glific.Messages.html#count_messages/1","title":"Glific.Messages.count_messages/1","type":"function"},{"doc":"Return the count of messages, using the same filter as list_messages","ref":"Glific.Messages.html#count_messages_media/1","title":"Glific.Messages.count_messages_media/1","type":"function"},{"doc":"Send a hsm template message to the specific contact.","ref":"Glific.Messages.html#create_and_send_hsm_message/1","title":"Glific.Messages.create_and_send_hsm_message/1","type":"function"},{"doc":"Create and send message to all contacts of a group","ref":"Glific.Messages.html#create_and_send_message_to_group/3","title":"Glific.Messages.create_and_send_message_to_group/3","type":"function"},{"doc":"Send a session template to the specific contact. This is typically used in automation","ref":"Glific.Messages.html#create_and_send_session_template/2","title":"Glific.Messages.create_and_send_session_template/2","type":"function"},{"doc":"Record a message sent to a group in the message table. This message is actually not sent, but is used for display purposes in the group listings","ref":"Glific.Messages.html#create_group_message/1","title":"Glific.Messages.create_group_message/1","type":"function"},{"doc":"Creates a message. Examples iex&gt; create_message ( %{ field : value } ) { :ok , % Message { } } iex&gt; create_message ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Messages.html#create_message/1","title":"Glific.Messages.create_message/1","type":"function"},{"doc":"Creates a message media. Examples iex&gt; create_message_media ( %{ field : value } ) { :ok , % MessageMedia { } } iex&gt; create_message_media ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Messages.html#create_message_media/1","title":"Glific.Messages.create_message_media/1","type":"function"},{"doc":"We need to simulate a few messages as we move to the system. This is a wrapper function to add those messages, which trigger specific actions within flows. e.g. include: Completed, Failure, Success etc","ref":"Glific.Messages.html#create_temp_message/3","title":"Glific.Messages.create_temp_message/3","type":"function"},{"doc":"Deletes a message. Examples iex&gt; delete_message ( message ) { :ok , % Message { } } iex&gt; delete_message ( message ) { :error , % Ecto.Changeset { } }","ref":"Glific.Messages.html#delete_message/1","title":"Glific.Messages.delete_message/1","type":"function"},{"doc":"Deletes a message media. Examples iex&gt; delete_message_media ( message_media ) { :ok , % MessageMedia { } } iex&gt; delete_message_media ( message_media ) { :error , % Ecto.Changeset { } }","ref":"Glific.Messages.html#delete_message_media/1","title":"Glific.Messages.delete_message_media/1","type":"function"},{"doc":"Get Media type from a url. We will primary use it for when we receive the url from EEX call.","ref":"Glific.Messages.html#get_media_type_from_url/1","title":"Glific.Messages.get_media_type_from_url/1","type":"function"},{"doc":"Gets a single message. Raises Ecto.NoResultsError if the Message does not exist. Examples iex&gt; get_message! ( 123 ) % Message { } iex&gt; get_message! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Messages.html#get_message!/1","title":"Glific.Messages.get_message!/1","type":"function"},{"doc":"Gets a single message media. Raises Ecto.NoResultsError if the Message media does not exist. Examples iex&gt; get_message_media! ( 123 ) % MessageMedia { } iex&gt; get_message_media! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Messages.html#get_message_media!/1","title":"Glific.Messages.get_message_media!/1","type":"function"},{"doc":"Given a list of message ids builds a conversation list with most recent conversations at the beginning of the list","ref":"Glific.Messages.html#list_conversations/2","title":"Glific.Messages.list_conversations/2","type":"function"},{"doc":"Returns the list of filtered messages. Examples iex&gt; list_messages ( map ( ) ) [ % Message { } , ... ]","ref":"Glific.Messages.html#list_messages/1","title":"Glific.Messages.list_messages/1","type":"function"},{"doc":"Returns the list of message media. Examples iex&gt; list_messages_media ( map ( ) ) [ % MessageMedia { } , ... ]","ref":"Glific.Messages.html#list_messages_media/1","title":"Glific.Messages.list_messages_media/1","type":"function"},{"doc":"Mark that the user has read all messages sent by a given contact","ref":"Glific.Messages.html#mark_contact_messages_as_read/2","title":"Glific.Messages.mark_contact_messages_as_read/2","type":"function"},{"doc":"Create and insert a notification for this error when sending a message. Add as much detail, so we can reverse-engineer why the sending failed.","ref":"Glific.Messages.html#notify/2","title":"Glific.Messages.notify/2","type":"function"},{"doc":"Check if the tag is present in message","ref":"Glific.Messages.html#tag_in_message?/2","title":"Glific.Messages.tag_in_message?/2","type":"function"},{"doc":"Updates a message. Examples iex&gt; update_message ( message , %{ field : new_value } ) { :ok , % Message { } } iex&gt; update_message ( message , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Messages.html#update_message/2","title":"Glific.Messages.update_message/2","type":"function"},{"doc":"Updates a message media. Examples iex&gt; update_message_media ( message_media , %{ field : new_value } ) { :ok , % MessageMedia { } } iex&gt; update_message_media ( message_media , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Messages.html#update_message_media/2","title":"Glific.Messages.update_message_media/2","type":"function"},{"doc":"Message conversation are mapped with a message","ref":"Glific.Messages.MessageConversation.html","title":"Glific.Messages.MessageConversation","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Messages.MessageConversation.html#changeset/2","title":"Glific.Messages.MessageConversation.changeset/2","type":"function"},{"doc":"","ref":"Glific.Messages.MessageConversation.html#t:t/0","title":"Glific.Messages.MessageConversation.t/0","type":"type"},{"doc":"Message media are mapped with a message","ref":"Glific.Messages.MessageMedia.html","title":"Glific.Messages.MessageMedia","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Messages.MessageMedia.html#changeset/2","title":"Glific.Messages.MessageMedia.changeset/2","type":"function"},{"doc":"","ref":"Glific.Messages.MessageMedia.html#t:t/0","title":"Glific.Messages.MessageMedia.t/0","type":"type"},{"doc":"Wrapper for various statistical tables which we can cache and write to in batch. For now, we are managing the flow_counts table","ref":"Glific.Metrics.html","title":"Glific.Metrics","type":"module"},{"doc":"Bump the count for a specific node/exit within a flow","ref":"Glific.Metrics.html#bump/1","title":"Glific.Metrics.bump/1","type":"function"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Glific.Metrics.html#child_spec/1","title":"Glific.Metrics.child_spec/1","type":"function"},{"doc":"Simple worker which caches all the counts for a specific flow and writes them out in batches. This allows us to amortize multiple requests into one DB write. Module influenced and borrowed from: https://dashbit.co/blog/homemade-analytics-with-ecto-and-elixir","ref":"Glific.Metrics.Worker.html","title":"Glific.Metrics.Worker","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Glific.Metrics.Worker.html#child_spec/1","title":"Glific.Metrics.Worker.child_spec/1","type":"function"},{"doc":"Glific Navanatech for all api calls to navatech","ref":"Glific.Navanatech.html","title":"Glific.Navanatech","type":"module"},{"doc":"Get the tesla client with existing configurations.","ref":"Glific.Navanatech.html#client/1","title":"Glific.Navanatech.client/1","type":"function"},{"doc":"Decode a text or audio file","ref":"Glific.Navanatech.html#decode_message/1","title":"Glific.Navanatech.decode_message/1","type":"function"},{"doc":"The notifications manager and API to interface with the notification sub-system","ref":"Glific.Notifications.html","title":"Glific.Notifications","type":"module"},{"doc":"Return the count of notifications, using the same filter as list_notifications","ref":"Glific.Notifications.html#count_notifications/1","title":"Glific.Notifications.count_notifications/1","type":"function"},{"doc":"Create a Notification","ref":"Glific.Notifications.html#create_notification/1","title":"Glific.Notifications.create_notification/1","type":"function"},{"doc":"Returns the list of notifications. Since this is very basic and only listing functionality we added the status filter like this. In future we will put the status as virtual filed in the notifications itself.","ref":"Glific.Notifications.html#list_notifications/1","title":"Glific.Notifications.list_notifications/1","type":"function"},{"doc":"Mark all the unread messages as read.","ref":"Glific.Notifications.html#mark_notification_as_read/0","title":"Glific.Notifications.mark_notification_as_read/0","type":"function"},{"doc":"We will pick the types from here to keep the consistency","ref":"Glific.Notifications.html#types/0","title":"Glific.Notifications.types/0","type":"function"},{"doc":"Update a Notification","ref":"Glific.Notifications.html#update_notification/2","title":"Glific.Notifications.update_notification/2","type":"function"},{"doc":"The Partners context. This is the gateway for the application to access/update all the organization and Provider information.","ref":"Glific.Partners.html","title":"Glific.Partners","type":"module"},{"doc":"List of organizations that are active within the system","ref":"Glific.Partners.html#active_organizations/2","title":"Glific.Partners.active_organizations/2","type":"function"},{"doc":"Check if we can allow attachments for this organization. For now, this is a check to see if GCS is enabled for this organization","ref":"Glific.Partners.html#attachments_enabled?/1","title":"Glific.Partners.attachments_enabled?/1","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking organization changes. Examples iex&gt; Glific.Partners . change_organization ( organization ) % Ecto.Changeset { data : % Glific.Partners.Organization { } }","ref":"Glific.Partners.html#change_organization/2","title":"Glific.Partners.change_organization/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking provider changes. Examples iex&gt; change_provider(provider) %Ecto.Changeset{data: %Provider{}}","ref":"Glific.Partners.html#change_provider/2","title":"Glific.Partners.change_provider/2","type":"function"},{"doc":"Wrapper query used by various statistics collection routines in Glific to return counts on contact with its variations","ref":"Glific.Partners.html#contact_organization_query/1","title":"Glific.Partners.contact_organization_query/1","type":"function"},{"doc":"Return the count of organizations, using the same filter as list_organizations","ref":"Glific.Partners.html#count_organizations/1","title":"Glific.Partners.count_organizations/1","type":"function"},{"doc":"Return the count of providers, using the same filter as list_providers","ref":"Glific.Partners.html#count_providers/1","title":"Glific.Partners.count_providers/1","type":"function"},{"doc":"Creates an organization's credential","ref":"Glific.Partners.html#create_credential/1","title":"Glific.Partners.create_credential/1","type":"function"},{"doc":"Creates a organization. Examples iex&gt; Glific.Partners . create_organization ( %{ name : value } ) { :ok , % Glific.Partners.Organization { } } iex&gt; Glific.Partners . create_organization ( %{ bad_field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Partners.html#create_organization/1","title":"Glific.Partners.create_organization/1","type":"function"},{"doc":"Create a Client Data struct","ref":"Glific.Partners.html#create_organization_data/1","title":"Glific.Partners.create_organization_data/1","type":"function"},{"doc":"Creates a provider. Examples iex&gt; create_provider ( %{ field : value } ) { :ok , % Provider { } } iex&gt; create_provider ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Partners.html#create_provider/1","title":"Glific.Partners.create_provider/1","type":"function"},{"doc":"Deletes an Organization. Examples iex&gt; Glific.Partners . delete_organization ( organization ) { :ok , % Glific.Partners.Organization { } } iex&gt; delete_organization ( organization ) { :error , % Ecto.Changeset { } }","ref":"Glific.Partners.html#delete_organization/1","title":"Glific.Partners.delete_organization/1","type":"function"},{"doc":"Delete Client Data struct","ref":"Glific.Partners.html#delete_organization_data/1","title":"Glific.Partners.delete_organization_data/1","type":"function"},{"doc":"Deletes a provider. Examples iex&gt; delete_provider ( provider ) { :ok , % Provider { } } iex&gt; delete_provider ( provider ) { :error , % Ecto.Changeset { } }","ref":"Glific.Partners.html#delete_provider/1","title":"Glific.Partners.delete_provider/1","type":"function"},{"doc":"Disable a specific credential for the organization","ref":"Glific.Partners.html#disable_credential/3","title":"Glific.Partners.disable_credential/3","type":"function"},{"doc":"Given a minimal organization object, fill it up and store in cache. Making this public so we can call from test harness and avoid SQL Sandbox issues","ref":"Glific.Partners.html#fill_cache/1","title":"Glific.Partners.fill_cache/1","type":"function"},{"doc":"Returns bsp balance for an organization","ref":"Glific.Partners.html#get_bsp_balance/1","title":"Glific.Partners.get_bsp_balance/1","type":"function"},{"doc":"Determine if we need to enable contact profile for an organization","ref":"Glific.Partners.html#get_contact_profile_enabled/1","title":"Glific.Partners.get_contact_profile_enabled/1","type":"function"},{"doc":"Get organization's credential by service shortcode","ref":"Glific.Partners.html#get_credential/1","title":"Glific.Partners.get_credential/1","type":"function"},{"doc":"Determine if we need to show uuid on the nodes.","ref":"Glific.Partners.html#get_flow_uuid_display/1","title":"Glific.Partners.get_flow_uuid_display/1","type":"function"},{"doc":"Convert global field to map for variable substitution","ref":"Glific.Partners.html#get_global_field_map/1","title":"Glific.Partners.get_global_field_map/1","type":"function"},{"doc":"Common function to get the goth config","ref":"Glific.Partners.html#get_goth_token/2","title":"Glific.Partners.get_goth_token/2","type":"function"},{"doc":"Get all the services and status for a given organization id.","ref":"Glific.Partners.html#get_org_services_by_id/1","title":"Glific.Partners.get_org_services_by_id/1","type":"function"},{"doc":"Gets a single organization. Raises Ecto.NoResultsError if the organization does not exist. Examples iex&gt; Glific.Partners.get_organization!(1) %Glific.Partners.Organization{} iex&gt; Glific.Partners.get_organization!(-1) ** (Ecto.NoResultsError)","ref":"Glific.Partners.html#get_organization!/1","title":"Glific.Partners.get_organization!/1","type":"function"},{"doc":"Returns a map of organizations services as key value pair","ref":"Glific.Partners.html#get_organization_services/0","title":"Glific.Partners.get_organization_services/0","type":"function"},{"doc":"Gets a single provider. Raises Ecto.NoResultsError if the Provider does not exist. Examples iex&gt; get_provider! ( 123 ) % Provider { } iex&gt; get_provider! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Partners.html#get_provider!/1","title":"Glific.Partners.get_provider!/1","type":"function"},{"doc":"Returns quality rating information for an organization provider","ref":"Glific.Partners.html#get_quality_rating/1","title":"Glific.Partners.get_quality_rating/1","type":"function"},{"doc":"check fun_with_flag toggle for an organization and returns boolean value","ref":"Glific.Partners.html#get_roles_and_permission/1","title":"Glific.Partners.get_roles_and_permission/1","type":"function"},{"doc":"Get a List for org data","ref":"Glific.Partners.html#list_organization_data/1","title":"Glific.Partners.list_organization_data/1","type":"function"},{"doc":"Returns the list of organizations. Examples iex&gt; Glific.Partners . list_organizations ( ) [ % Glific.Partners.Organization { } , ... ]","ref":"Glific.Partners.html#list_organizations/1","title":"Glific.Partners.list_organizations/1","type":"function"},{"doc":"Returns the list of providers. Examples iex&gt; list_providers ( ) [ % Provider { } , ... ]","ref":"Glific.Partners.html#list_providers/1","title":"Glific.Partners.list_providers/1","type":"function"},{"doc":"Follow the cachex protocol to load the cache from the DB","ref":"Glific.Partners.html#load_cache/1","title":"Glific.Partners.load_cache/1","type":"function"},{"doc":"Insert or update data if key present for OrganizationData table.","ref":"Glific.Partners.html#maybe_insert_organization_data/3","title":"Glific.Partners.maybe_insert_organization_data/3","type":"function"},{"doc":"Given an empty list, determine which organizations have been active in the recent past","ref":"Glific.Partners.html#org_id_list/2","title":"Glific.Partners.org_id_list/2","type":"function"},{"doc":"Cache the entire organization structure.","ref":"Glific.Partners.html#organization/1","title":"Glific.Partners.organization/1","type":"function"},{"doc":"This contact id is special since it is the sender for all outbound messages and the receiver for all inbound messages","ref":"Glific.Partners.html#organization_contact_id/1","title":"Glific.Partners.organization_contact_id/1","type":"function"},{"doc":"Get the default language id","ref":"Glific.Partners.html#organization_language_id/1","title":"Glific.Partners.organization_language_id/1","type":"function"},{"doc":"Get the timezone","ref":"Glific.Partners.html#organization_timezone/1","title":"Glific.Partners.organization_timezone/1","type":"function"},{"doc":"Execute a function across all active organizations. This function is typically called by a micron job worker process The handler is expected to take the organization id as its first argument. The second argument is expected to be a map of arguments passed in by the cron job, and can be ignored if not used The list is a restricted list of organizations, so we dont repeatedly do work. The convention is as follows: list == nil - the action should not be performed for any organization list == [] (empty list) - the action should be performed for all organizations list == [ values ] - the actions should be performed only for organizations in the values list","ref":"Glific.Partners.html#perform_all/4","title":"Glific.Partners.perform_all/4","type":"function"},{"doc":"Get the organizations which had a message transaction in the last minutes as defined by @active_minutes","ref":"Glific.Partners.html#recent_organizations/2","title":"Glific.Partners.recent_organizations/2","type":"function"},{"doc":"Removing organization and service cache","ref":"Glific.Partners.html#remove_organization_cache/2","title":"Glific.Partners.remove_organization_cache/2","type":"function"},{"doc":"Set BSP APP id whenever we update the bsp credentials.","ref":"Glific.Partners.html#set_bsp_app_id/2","title":"Glific.Partners.set_bsp_app_id/2","type":"function"},{"doc":"Suspend an organization till the start of the next day for the organization (we still need to figure out if this is the right WABA interpretation)","ref":"Glific.Partners.html#suspend_organization/2","title":"Glific.Partners.suspend_organization/2","type":"function"},{"doc":"Resume all organization that are suspended if we are past the suspended time, we check this on an hourly basis for all organizations that are in a suspended state via a cron job","ref":"Glific.Partners.html#unsuspend_organizations/0","title":"Glific.Partners.unsuspend_organizations/0","type":"function"},{"doc":"Updates an organization's credential","ref":"Glific.Partners.html#update_credential/2","title":"Glific.Partners.update_credential/2","type":"function"},{"doc":"Updates an organization. Examples iex&gt; Glific.Partners . update_organization ( Organization , %{ name : new_name } ) { :ok , % Glific.Partners.Organization { } } iex&gt; Glific.Partners . update_organization ( Organization , %{ abc : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Partners.html#update_organization/2","title":"Glific.Partners.update_organization/2","type":"function"},{"doc":"Update a Client Data struct","ref":"Glific.Partners.html#update_organization_data/2","title":"Glific.Partners.update_organization_data/2","type":"function"},{"doc":"Updates a provider. Examples iex&gt; update_provider ( provider , %{ field : new_value } ) { :ok , % Provider { } } iex&gt; update_provider ( provider , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Partners.html#update_provider/2","title":"Glific.Partners.update_provider/2","type":"function"},{"doc":"We will use this as the main context interface for all billing subscriptions and the stripe interface.","ref":"Glific.Partners.Billing.html","title":"Glific.Partners.Billing","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Partners.Billing.html#changeset/2","title":"Glific.Partners.Billing.changeset/2","type":"function"},{"doc":"Create a billing record in glific, a billing customer in Stripe, given an organization","ref":"Glific.Partners.Billing.html#create/2","title":"Glific.Partners.Billing.create/2","type":"function"},{"doc":"Create a billing record","ref":"Glific.Partners.Billing.html#create_billing/1","title":"Glific.Partners.Billing.create_billing/1","type":"function"},{"doc":"Once the organization has entered a new payment card we create a subscription for it. We'll do updating the card in a seperate function","ref":"Glific.Partners.Billing.html#create_subscription/2","title":"Glific.Partners.Billing.create_subscription/2","type":"function"},{"doc":"Adding credit to customer in Stripe","ref":"Glific.Partners.Billing.html#credit_customer/1","title":"Glific.Partners.Billing.credit_customer/1","type":"function"},{"doc":"fetches customer portal url of organization with billing status as active","ref":"Glific.Partners.Billing.html#customer_portal_link/1","title":"Glific.Partners.Billing.customer_portal_link/1","type":"function"},{"doc":"Delete the billing record","ref":"Glific.Partners.Billing.html#delete_billing/1","title":"Glific.Partners.Billing.delete_billing/1","type":"function"},{"doc":"Retrieve a billing record by clauses","ref":"Glific.Partners.Billing.html#get_billing/1","title":"Glific.Partners.Billing.get_billing/1","type":"function"},{"doc":"Validate entered coupon code and return with coupon details","ref":"Glific.Partners.Billing.html#get_promo_codes/1","title":"Glific.Partners.Billing.get_promo_codes/1","type":"function"},{"doc":"A common function for making Stripe API calls with params that are not supported withing Stripity Stripe","ref":"Glific.Partners.Billing.html#make_stripe_request/4","title":"Glific.Partners.Billing.make_stripe_request/4","type":"function"},{"doc":"This is called on a regular schedule to update usage.","ref":"Glific.Partners.Billing.html#period_usage/1","title":"Glific.Partners.Billing.period_usage/1","type":"function"},{"doc":"Record the usage for a specific organization from start_date to end_date both dates inclusive","ref":"Glific.Partners.Billing.html#record_usage/3","title":"Glific.Partners.Billing.record_usage/3","type":"function"},{"doc":"Fetch the stripe id's","ref":"Glific.Partners.Billing.html#stripe_ids/0","title":"Glific.Partners.Billing.stripe_ids/0","type":"function"},{"doc":"Stripe subscription created callback via webhooks. We are using this to update the prorate data with monthly billing.","ref":"Glific.Partners.Billing.html#subscription_created_callback/2","title":"Glific.Partners.Billing.subscription_created_callback/2","type":"function"},{"doc":"Fetch the stripe tax rates","ref":"Glific.Partners.Billing.html#tax_rates/0","title":"Glific.Partners.Billing.tax_rates/0","type":"function"},{"doc":"Upate the billing record","ref":"Glific.Partners.Billing.html#update_billing/2","title":"Glific.Partners.Billing.update_billing/2","type":"function"},{"doc":"Update organization and stripe customer with the current payment method as returned by stripe","ref":"Glific.Partners.Billing.html#update_payment_method/2","title":"Glific.Partners.Billing.update_payment_method/2","type":"function"},{"doc":"Upate the stripe customer details record","ref":"Glific.Partners.Billing.html#update_stripe_customer/2","title":"Glific.Partners.Billing.update_stripe_customer/2","type":"function"},{"doc":"Update organization subscription plan","ref":"Glific.Partners.Billing.html#update_subscription/2","title":"Glific.Partners.Billing.update_subscription/2","type":"function"},{"doc":"Update subscription details. We will also use this method while updating the details form webhook.","ref":"Glific.Partners.Billing.html#update_subscription_details/3","title":"Glific.Partners.Billing.update_subscription_details/3","type":"function"},{"doc":"Update the usage record for all active subscriptions on a daily and weekly basis","ref":"Glific.Partners.Billing.html#update_usage/2","title":"Glific.Partners.Billing.update_usage/2","type":"function"},{"doc":"","ref":"Glific.Partners.Billing.html#t:t/0","title":"Glific.Partners.Billing.t/0","type":"type"},{"doc":"Organization's credentials","ref":"Glific.Partners.Credential.html","title":"Glific.Partners.Credential","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Partners.Credential.html#changeset/2","title":"Glific.Partners.Credential.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Credential.html#t:t/0","title":"Glific.Partners.Credential.t/0","type":"type"},{"doc":"Invoice model wrapper","ref":"Glific.Partners.Invoice.html","title":"Glific.Partners.Invoice","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Partners.Invoice.html#changeset/2","title":"Glific.Partners.Invoice.changeset/2","type":"function"},{"doc":"Return the count of invoices, based on filters","ref":"Glific.Partners.Invoice.html#count_invoices/1","title":"Glific.Partners.Invoice.count_invoices/1","type":"function"},{"doc":"Create an invoice record","ref":"Glific.Partners.Invoice.html#create_invoice/1","title":"Glific.Partners.Invoice.create_invoice/1","type":"function"},{"doc":"Fetch an invoice record by clauses","ref":"Glific.Partners.Invoice.html#fetch_invoice/1","title":"Glific.Partners.Invoice.fetch_invoice/1","type":"function"},{"doc":"Update an invoice record","ref":"Glific.Partners.Invoice.html#update_invoice/2","title":"Glific.Partners.Invoice.update_invoice/2","type":"function"},{"doc":"Update the status of an invoice","ref":"Glific.Partners.Invoice.html#update_invoice_status/2","title":"Glific.Partners.Invoice.update_invoice_status/2","type":"function"},{"doc":"","ref":"Glific.Partners.Invoice.html#t:t/0","title":"Glific.Partners.Invoice.t/0","type":"type"},{"doc":"Organizations are the group of users who will access the system","ref":"Glific.Partners.Organization.html","title":"Glific.Partners.Organization","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Partners.Organization.html#changeset/2","title":"Glific.Partners.Organization.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Organization.html#t:t/0","title":"Glific.Partners.Organization.t/0","type":"type"},{"doc":"The Glific abstraction to represent the organization settings of out of office","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.html","title":"Glific.Partners.OrganizationSettings.OutOfOffice","type":"module"},{"doc":"Standard changeset pattern for embedded schema","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.html#out_of_office_changeset/2","title":"Glific.Partners.OrganizationSettings.OutOfOffice.out_of_office_changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.html#t:t/0","title":"Glific.Partners.OrganizationSettings.OutOfOffice.t/0","type":"type"},{"doc":"The Glific abstraction to represent the out of office enabled day schema","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.html","title":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay","type":"module"},{"doc":"Changeset pattern for embedded schema of enabled_day","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.html#enabled_day_changeset/2","title":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.enabled_day_changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.html#t:t/0","title":"Glific.Partners.OrganizationSettings.OutOfOffice.EnabledDay.t/0","type":"type"},{"doc":"Provider are the third party Business Service providers who will give a access of WhatsApp API","ref":"Glific.Partners.Provider.html","title":"Glific.Partners.Provider","type":"module"},{"doc":"A centralize function to get the currently active provider module. As this point of time we can not construct this module name dynamically that's why these are static for now.","ref":"Glific.Partners.Provider.html#bsp_module/2","title":"Glific.Partners.Provider.bsp_module/2","type":"function"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Partners.Provider.html#changeset/2","title":"Glific.Partners.Provider.changeset/2","type":"function"},{"doc":"","ref":"Glific.Partners.Provider.html#t:t/0","title":"Glific.Partners.Provider.t/0","type":"type"},{"doc":"Saas is the DB table that holds the various parameters we need to run the service.","ref":"Glific.Partners.Saas.html","title":"Glific.Partners.Saas","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Partners.Saas.html#changeset/2","title":"Glific.Partners.Saas.changeset/2","type":"function"},{"doc":"Partner API credentials for Guphsup","ref":"Glific.Partners.Saas.html#isv_credentials/1","title":"Glific.Partners.Saas.isv_credentials/1","type":"function"},{"doc":"SaaS organization id to store BQ data under the context of the SaaS org credentials (specifically global stats data)","ref":"Glific.Partners.Saas.html#organization_id/1","title":"Glific.Partners.Saas.organization_id/1","type":"function"},{"doc":"SaaS Phone to create admin accounts","ref":"Glific.Partners.Saas.html#phone/1","title":"Glific.Partners.Saas.phone/1","type":"function"},{"doc":"SaaS primary email for the service and notifications","ref":"Glific.Partners.Saas.html#primary_email/1","title":"Glific.Partners.Saas.primary_email/1","type":"function"},{"doc":"SaaS stripe ids for billing purpose, convert the string keys to atoms","ref":"Glific.Partners.Saas.html#stripe_ids/1","title":"Glific.Partners.Saas.stripe_ids/1","type":"function"},{"doc":"SaaS tax rates for adding tax to subscription and invoices, convert the string keys to atoms","ref":"Glific.Partners.Saas.html#tax_rates/1","title":"Glific.Partners.Saas.tax_rates/1","type":"function"},{"doc":"","ref":"Glific.Partners.Saas.html#t:t/0","title":"Glific.Partners.Saas.t/0","type":"type"},{"doc":"Given a message, run it thru the flow engine. This is an auxilary module to help consumer_worker which is the main workhorse","ref":"Glific.Processor.ConsumerFlow.html","title":"Glific.Processor.ConsumerFlow","type":"module"},{"doc":"Start a flow or reactivate a flow if needed. This will be linked to the entire trigger mechanism once we have that under control.","ref":"Glific.Processor.ConsumerFlow.html#check_flows/4","title":"Glific.Processor.ConsumerFlow.check_flows/4","type":"function"},{"doc":"Load the relevant state into the gen_server state object that we need to process messages","ref":"Glific.Processor.ConsumerFlow.html#load_state/1","title":"Glific.Processor.ConsumerFlow.load_state/1","type":"function"},{"doc":"In case contact is not in optin flow let's move ahead with the regualr processing.","ref":"Glific.Processor.ConsumerFlow.html#move_forward/4","title":"Glific.Processor.ConsumerFlow.move_forward/4","type":"function"},{"doc":"Process all messages of type consumer and run them thru the various in-built taggers.","ref":"Glific.Processor.ConsumerTagger.html","title":"Glific.Processor.ConsumerTagger","type":"module"},{"doc":"Load the relevant state into the gen_server state object that we need to process messages","ref":"Glific.Processor.ConsumerTagger.html#load_state/1","title":"Glific.Processor.ConsumerTagger.load_state/1","type":"function"},{"doc":"Process all messages of type consumer and run them thru the various in-built taggers. At a later stage, we will also do translation and dialogflow queries as an offshoot from this GenStage","ref":"Glific.Processor.ConsumerWorker.html","title":"Glific.Processor.ConsumerWorker","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Glific.Processor.ConsumerWorker.html#child_spec/1","title":"Glific.Processor.ConsumerWorker.child_spec/1","type":"function"},{"doc":"Sets the immutable state for a specific organization. Making this public, so we can call it from the test suite","ref":"Glific.Processor.ConsumerWorker.html#load_state/1","title":"Glific.Processor.ConsumerWorker.load_state/1","type":"function"},{"doc":"A mock for the consumer worker for poolboy","ref":"Glific.Processor.ConsumerWorkerMock.html","title":"Glific.Processor.ConsumerWorkerMock","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Glific.Processor.ConsumerWorkerMock.html#child_spec/1","title":"Glific.Processor.ConsumerWorkerMock.child_spec/1","type":"function"},{"doc":"Helper functions for all processing modules. Might promote this up at a later stage","ref":"Glific.Processor.Helper.html","title":"Glific.Processor.Helper","type":"module"},{"doc":"Helper function to add tag","ref":"Glific.Processor.Helper.html#add_dialogflow_tag/2","title":"Glific.Processor.Helper.add_dialogflow_tag/2","type":"function"},{"doc":"Helper function to add tag","ref":"Glific.Processor.Helper.html#add_tag/3","title":"Glific.Processor.Helper.add_tag/3","type":"function"},{"doc":"The Profiles context.","ref":"Glific.Profiles.html","title":"Glific.Profiles","type":"module"},{"doc":"Creates a profile. Examples iex&gt; create_profile ( %{ field : value } ) { :ok , % Profile { } } iex&gt; create_profile ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Profiles.html#create_profile/1","title":"Glific.Profiles.create_profile/1","type":"function"},{"doc":"Deletes a profile. Examples iex&gt; delete_profile ( profile ) { :ok , % Profile { } } iex&gt; delete_profile ( profile ) { :error , % Ecto.Changeset { } }","ref":"Glific.Profiles.html#delete_profile/1","title":"Glific.Profiles.delete_profile/1","type":"function"},{"doc":"Get a profile associated with a contact indexed and sorted in ascending order Examples iex&gt; Glific.Profiles . get_indexed_profile ( con ) [ { % Profile { } , 1 } , { % Profile { } , 2 } ]","ref":"Glific.Profiles.html#get_indexed_profile/1","title":"Glific.Profiles.get_indexed_profile/1","type":"function"},{"doc":"Gets a single profile. Raises Ecto.NoResultsError if the Profile does not exist. Examples iex&gt; get_profile! ( 123 ) % Profile { } iex&gt; get_profile! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Profiles.html#get_profile!/1","title":"Glific.Profiles.get_profile!/1","type":"function"},{"doc":"Handles flow action based on type of operation on Profile","ref":"Glific.Profiles.html#handle_flow_action/3","title":"Glific.Profiles.handle_flow_action/3","type":"function"},{"doc":"Returns the list of profiles. Examples iex&gt; list_profiles ( ) [ % Profile { } , ... ] Get the list of profiles filtered by various search options","ref":"Glific.Profiles.html#list_profiles/1","title":"Glific.Profiles.list_profiles/1","type":"function"},{"doc":"Switches active profile of a contact Examples iex&gt; switch_profile ( contact ) { :ok , % Profile { } }","ref":"Glific.Profiles.html#switch_profile/2","title":"Glific.Profiles.switch_profile/2","type":"function"},{"doc":"Updates a profile. Examples iex&gt; update_profile ( profile , %{ field : new_value } ) { :ok , % Profile { } } iex&gt; update_profile ( profile , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Profiles.html#update_profile/2","title":"Glific.Profiles.update_profile/2","type":"function"},{"doc":"The schema for profile","ref":"Glific.Profiles.Profile.html","title":"Glific.Profiles.Profile","type":"module"},{"doc":"Changeset for the profile. It takes profile struct and attrs to cast and put validation on it.","ref":"Glific.Profiles.Profile.html#changeset/2","title":"Glific.Profiles.Profile.changeset/2","type":"function"},{"doc":"","ref":"Glific.Profiles.Profile.html#t:t/0","title":"Glific.Profiles.Profile.t/0","type":"type"},{"doc":"The contact behaviour which all the providers needs to implement for communication","ref":"Glific.Providers.ContactBehaviour.html","title":"Glific.Providers.ContactBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Providers.ContactBehaviour.html#c:optin_contact/1","title":"Glific.Providers.ContactBehaviour.optin_contact/1","type":"callback"},{"doc":"Https API client to interact with Gupshup","ref":"Glific.Providers.Gupshup.ApiClient.html","title":"Glific.Providers.Gupshup.ApiClient","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#delete!/3","title":"Glific.Providers.Gupshup.ApiClient.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#delete/3","title":"Glific.Providers.Gupshup.ApiClient.delete/3","type":"function"},{"doc":"Fetch opted in contacts data from providers server","ref":"Glific.Providers.Gupshup.ApiClient.html#fetch_opted_in_contacts/1","title":"Glific.Providers.Gupshup.ApiClient.fetch_opted_in_contacts/1","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#get!/3","title":"Glific.Providers.Gupshup.ApiClient.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#get/3","title":"Glific.Providers.Gupshup.ApiClient.get/3","type":"function"},{"doc":"Fetching HSM templates for an organization","ref":"Glific.Providers.Gupshup.ApiClient.html#get_templates/1","title":"Glific.Providers.Gupshup.ApiClient.get_templates/1","type":"function"},{"doc":"Making Tesla get call and adding api key in header","ref":"Glific.Providers.Gupshup.ApiClient.html#gupshup_get/2","title":"Glific.Providers.Gupshup.ApiClient.gupshup_get/2","type":"function"},{"doc":"Making Tesla post call and adding api key in header","ref":"Glific.Providers.Gupshup.ApiClient.html#gupshup_post/3","title":"Glific.Providers.Gupshup.ApiClient.gupshup_post/3","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#head!/3","title":"Glific.Providers.Gupshup.ApiClient.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#head/3","title":"Glific.Providers.Gupshup.ApiClient.head/3","type":"function"},{"doc":"Update a contact phone as opted in","ref":"Glific.Providers.Gupshup.ApiClient.html#optin_contact/2","title":"Glific.Providers.Gupshup.ApiClient.optin_contact/2","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#options!/3","title":"Glific.Providers.Gupshup.ApiClient.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#options/3","title":"Glific.Providers.Gupshup.ApiClient.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.ApiClient.html#patch!/4","title":"Glific.Providers.Gupshup.ApiClient.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.ApiClient.html#patch/4","title":"Glific.Providers.Gupshup.ApiClient.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.ApiClient.html#post!/4","title":"Glific.Providers.Gupshup.ApiClient.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.ApiClient.html#post/4","title":"Glific.Providers.Gupshup.ApiClient.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.ApiClient.html#put!/4","title":"Glific.Providers.Gupshup.ApiClient.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.ApiClient.html#put/4","title":"Glific.Providers.Gupshup.ApiClient.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Providers.Gupshup.ApiClient.html#request!/2","title":"Glific.Providers.Gupshup.ApiClient.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#request/2","title":"Glific.Providers.Gupshup.ApiClient.request/2","type":"function"},{"doc":"Sending message to contact","ref":"Glific.Providers.Gupshup.ApiClient.html#send_message/2","title":"Glific.Providers.Gupshup.ApiClient.send_message/2","type":"function"},{"doc":"Sending HSM template to contact","ref":"Glific.Providers.Gupshup.ApiClient.html#send_template/2","title":"Glific.Providers.Gupshup.ApiClient.send_template/2","type":"function"},{"doc":"Submitting HSM template for approval","ref":"Glific.Providers.Gupshup.ApiClient.html#submit_template_for_approval/2","title":"Glific.Providers.Gupshup.ApiClient.submit_template_for_approval/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#trace!/3","title":"Glific.Providers.Gupshup.ApiClient.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.ApiClient.html#trace/3","title":"Glific.Providers.Gupshup.ApiClient.trace/3","type":"function"},{"doc":"Build the gupshup user list url","ref":"Glific.Providers.Gupshup.ApiClient.html#users_get/2","title":"Glific.Providers.Gupshup.ApiClient.users_get/2","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Providers.Gupshup.ApiClient.html#t:option/0","title":"Glific.Providers.Gupshup.ApiClient.option/0","type":"type"},{"doc":"Http API client to interact with Gupshup Enterprise","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html","title":"Glific.Providers.Gupshup.Enterprise.ApiClient","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#delete!/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#delete/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.delete/3","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#get!/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#get/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.get/3","type":"function"},{"doc":"Making Tesla post call and adding user_id and password from credentials","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#gupshup_post/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.gupshup_post/3","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#head!/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#head/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.head/3","type":"function"},{"doc":"Update a contact phone as opted in","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#optin_contact/2","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.optin_contact/2","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#options!/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#options/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#patch!/4","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#patch/4","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#post!/4","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#post/4","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#put!/4","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#put/4","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#request!/2","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#request/2","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.request/2","type":"function"},{"doc":"Sending interactive template to contact","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#send_interactive_template/2","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.send_interactive_template/2","type":"function"},{"doc":"Sending message to contact","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#send_message/2","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.send_message/2","type":"function"},{"doc":"Sending HSM template to contact","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#send_template/2","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.send_template/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#trace!/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#trace/3","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.trace/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Providers.Gupshup.Enterprise.ApiClient.html#t:option/0","title":"Glific.Providers.Gupshup.Enterprise.ApiClient.option/0","type":"type"},{"doc":"Message API layer between application and Gupshup","ref":"Glific.Providers.Gupshup.Enterprise.Message.html","title":"Glific.Providers.Gupshup.Enterprise.Message","type":"module"},{"doc":"Module for handling response from Provider end or Handle response for simulators","ref":"Glific.Providers.Gupshup.Enterprise.ResponseHandler.html","title":"Glific.Providers.Gupshup.Enterprise.ResponseHandler","type":"module"},{"doc":"A worker to handle send message processes","ref":"Glific.Providers.Gupshup.Enterprise.Worker.html","title":"Glific.Providers.Gupshup.Enterprise.Worker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Providers.Gupshup.Enterprise.Worker.html#perform/1","title":"Glific.Providers.Gupshup.Enterprise.Worker.perform/1","type":"function"},{"doc":"Module for checking gupshup remaining balance","ref":"Glific.Providers.Gupshup.GupshupWallet.html","title":"Glific.Providers.Gupshup.GupshupWallet","type":"module"},{"doc":"function for making call to gupshup for remaining balance","ref":"Glific.Providers.Gupshup.GupshupWallet.html#balance/1","title":"Glific.Providers.Gupshup.GupshupWallet.balance/1","type":"function"},{"doc":"Message API layer between application and Gupshup","ref":"Glific.Providers.Gupshup.Message.html","title":"Glific.Providers.Gupshup.Message","type":"module"},{"doc":"A module to handle fetching tier related information like quality rating and app rating using partner API","ref":"Glific.Providers.Gupshup.PartnerAPI.html","title":"Glific.Providers.Gupshup.PartnerAPI","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#delete!/3","title":"Glific.Providers.Gupshup.PartnerAPI.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#delete/3","title":"Glific.Providers.Gupshup.PartnerAPI.delete/3","type":"function"},{"doc":"Remove hsm template from the waba.","ref":"Glific.Providers.Gupshup.PartnerAPI.html#delete_hsm_template/2","title":"Glific.Providers.Gupshup.PartnerAPI.delete_hsm_template/2","type":"function"},{"doc":"Fetch App details based on API key and App name","ref":"Glific.Providers.Gupshup.PartnerAPI.html#fetch_app_details/1","title":"Glific.Providers.Gupshup.PartnerAPI.fetch_app_details/1","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#get!/3","title":"Glific.Providers.Gupshup.PartnerAPI.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#get/3","title":"Glific.Providers.Gupshup.PartnerAPI.get/3","type":"function"},{"doc":"Get gupshup media handle id based on giving org id and the url","ref":"Glific.Providers.Gupshup.PartnerAPI.html#get_media_handle_id/3","title":"Glific.Providers.Gupshup.PartnerAPI.get_media_handle_id/3","type":"function"},{"doc":"Fetches Partner token and App Access token to get tier information for an organization with input app id","ref":"Glific.Providers.Gupshup.PartnerAPI.html#get_quality_rating/2","title":"Glific.Providers.Gupshup.PartnerAPI.get_quality_rating/2","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#head!/3","title":"Glific.Providers.Gupshup.PartnerAPI.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#head/3","title":"Glific.Providers.Gupshup.PartnerAPI.head/3","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#options!/3","title":"Glific.Providers.Gupshup.PartnerAPI.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#options/3","title":"Glific.Providers.Gupshup.PartnerAPI.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#patch!/4","title":"Glific.Providers.Gupshup.PartnerAPI.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#patch/4","title":"Glific.Providers.Gupshup.PartnerAPI.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#post!/4","title":"Glific.Providers.Gupshup.PartnerAPI.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#post/4","title":"Glific.Providers.Gupshup.PartnerAPI.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#put!/4","title":"Glific.Providers.Gupshup.PartnerAPI.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#put/4","title":"Glific.Providers.Gupshup.PartnerAPI.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Providers.Gupshup.PartnerAPI.html#request!/2","title":"Glific.Providers.Gupshup.PartnerAPI.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#request/2","title":"Glific.Providers.Gupshup.PartnerAPI.request/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#trace!/3","title":"Glific.Providers.Gupshup.PartnerAPI.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Providers.Gupshup.PartnerAPI.html#trace/3","title":"Glific.Providers.Gupshup.PartnerAPI.trace/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Providers.Gupshup.PartnerAPI.html#t:option/0","title":"Glific.Providers.Gupshup.PartnerAPI.option/0","type":"type"},{"doc":"Module for handling response from Provider end or Handle response for simulators","ref":"Glific.Providers.Gupshup.ResponseHandler.html","title":"Glific.Providers.Gupshup.ResponseHandler","type":"module"},{"doc":"Module for handling template operations specific to Gupshup","ref":"Glific.Providers.Gupshup.Template.html","title":"Glific.Providers.Gupshup.Template","type":"module"},{"doc":"Delete template from the gupshup","ref":"Glific.Providers.Gupshup.Template.html#delete/2","title":"Glific.Providers.Gupshup.Template.delete/2","type":"function"},{"doc":"Submitting HSM template for approval","ref":"Glific.Providers.Gupshup.Template.html#submit_for_approval/1","title":"Glific.Providers.Gupshup.Template.submit_for_approval/1","type":"function"},{"doc":"Updating HSM templates for an organization","ref":"Glific.Providers.Gupshup.Template.html#update_hsm_templates/1","title":"Glific.Providers.Gupshup.Template.update_hsm_templates/1","type":"function"},{"doc":"A worker to handle send message processes","ref":"Glific.Providers.Gupshup.Worker.html","title":"Glific.Providers.Gupshup.Worker","type":"module"},{"doc":"Standard perform method to use Oban worker","ref":"Glific.Providers.Gupshup.Worker.html#perform/1","title":"Glific.Providers.Gupshup.Worker.perform/1","type":"function"},{"doc":"Contacts API layer between application and Gupshup","ref":"Glific.Providers.GupshupContacts.html","title":"Glific.Providers.GupshupContacts","type":"module"},{"doc":"Fetch opted in contacts data from providers server","ref":"Glific.Providers.GupshupContacts.html#fetch_opted_in_contacts/1","title":"Glific.Providers.GupshupContacts.fetch_opted_in_contacts/1","type":"function"},{"doc":"Update a contact phone as opted in","ref":"Glific.Providers.GupshupContacts.html#optin_contact/1","title":"Glific.Providers.GupshupContacts.optin_contact/1","type":"function"},{"doc":"Perform the gupshup API call and parse the results for downstream functions","ref":"Glific.Providers.GupshupContacts.html#validate_opted_in_contacts/1","title":"Glific.Providers.GupshupContacts.validate_opted_in_contacts/1","type":"function"},{"doc":"Module for handling template operations specific to Gupshup","ref":"Glific.Providers.GupshupEnterprise.Template.html","title":"Glific.Providers.GupshupEnterprise.Template","type":"module"},{"doc":"Delete template from the gupshup","ref":"Glific.Providers.GupshupEnterprise.Template.html#delete/2","title":"Glific.Providers.GupshupEnterprise.Template.delete/2","type":"function"},{"doc":"Import pre approved templates when BSP is GupshupEnterprise","ref":"Glific.Providers.GupshupEnterprise.Template.html#import_templates/2","title":"Glific.Providers.GupshupEnterprise.Template.import_templates/2","type":"function"},{"doc":"Contacts API layer between application and Gupshup Enterprise","ref":"Glific.Providers.GupshupEnterpriseContacts.html","title":"Glific.Providers.GupshupEnterpriseContacts","type":"module"},{"doc":"Update a contact phone as opted in","ref":"Glific.Providers.GupshupEnterpriseContacts.html#optin_contact/1","title":"Glific.Providers.GupshupEnterpriseContacts.optin_contact/1","type":"function"},{"doc":"The message behaviour which all the providers needs to implement for communication","ref":"Glific.Providers.MessageBehaviour.html","title":"Glific.Providers.MessageBehaviour","type":"behaviour"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_billing_event/1","title":"Glific.Providers.MessageBehaviour.receive_billing_event/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_interactive/1","title":"Glific.Providers.MessageBehaviour.receive_interactive/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_location/1","title":"Glific.Providers.MessageBehaviour.receive_location/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_media/1","title":"Glific.Providers.MessageBehaviour.receive_media/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:receive_text/1","title":"Glific.Providers.MessageBehaviour.receive_text/1","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_audio/2","title":"Glific.Providers.MessageBehaviour.send_audio/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_document/2","title":"Glific.Providers.MessageBehaviour.send_document/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_image/2","title":"Glific.Providers.MessageBehaviour.send_image/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_interactive/2","title":"Glific.Providers.MessageBehaviour.send_interactive/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_sticker/2","title":"Glific.Providers.MessageBehaviour.send_sticker/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_text/2","title":"Glific.Providers.MessageBehaviour.send_text/2","type":"callback"},{"doc":"","ref":"Glific.Providers.MessageBehaviour.html#c:send_video/2","title":"Glific.Providers.MessageBehaviour.send_video/2","type":"callback"},{"doc":"A common worker to handle send message processes irrespective of BSP","ref":"Glific.Providers.Worker.html","title":"Glific.Providers.Worker","type":"module"},{"doc":"This file will be handling production database migrations. This is a standard elixir/ecto release file. Copied from: https://hexdocs.pm/phoenix/releases.html Called from &quot;build_scripts/entrypoint.sh&quot; just before starting up application","ref":"Glific.Release.html","title":"Glific.Release","type":"module"},{"doc":"A repository that maps to an underlying data store, controlled by the Postgres adapter. We add a few functions to make our life easier with a few helper functions that ecto does not provide.","ref":"Glific.Repo.html","title":"Glific.Repo","type":"module"},{"doc":"Implement permissioning support via groups. This is the basic wrapper, it uses a context specific permissioning wrapper to add the actual clauses","ref":"Glific.Repo.html#add_permission/3","title":"Glific.Repo.add_permission/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/3 .","ref":"Glific.Repo.html#aggregate/3","title":"Glific.Repo.aggregate/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.aggregate/4 .","ref":"Glific.Repo.html#aggregate/4","title":"Glific.Repo.aggregate/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.all/2 .","ref":"Glific.Repo.html#all/2","title":"Glific.Repo.all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checked_out?/0 .","ref":"Glific.Repo.html#checked_out?/0","title":"Glific.Repo.checked_out?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.checkout/2 .","ref":"Glific.Repo.html#checkout/2","title":"Glific.Repo.checkout/2","type":"function"},{"doc":"","ref":"Glific.Repo.html#child_spec/1","title":"Glific.Repo.child_spec/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.config/0 .","ref":"Glific.Repo.html#config/0","title":"Glific.Repo.config/0","type":"function"},{"doc":"We use this function also in most list_OBJECT api's, where we process the the filter. Centralizing this code at the top level, to make things cleaner","ref":"Glific.Repo.html#count_filter/4","title":"Glific.Repo.count_filter/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete!/2 .","ref":"Glific.Repo.html#delete!/2","title":"Glific.Repo.delete!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete/2 .","ref":"Glific.Repo.html#delete/2","title":"Glific.Repo.delete/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.delete_all/2 .","ref":"Glific.Repo.html#delete_all/2","title":"Glific.Repo.delete_all/2","type":"function"},{"doc":"In Join tables we rarely use the table id. We always know the object ids and hence more convenient to delete an entry via its object ids.","ref":"Glific.Repo.html#delete_relationships_by_ids/2","title":"Glific.Repo.delete_relationships_by_ids/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that forces all connections in the pool to disconnect within the given interval. See Ecto.Adapters.SQL.disconnect_all/3 for more information.","ref":"Glific.Repo.html#disconnect_all/2","title":"Glific.Repo.disconnect_all/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.exists?/2 .","ref":"Glific.Repo.html#exists?/2","title":"Glific.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar depending on the adapter to obtain statistics for the given query. See Ecto.Adapters.SQL.explain/4 for more information.","ref":"Glific.Repo.html#explain/3","title":"Glific.Repo.explain/3","type":"function"},{"doc":"Glific version of get, which returns a tuple with an :ok | :error as the first element","ref":"Glific.Repo.html#fetch/3","title":"Glific.Repo.fetch/3","type":"function"},{"doc":"Glific version of get_by, which returns a tuple with an :ok | :error as the first element","ref":"Glific.Repo.html#fetch_by/3","title":"Glific.Repo.fetch_by/3","type":"function"},{"doc":"Add all the common filters here, rather than in each file","ref":"Glific.Repo.html#filter_with/2","title":"Glific.Repo.filter_with/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get!/3 .","ref":"Glific.Repo.html#get!/3","title":"Glific.Repo.get!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get/3 .","ref":"Glific.Repo.html#get/3","title":"Glific.Repo.get/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by!/3 .","ref":"Glific.Repo.html#get_by!/3","title":"Glific.Repo.get_by!/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_by/3 .","ref":"Glific.Repo.html#get_by/3","title":"Glific.Repo.get_by/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.get_dynamic_repo/0 .","ref":"Glific.Repo.html#get_dynamic_repo/0","title":"Glific.Repo.get_dynamic_repo/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.in_transaction?/0 .","ref":"Glific.Repo.html#in_transaction?/0","title":"Glific.Repo.in_transaction?/0","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert!/2 .","ref":"Glific.Repo.html#insert!/2","title":"Glific.Repo.insert!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert/2 .","ref":"Glific.Repo.html#insert/2","title":"Glific.Repo.insert/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_all/3 .","ref":"Glific.Repo.html#insert_all/3","title":"Glific.Repo.insert_all/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update!/2 .","ref":"Glific.Repo.html#insert_or_update!/2","title":"Glific.Repo.insert_or_update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.insert_or_update/2 .","ref":"Glific.Repo.html#insert_or_update/2","title":"Glific.Repo.insert_or_update/2","type":"function"},{"doc":"Get map of field (typically label) to ids for easier lookup for various system objects - language, tag","ref":"Glific.Repo.html#label_id_map/4","title":"Glific.Repo.label_id_map/4","type":"function"},{"doc":"Extracts the limit offset field, and adds to query","ref":"Glific.Repo.html#limit_offset/2","title":"Glific.Repo.limit_offset/2","type":"function"},{"doc":"We use this function in most list_OBJECT api's, where we process the opts and the filter. Centralizing this code at the top level, to make things cleaner","ref":"Glific.Repo.html#list_filter/5","title":"Glific.Repo.list_filter/5","type":"function"},{"doc":"This function builds the query, and is used in places where we want to layer permissioning on top of the query","ref":"Glific.Repo.html#list_filter_query/4","title":"Glific.Repo.list_filter_query/4","type":"function"},{"doc":"Callback implementation for Ecto.Repo.load/2 .","ref":"Glific.Repo.html#load/2","title":"Glific.Repo.load/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one!/2 .","ref":"Glific.Repo.html#one!/2","title":"Glific.Repo.one!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.one/2 .","ref":"Glific.Repo.html#one/2","title":"Glific.Repo.one/2","type":"function"},{"doc":"A funtion which handles the order clause for a data type that has a 'name/body/label' in its schema (which is true for a fair number of Glific's data types)","ref":"Glific.Repo.html#opts_with_field/3","title":"Glific.Repo.opts_with_field/3","type":"function"},{"doc":"An empty function for objects that ignore the opts","ref":"Glific.Repo.html#opts_with_nil/2","title":"Glific.Repo.opts_with_nil/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.preload/3 .","ref":"Glific.Repo.html#preload/3","title":"Glific.Repo.preload/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.put_dynamic_repo/1 .","ref":"Glific.Repo.html#put_dynamic_repo/1","title":"Glific.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query!/4 for more information.","ref":"Glific.Repo.html#query!/3","title":"Glific.Repo.query!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query. See Ecto.Adapters.SQL.query/4 for more information.","ref":"Glific.Repo.html#query/3","title":"Glific.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many!/4 for more information.","ref":"Glific.Repo.html#query_many!/3","title":"Glific.Repo.query_many!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query. See Ecto.Adapters.SQL.query_many/4 for more information.","ref":"Glific.Repo.html#query_many/3","title":"Glific.Repo.query_many/3","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload!/2 .","ref":"Glific.Repo.html#reload!/2","title":"Glific.Repo.reload!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.reload/2 .","ref":"Glific.Repo.html#reload/2","title":"Glific.Repo.reload/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.rollback/1 .","ref":"Glific.Repo.html#rollback/1","title":"Glific.Repo.rollback/1","type":"function"},{"doc":"Can we skip checking permissions for this user. This eliminates a DB call in many a case","ref":"Glific.Repo.html#skip_permission?/1","title":"Glific.Repo.skip_permission?/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.start_link/1 .","ref":"Glific.Repo.html#start_link/1","title":"Glific.Repo.start_link/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stop/1 .","ref":"Glific.Repo.html#stop/1","title":"Glific.Repo.stop/1","type":"function"},{"doc":"Callback implementation for Ecto.Repo.stream/2 .","ref":"Glific.Repo.html#stream/2","title":"Glific.Repo.stream/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL. See Ecto.Adapters.SQL.to_sql/3 for more information.","ref":"Glific.Repo.html#to_sql/2","title":"Glific.Repo.to_sql/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.transaction/2 .","ref":"Glific.Repo.html#transaction/2","title":"Glific.Repo.transaction/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update!/2 .","ref":"Glific.Repo.html#update!/2","title":"Glific.Repo.update!/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update/2 .","ref":"Glific.Repo.html#update/2","title":"Glific.Repo.update/2","type":"function"},{"doc":"Callback implementation for Ecto.Repo.update_all/3 .","ref":"Glific.Repo.html#update_all/3","title":"Glific.Repo.update_all/3","type":"function"},{"doc":"The table structure to record consulting hours","ref":"Glific.Saas.ConsultingHour.html","title":"Glific.Saas.ConsultingHour","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Saas.ConsultingHour.html#changeset/2","title":"Glific.Saas.ConsultingHour.changeset/2","type":"function"},{"doc":"Return the count of consulting hours, using the same filter as list_consulting_hours","ref":"Glific.Saas.ConsultingHour.html#count_consulting_hours/1","title":"Glific.Saas.ConsultingHour.count_consulting_hours/1","type":"function"},{"doc":"Create a consulting_hour record","ref":"Glific.Saas.ConsultingHour.html#create_consulting_hour/1","title":"Glific.Saas.ConsultingHour.create_consulting_hour/1","type":"function"},{"doc":"Delete the consulting_hour record","ref":"Glific.Saas.ConsultingHour.html#delete_consulting_hour/1","title":"Glific.Saas.ConsultingHour.delete_consulting_hour/1","type":"function"},{"doc":"Return the count of consulting hours, using the same filter as list_consulting_hours","ref":"Glific.Saas.ConsultingHour.html#fetch_consulting_hours/1","title":"Glific.Saas.ConsultingHour.fetch_consulting_hours/1","type":"function"},{"doc":"Retrieve a consulting_hour record by clauses","ref":"Glific.Saas.ConsultingHour.html#get_consulting_hour/1","title":"Glific.Saas.ConsultingHour.get_consulting_hour/1","type":"function"},{"doc":"Returns the list of consulting hours. Examples iex&gt; list_consulting_hours ( ) [ % ConsultingHour { } , ... ]","ref":"Glific.Saas.ConsultingHour.html#list_consulting_hours/1","title":"Glific.Saas.ConsultingHour.list_consulting_hours/1","type":"function"},{"doc":"Update the consulting_hour record","ref":"Glific.Saas.ConsultingHour.html#update_consulting_hour/2","title":"Glific.Saas.ConsultingHour.update_consulting_hour/2","type":"function"},{"doc":"","ref":"Glific.Saas.ConsultingHour.html#t:t/0","title":"Glific.Saas.ConsultingHour.t/0","type":"type"},{"doc":"For now, we will build this on top of organization table, and have a group of helper functions here to manage global operations across all organizations. At some later point, we might decide to have a separate onboarding table and managment structure","ref":"Glific.Saas.Onboard.html","title":"Glific.Saas.Onboard","type":"module"},{"doc":"Delete an organization from the DB, ensure that the confirmed flag is set since this is a super destructive operation","ref":"Glific.Saas.Onboard.html#delete/2","title":"Glific.Saas.Onboard.delete/2","type":"function"},{"doc":"Reset a few tables and fields for an organization, so they can get rid of all the test data and experiments. As dangerous as delete, so also needs confirmation","ref":"Glific.Saas.Onboard.html#reset/2","title":"Glific.Saas.Onboard.reset/2","type":"function"},{"doc":"Setup all the tables and necessary values to onboard an organization","ref":"Glific.Saas.Onboard.html#setup/1","title":"Glific.Saas.Onboard.setup/1","type":"function"},{"doc":"Update the active and/or approved status of an organization","ref":"Glific.Saas.Onboard.html#status/2","title":"Glific.Saas.Onboard.status/2","type":"function"},{"doc":"Lets keep all the onboarding queries and validation here","ref":"Glific.Saas.Queries.html","title":"Glific.Saas.Queries","type":"module"},{"doc":"Reset selected data of an organization which could potentially be considered test data","ref":"Glific.Saas.Queries.html#reset/1","title":"Glific.Saas.Queries.reset/1","type":"function"},{"doc":"Seed data for organization","ref":"Glific.Saas.Queries.html#seed_data/1","title":"Glific.Saas.Queries.seed_data/1","type":"function"},{"doc":"Main function to setup the organization entity in Glific","ref":"Glific.Saas.Queries.html#setup/2","title":"Glific.Saas.Queries.setup/2","type":"function"},{"doc":"Seed data for organization","ref":"Glific.Saas.Queries.html#sync_templates/1","title":"Glific.Saas.Queries.sync_templates/1","type":"function"},{"doc":"Validate all the input elements","ref":"Glific.Saas.Queries.html#validate/2","title":"Glific.Saas.Queries.validate/2","type":"function"},{"doc":"Glific interface to Postgres's full text search","ref":"Glific.Search.Full.html","title":"Glific.Search.Full","type":"module"},{"doc":"Simple wrapper function which calls a helper function after normalizing and sanitizing the input. The two functions combined serve to augment the query with the link to the fulltext index","ref":"Glific.Search.Full.html#run/3","title":"Glific.Search.Full.run/3","type":"function"},{"doc":"The Searches context.","ref":"Glific.Searches.html","title":"Glific.Searches","type":"module"},{"doc":"Add permissioning specific to searches, in this case we want to restrict the visibility of contact ids where the contact is the main query table","ref":"Glific.Searches.html#add_permission/2","title":"Glific.Searches.add_permission/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking search changes. Examples iex&gt; change_saved_search ( search ) % Ecto.Changeset { data : % Search { } }","ref":"Glific.Searches.html#change_saved_search/2","title":"Glific.Searches.change_saved_search/2","type":"function"},{"doc":"Given a jsonb string, typically either from the database, or maybe via graphql convert the string keys to atoms","ref":"Glific.Searches.html#convert_to_atom/1","title":"Glific.Searches.convert_to_atom/1","type":"function"},{"doc":"Returns the count of searches, using the same filter as list_saved_searches","ref":"Glific.Searches.html#count_saved_searches/1","title":"Glific.Searches.count_saved_searches/1","type":"function"},{"doc":"Creates a search. Examples iex&gt; create_saved_search ( %{ field : value } ) { :ok , % SavedSearch { } } iex&gt; create_saved_search ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Searches.html#create_saved_search/1","title":"Glific.Searches.create_saved_search/1","type":"function"},{"doc":"Deletes a search. Examples iex&gt; delete_saved_search ( search ) { :ok , % SavedSearch { } } iex&gt; delete_saved_search ( search ) { :error , % Ecto.Changeset { } }","ref":"Glific.Searches.html#delete_saved_search/1","title":"Glific.Searches.delete_saved_search/1","type":"function"},{"doc":"Gets a single search. Raises Ecto.NoResultsError if the SavedSearch does not exist. Examples iex&gt; get_saved_search! ( 123 ) % SavedSearch { } iex&gt; get_saved_search! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Searches.html#get_saved_search!/1","title":"Glific.Searches.get_saved_search!/1","type":"function"},{"doc":"Returns the list of searches. Examples iex&gt; list_saved_searches ( ) [ % SavedSearch { } , ... ]","ref":"Glific.Searches.html#list_saved_searches/1","title":"Glific.Searches.list_saved_searches/1","type":"function"},{"doc":"Execute a saved search, if term is sent in, it is added to the saved search. Either return conversations or count","ref":"Glific.Searches.html#saved_search_count/1","title":"Glific.Searches.saved_search_count/1","type":"function"},{"doc":"Full text search interface via Postgres","ref":"Glific.Searches.html#search/2","title":"Glific.Searches.search/2","type":"function"},{"doc":"Search across multiple tables, and return a multiple context result back to the frontend. First step in emulating a whatsapp search","ref":"Glific.Searches.html#search_multi/2","title":"Glific.Searches.search_multi/2","type":"function"},{"doc":"Updates a search. Examples iex&gt; update_saved_search ( search , %{ field : new_value } ) { :ok , % SavedSearch { } } iex&gt; update_saved_search ( search , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Searches.html#update_saved_search/2","title":"Glific.Searches.update_saved_search/2","type":"function"},{"doc":"Module for checking collection count","ref":"Glific.Searches.CollectionCount.html","title":"Glific.Searches.CollectionCount","type":"module"},{"doc":"Do it in one query for all organizations for each of Unread, Not Responded, Not Replied and OptOut","ref":"Glific.Searches.CollectionCount.html#collection_stats/2","title":"Glific.Searches.CollectionCount.collection_stats/2","type":"function"},{"doc":"The minimal wrapper for the base Saved Search structure","ref":"Glific.Searches.SavedSearch.html","title":"Glific.Searches.SavedSearch","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Searches.SavedSearch.html#changeset/2","title":"Glific.Searches.SavedSearch.changeset/2","type":"function"},{"doc":"","ref":"Glific.Searches.SavedSearch.html#t:t/0","title":"Glific.Searches.SavedSearch.t/0","type":"type"},{"doc":"The Glific Abstraction to represent the conversation with a user. This unifies a vast majority of the glific data types including: message, contact, and tag","ref":"Glific.Searches.Search.html","title":"Glific.Searches.Search","type":"module"},{"doc":"Create a new conversation. A contact is required for the conversation. Messages can be added later on","ref":"Glific.Searches.Search.html#new/4","title":"Glific.Searches.Search.new/4","type":"function"},{"doc":"","ref":"Glific.Searches.Search.html#t:t/0","title":"Glific.Searches.Search.t/0","type":"type"},{"doc":"First experiments with PhilColumns. Hopefully it will work","ref":"Glific.Seeds.Seed.html","title":"Glific.Seeds.Seed","type":"module"},{"doc":"Our first attempt at a deployment seeder script. Wish us luck","ref":"Glific.Seeds.Seeder.html","title":"Glific.Seeds.Seeder","type":"module"},{"doc":"Script for populating the database. We can call this from tests and/or /priv/repo","ref":"Glific.Seeds.SeedsDev.html","title":"Glific.Seeds.SeedsDev","type":"module"},{"doc":"Function to populate some basic data that we need for the system to operate. We will split this function up into multiple different ones for test, dev and production","ref":"Glific.Seeds.SeedsDev.html#seed/0","title":"Glific.Seeds.SeedsDev.seed/0","type":"function"},{"doc":"Smaller functions to seed various tables. This allows the test functions to call specific seeder functions. In the next phase we will also add unseeder functions as we learn more of the test capabilities","ref":"Glific.Seeds.SeedsDev.html#seed_tag/1","title":"Glific.Seeds.SeedsDev.seed_tag/1","type":"function"},{"doc":"One shot migration of data to add simulators and saas admin. We use the functions in this file to add simulators for new organizations as they are created","ref":"Glific.Seeds.SeedsMigration.html","title":"Glific.Seeds.SeedsMigration","type":"module"},{"doc":"Add a saas user for the organization. We need to check if it already exists since this code is used during data migration and can be repeated for the same organization","ref":"Glific.Seeds.SeedsMigration.html#add_saas_user/2","title":"Glific.Seeds.SeedsMigration.add_saas_user/2","type":"function"},{"doc":"Reset message number for a list of organizations or for a org_id","ref":"Glific.Seeds.SeedsMigration.html#fix_message_number/1","title":"Glific.Seeds.SeedsMigration.fix_message_number/1","type":"function"},{"doc":"We need this functionality to cleanups all the Approved templates which are not active on Gupshup","ref":"Glific.Seeds.SeedsMigration.html#get_deleted_hsms/1","title":"Glific.Seeds.SeedsMigration.get_deleted_hsms/1","type":"function"},{"doc":"Public interface to do a seed migration across all organizations. One function to rule them all. This function is invoked manually by a glific developer to add data from the DB. This seems the cleanest way to do such things. We use phases to seperate different migrations","ref":"Glific.Seeds.SeedsMigration.html#migrate_data/2","title":"Glific.Seeds.SeedsMigration.migrate_data/2","type":"function"},{"doc":"Create default organization roles for an organization","ref":"Glific.Seeds.SeedsMigration.html#set_default_organization_roles/1","title":"Glific.Seeds.SeedsMigration.set_default_organization_roles/1","type":"function"},{"doc":"sync all the hsm from BSP to Glific DB","ref":"Glific.Seeds.SeedsMigration.html#sync_hsm_templates/1","title":"Glific.Seeds.SeedsMigration.sync_hsm_templates/1","type":"function"},{"doc":"Sync bigquery schema with local db changes.","ref":"Glific.Seeds.SeedsMigration.html#sync_schema_with_bigquery/1","title":"Glific.Seeds.SeedsMigration.sync_schema_with_bigquery/1","type":"function"},{"doc":"Script for importing optin contacts for an organization","ref":"Glific.Seeds.SeedsOptins.html","title":"Glific.Seeds.SeedsOptins","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#delete!/3","title":"Glific.Seeds.SeedsOptins.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#delete/3","title":"Glific.Seeds.SeedsOptins.delete/3","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#get!/3","title":"Glific.Seeds.SeedsOptins.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#get/3","title":"Glific.Seeds.SeedsOptins.get/3","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#head!/3","title":"Glific.Seeds.SeedsOptins.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#head/3","title":"Glific.Seeds.SeedsOptins.head/3","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#options!/3","title":"Glific.Seeds.SeedsOptins.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#options/3","title":"Glific.Seeds.SeedsOptins.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Seeds.SeedsOptins.html#patch!/4","title":"Glific.Seeds.SeedsOptins.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Seeds.SeedsOptins.html#patch/4","title":"Glific.Seeds.SeedsOptins.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Seeds.SeedsOptins.html#post!/4","title":"Glific.Seeds.SeedsOptins.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Seeds.SeedsOptins.html#post/4","title":"Glific.Seeds.SeedsOptins.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Seeds.SeedsOptins.html#put!/4","title":"Glific.Seeds.SeedsOptins.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Seeds.SeedsOptins.html#put/4","title":"Glific.Seeds.SeedsOptins.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Seeds.SeedsOptins.html#request!/2","title":"Glific.Seeds.SeedsOptins.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#request/2","title":"Glific.Seeds.SeedsOptins.request/2","type":"function"},{"doc":"Import optin contacts from csv","ref":"Glific.Seeds.SeedsOptins.html#seed/2","title":"Glific.Seeds.SeedsOptins.seed/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#trace!/3","title":"Glific.Seeds.SeedsOptins.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Seeds.SeedsOptins.html#trace/3","title":"Glific.Seeds.SeedsOptins.trace/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Seeds.SeedsOptins.html#t:option/0","title":"Glific.Seeds.SeedsOptins.option/0","type":"type"},{"doc":"Script for populating the database at scale","ref":"Glific.Seeds.SeedsScale.html","title":"Glific.Seeds.SeedsScale","type":"module"},{"doc":"One shot migration of data to seed the stats table","ref":"Glific.Seeds.SeedsStats.html","title":"Glific.Seeds.SeedsStats","type":"module"},{"doc":"Run the migration to populate the stats table for all active organizations","ref":"Glific.Seeds.SeedsStats.html#seed_stats/1","title":"Glific.Seeds.SeedsStats.seed_stats/1","type":"function"},{"doc":"The Settings context. This includes language for now.","ref":"Glific.Settings.html","title":"Glific.Settings","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking language changes. Examples iex&gt; change_language ( language ) % Ecto.Changeset { data : % Language { } }","ref":"Glific.Settings.html#change_language/2","title":"Glific.Settings.change_language/2","type":"function"},{"doc":"Return the count of languages, using the same filter as list_languages","ref":"Glific.Settings.html#count_languages/1","title":"Glific.Settings.count_languages/1","type":"function"},{"doc":"Creates a language. Examples iex&gt; create_language ( %{ field : value } ) { :ok , % Language { } } iex&gt; create_language ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Settings.html#create_language/1","title":"Glific.Settings.create_language/1","type":"function"},{"doc":"Deletes a language. Examples iex&gt; delete_language ( language ) { :ok , % Language { } } iex&gt; delete_language ( language ) { :error , % Ecto.Changeset { } }","ref":"Glific.Settings.html#delete_language/1","title":"Glific.Settings.delete_language/1","type":"function"},{"doc":"Gets a single language. Raises Ecto.NoResultsError if the Language does not exist. Examples iex&gt; get_language! ( 123 ) % Language { } iex&gt; get_language! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Settings.html#get_language!/1","title":"Glific.Settings.get_language!/1","type":"function"},{"doc":"Get language from label or shortcode","ref":"Glific.Settings.html#get_language_by_label_or_locale/1","title":"Glific.Settings.get_language_by_label_or_locale/1","type":"function"},{"doc":"Get map of ids to locale for translation lookup","ref":"Glific.Settings.html#get_language_id_local_map/0","title":"Glific.Settings.get_language_id_local_map/0","type":"function"},{"doc":"Upserts a language based on the unique indexes in the table. If there is a match it returns the existing contact, else it creates a new one","ref":"Glific.Settings.html#language_upsert/1","title":"Glific.Settings.language_upsert/1","type":"function"},{"doc":"Returns the list of languages. Examples iex&gt; list_languages ( ) [ % Language { } , ... ]","ref":"Glific.Settings.html#list_languages/1","title":"Glific.Settings.list_languages/1","type":"function"},{"doc":"Get map of localte to ids for easier lookup for json based flow editor","ref":"Glific.Settings.html#locale_id_map/0","title":"Glific.Settings.locale_id_map/0","type":"function"},{"doc":"Updates a language. Examples iex&gt; update_language ( language , %{ field : new_value } ) { :ok , % Language { } } iex&gt; update_language ( language , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Settings.html#update_language/2","title":"Glific.Settings.update_language/2","type":"function"},{"doc":"Ecto schema and minimal interface for the languages table","ref":"Glific.Settings.Language.html","title":"Glific.Settings.Language","type":"module"},{"doc":"Standard changeset pattern we use for all datat types","ref":"Glific.Settings.Language.html#changeset/2","title":"Glific.Settings.Language.changeset/2","type":"function"},{"doc":"Delete changeset pattern we use for all data types","ref":"Glific.Settings.Language.html#delete_changeset/1","title":"Glific.Settings.Language.delete_changeset/1","type":"function"},{"doc":"","ref":"Glific.Settings.Language.html#t:t/0","title":"Glific.Settings.Language.t/0","type":"type"},{"doc":"Http API client to intract with Gupshup","ref":"Glific.Sheets.ApiClient.html","title":"Glific.Sheets.ApiClient","type":"module"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#delete!/3","title":"Glific.Sheets.ApiClient.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#delete/3","title":"Glific.Sheets.ApiClient.delete/3","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#get!/3","title":"Glific.Sheets.ApiClient.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#get/3","title":"Glific.Sheets.ApiClient.get/3","type":"function"},{"doc":"Get the CSV content from the url.","ref":"Glific.Sheets.ApiClient.html#get_csv_content/1","title":"Glific.Sheets.ApiClient.get_csv_content/1","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#head!/3","title":"Glific.Sheets.ApiClient.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#head/3","title":"Glific.Sheets.ApiClient.head/3","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#options!/3","title":"Glific.Sheets.ApiClient.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#options/3","title":"Glific.Sheets.ApiClient.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Sheets.ApiClient.html#patch!/4","title":"Glific.Sheets.ApiClient.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Sheets.ApiClient.html#patch/4","title":"Glific.Sheets.ApiClient.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Sheets.ApiClient.html#post!/4","title":"Glific.Sheets.ApiClient.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Sheets.ApiClient.html#post/4","title":"Glific.Sheets.ApiClient.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Sheets.ApiClient.html#put!/4","title":"Glific.Sheets.ApiClient.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Sheets.ApiClient.html#put/4","title":"Glific.Sheets.ApiClient.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Sheets.ApiClient.html#request!/2","title":"Glific.Sheets.ApiClient.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#request/2","title":"Glific.Sheets.ApiClient.request/2","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#trace!/3","title":"Glific.Sheets.ApiClient.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Sheets.ApiClient.html#trace/3","title":"Glific.Sheets.ApiClient.trace/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Sheets.ApiClient.html#t:option/0","title":"Glific.Sheets.ApiClient.option/0","type":"type"},{"doc":"Manage simulator and flows, managing state and allocation to ensure we can have multiple simulators and flow run at the same time","ref":"Glific.State.html","title":"Glific.State","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Glific.State.html#child_spec/1","title":"Glific.State.child_spec/1","type":"function"},{"doc":"Free the entity after holding an entity period is over","ref":"Glific.State.html#free_entity/3","title":"Glific.State.free_entity/3","type":"function"},{"doc":"initializes the state for this organization if not already present","ref":"Glific.State.html#get_state/2","title":"Glific.State.get_state/2","type":"function"},{"doc":"Release the entity associated with this user id. It is possible that there is no entity associated with this user","ref":"Glific.State.html#release_entity/3","title":"Glific.State.release_entity/3","type":"function"},{"doc":"Manage flow state and allocation to ensure we only have one user modify a flow at a time","ref":"Glific.State.Flow.html","title":"Glific.State.Flow","type":"module"},{"doc":"Check if there is an available flow for this user If available, return the available flow If none available, return error message along with name of user currently using flow","ref":"Glific.State.Flow.html#get_flow/2","title":"Glific.State.Flow.get_flow/2","type":"function"},{"doc":"Manage simulator state and allocation to ensure we can have multiple simulators run at the same time","ref":"Glific.State.Simulator.html","title":"Glific.State.Simulator","type":"module"},{"doc":"Check if there is an available simulator for this user If available, return the free Simulator Contact (there are multiple simulator contacts per organization) If none available, return nil","ref":"Glific.State.Simulator.html#get_simulator/2","title":"Glific.State.Simulator.get_simulator/2","type":"function"},{"doc":"The stats manager and API to interface with the stat sub-system","ref":"Glific.Stats.html","title":"Glific.Stats","type":"module"},{"doc":"Return the count of stats, using the same filter as list_stats","ref":"Glific.Stats.html#count_stats/1","title":"Glific.Stats.count_stats/1","type":"function"},{"doc":"Create a Stat","ref":"Glific.Stats.html#create_stat/1","title":"Glific.Stats.create_stat/1","type":"function"},{"doc":"Top level function to generate stats for all active organizations by default. Can control behavior by setting function parameters","ref":"Glific.Stats.html#generate_stats/3","title":"Glific.Stats.generate_stats/3","type":"function"},{"doc":"Returns the list of stats. Since this is very basic and only listing funcatinality we added the status filter like this. In future we will put the status as virtual filed in the stats itself.","ref":"Glific.Stats.html#list_stats/1","title":"Glific.Stats.list_stats/1","type":"function"},{"doc":"Update a Stat","ref":"Glific.Stats.html#update_stat/2","title":"Glific.Stats.update_stat/2","type":"function"},{"doc":"Get the details of the usage for this organization, from start_date to end_date both inclusive","ref":"Glific.Stats.html#usage/3","title":"Glific.Stats.usage/3","type":"function"},{"doc":"The API for a generic tagging system on messages that coordinate with different types of taggers. The proposed taggers are: Numeric Keyword Emojis Positive Negative Automated Compliments Good Bye Greeting Thank You Welcome Spam","ref":"Glific.Taggers.html","title":"Glific.Taggers","type":"module"},{"doc":"Cache all the maps needed by the automation engines. Also include ability to reset the cache when tags are updated","ref":"Glific.Taggers.html#get_tag_maps/1","title":"Glific.Taggers.get_tag_maps/1","type":"function"},{"doc":"Reset the cache, typically called when tags are either created or updated","ref":"Glific.Taggers.html#reset_tag_maps/1","title":"Glific.Taggers.reset_tag_maps/1","type":"function"},{"doc":"This module is user driven via keywords associated with tags. It reads in all the keywords associated with each tag in the DB and matches it to the input text.","ref":"Glific.Taggers.Keyword.html","title":"Glific.Taggers.Keyword","type":"module"},{"doc":"The numeric tagger which takes the message body and checks if the body is mainly a number in different ways including: Ordinal Numbers (0..19) Cardinal Number (Zero - Ten) Emojis (0..9) Ordinal Hindi Numbers Cardinal Hindi Numbers","ref":"Glific.Taggers.Numeric.html","title":"Glific.Taggers.Numeric","type":"module"},{"doc":"This module will be responsible for all the contact and message status tagging. Like new contacttagg and unread","ref":"Glific.Taggers.Status.html","title":"Glific.Taggers.Status","type":"module"},{"doc":"The Tags Context, which encapsulates and manages tags and the related join tables.","ref":"Glific.Tags.html","title":"Glific.Tags","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking contact changes. Examples iex&gt; change_contact_tag ( contact_tag ) % Ecto.Changeset { data : % ContactTag { } }","ref":"Glific.Tags.html#change_contact_tag/2","title":"Glific.Tags.change_contact_tag/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking message changes. Examples iex&gt; change_message_tag ( message_tag ) % Ecto.Changeset { data : % MessageTag { } }","ref":"Glific.Tags.html#change_message_tag/2","title":"Glific.Tags.change_message_tag/2","type":"function"},{"doc":"Returns an %Ecto.Changeset{} for tracking tag changes. Examples iex&gt; change_tag ( tag ) % Ecto.Changeset { data : % Tag { } }","ref":"Glific.Tags.html#change_tag/2","title":"Glific.Tags.change_tag/2","type":"function"},{"doc":"Return the count of tags, using the same filter as list_tags","ref":"Glific.Tags.html#count_tags/1","title":"Glific.Tags.count_tags/1","type":"function"},{"doc":"Creates a contact. Examples iex&gt; create_contact_tag ( %{ field : value } ) { :ok , % Contact { } } iex&gt; create_contact_tag ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#create_contact_tag/1","title":"Glific.Tags.create_contact_tag/1","type":"function"},{"doc":"Creates a message tag Examples iex&gt; create_message_tag(%{field: value}) {:ok, %Message{}} iex&gt; create_message_tag(%{field: bad_value}) {:error, %Ecto.Changeset{}}","ref":"Glific.Tags.html#create_message_tag/1","title":"Glific.Tags.create_message_tag/1","type":"function"},{"doc":"Creates a tag. Examples iex&gt; create_tag ( %{ field : value } ) { :ok , % Tag { } } iex&gt; create_tag ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#create_tag/1","title":"Glific.Tags.create_tag/1","type":"function"},{"doc":"Creates a template tag. Examples iex&gt; create_template_tag ( %{ field : value } ) { :ok , % Contact { } } iex&gt; create_template_tag ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#create_template_tag/1","title":"Glific.Tags.create_template_tag/1","type":"function"},{"doc":"Deletes a list of contact tags, each tag attached to the same contact","ref":"Glific.Tags.html#delete_contact_tag_by_ids/2","title":"Glific.Tags.delete_contact_tag_by_ids/2","type":"function"},{"doc":"In Join tables we rarely use the table id. We always know the object ids and hence more convenient to delete an entry via its object ids. We will generalize this function and move it to Repo.ex when we get a better handle on how to do so :)","ref":"Glific.Tags.html#delete_message_tag_by_ids/3","title":"Glific.Tags.delete_message_tag_by_ids/3","type":"function"},{"doc":"Deletes a tag. Examples iex&gt; delete_tag ( tag ) { :ok , % Tag { } } iex&gt; delete_tag ( tag ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#delete_tag/1","title":"Glific.Tags.delete_tag/1","type":"function"},{"doc":"Deletes a list of template tags, each tag attached to the same template","ref":"Glific.Tags.html#delete_template_tag_by_ids/2","title":"Glific.Tags.delete_template_tag_by_ids/2","type":"function"},{"doc":"Given a shortcode of tag, retrieve all the children for the tag","ref":"Glific.Tags.html#get_all_children/2","title":"Glific.Tags.get_all_children/2","type":"function"},{"doc":"Gets a single contact. Raises Ecto.NoResultsError if the Contact does not exist. Examples iex&gt; get_contact_tag! ( 123 ) % Contact { } iex&gt; get_contact_tag! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_contact_tag!/1","title":"Glific.Tags.get_contact_tag!/1","type":"function"},{"doc":"Gets a single message. Raises Ecto.NoResultsError if the Message does not exist. Examples iex&gt; get_message_tag! ( 123 ) % Message { } iex&gt; get_message_tag! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_message_tag!/1","title":"Glific.Tags.get_message_tag!/1","type":"function"},{"doc":"Gets a single tag. Raises Ecto.NoResultsError if the Tag does not exist. Examples iex&gt; get_tag! ( 123 ) % Tag { } iex&gt; get_tag! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Tags.html#get_tag!/1","title":"Glific.Tags.get_tag!/1","type":"function"},{"doc":"Given a tag id or a list of tag ids, retrieve all the ancestors for the list_tags","ref":"Glific.Tags.html#include_all_ancestors/1","title":"Glific.Tags.include_all_ancestors/1","type":"function"},{"doc":"Converts all tag kewords into the map where keyword is the key and tag id is the value","ref":"Glific.Tags.html#keyword_map/1","title":"Glific.Tags.keyword_map/1","type":"function"},{"doc":"Returns the list of tags. Examples iex&gt; list_tags ( ) [ % Tag { } , ... ]","ref":"Glific.Tags.html#list_tags/1","title":"Glific.Tags.list_tags/1","type":"function"},{"doc":"Remove a specific tag from contact messages","ref":"Glific.Tags.html#remove_tag_from_all_message/4","title":"Glific.Tags.remove_tag_from_all_message/4","type":"function"},{"doc":"Filter all the status tag and returns as a map","ref":"Glific.Tags.html#status_map/1","title":"Glific.Tags.status_map/1","type":"function"},{"doc":"Updates a contact tag. Examples iex&gt; update_contact_tag ( contact_tag , %{ field : new_value } ) { :ok , % ContactTag { } } iex&gt; update_contact_tag ( contact_tag , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#update_contact_tag/2","title":"Glific.Tags.update_contact_tag/2","type":"function"},{"doc":"Updates a message tag. Examples iex&gt; update_message_tag ( message_tag , %{ field : new_value } ) { :ok , % MessageTag { } } iex&gt; update_message_tag ( message_tag , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#update_message_tag/2","title":"Glific.Tags.update_message_tag/2","type":"function"},{"doc":"Updates a tag. Examples iex&gt; update_tag ( tag , %{ field : new_value } ) { :ok , % Tag { } } iex&gt; update_tag ( tag , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Tags.html#update_tag/2","title":"Glific.Tags.update_tag/2","type":"function"},{"doc":"A pipe for managing the contact tags","ref":"Glific.Tags.ContactTag.html","title":"Glific.Tags.ContactTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.ContactTag.html#changeset/2","title":"Glific.Tags.ContactTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.ContactTag.html#t:t/0","title":"Glific.Tags.ContactTag.t/0","type":"type"},{"doc":"Simple container to hold all the contact tags we associate with one contact","ref":"Glific.Tags.ContactTags.html","title":"Glific.Tags.ContactTags","type":"module"},{"doc":"Creates and/or deletes a list of contact tags, each tag attached to the same contact","ref":"Glific.Tags.ContactTags.html#update_contact_tags/1","title":"Glific.Tags.ContactTags.update_contact_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.ContactTags.html#t:t/0","title":"Glific.Tags.ContactTags.t/0","type":"type"},{"doc":"A file for managing the join table message tags","ref":"Glific.Tags.MessageTag.html","title":"Glific.Tags.MessageTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.MessageTag.html#changeset/2","title":"Glific.Tags.MessageTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.MessageTag.html#t:t/0","title":"Glific.Tags.MessageTag.t/0","type":"type"},{"doc":"Simple container to hold all the message tags we associate with one message","ref":"Glific.Tags.MessageTags.html","title":"Glific.Tags.MessageTags","type":"module"},{"doc":"Creates and/or deletes a list of message tags, each tag attached to the same message","ref":"Glific.Tags.MessageTags.html#update_message_tags/1","title":"Glific.Tags.MessageTags.update_message_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.MessageTags.html#t:t/0","title":"Glific.Tags.MessageTags.t/0","type":"type"},{"doc":"The minimal wrapper for the base Tag structure","ref":"Glific.Tags.Tag.html","title":"Glific.Tags.Tag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.Tag.html#changeset/2","title":"Glific.Tags.Tag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.Tag.html#t:t/0","title":"Glific.Tags.Tag.t/0","type":"type"},{"doc":"A pipe for managing the template tags","ref":"Glific.Tags.TemplateTag.html","title":"Glific.Tags.TemplateTag","type":"module"},{"doc":"Standard changeset pattern we use for all data types","ref":"Glific.Tags.TemplateTag.html#changeset/2","title":"Glific.Tags.TemplateTag.changeset/2","type":"function"},{"doc":"","ref":"Glific.Tags.TemplateTag.html#t:t/0","title":"Glific.Tags.TemplateTag.t/0","type":"type"},{"doc":"Simple container to hold all the template tags we associate with one template","ref":"Glific.Tags.TemplateTags.html","title":"Glific.Tags.TemplateTags","type":"module"},{"doc":"Creates and/or deletes a list of template tags, each tag attached to the same template","ref":"Glific.Tags.TemplateTags.html#update_template_tags/1","title":"Glific.Tags.TemplateTags.update_template_tags/1","type":"function"},{"doc":"","ref":"Glific.Tags.TemplateTags.html#t:t/0","title":"Glific.Tags.TemplateTags.t/0","type":"type"},{"doc":"The Templates context.","ref":"Glific.Templates.html","title":"Glific.Templates","type":"module"},{"doc":"Returns an %Ecto.Changeset{} for tracking session_template changes. Examples iex&gt; change_session_template ( session_template ) % Ecto.Changeset { data : % SessionTemplate { } }","ref":"Glific.Templates.html#change_session_template/2","title":"Glific.Templates.change_session_template/2","type":"function"},{"doc":"Return the count of session_templates, using the same filter as list_session_templates","ref":"Glific.Templates.html#count_session_templates/1","title":"Glific.Templates.count_session_templates/1","type":"function"},{"doc":"Creates a session_template. Examples iex&gt; create_session_template ( %{ field : value } ) { :ok , % SessionTemplate { } } iex&gt; create_session_template ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Templates.html#create_session_template/1","title":"Glific.Templates.create_session_template/1","type":"function"},{"doc":"Create a session template form message Body and type will be the message attributes","ref":"Glific.Templates.html#create_template_from_message/1","title":"Glific.Templates.create_template_from_message/1","type":"function"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#delete!/3","title":"Glific.Templates.delete!/3","type":"function"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#delete/3","title":"Glific.Templates.delete/3","type":"function"},{"doc":"Deletes a session_template. Examples iex&gt; delete_session_template ( session_template ) { :ok , % SessionTemplate { } } iex&gt; delete_session_template ( session_template ) { :error , % Ecto.Changeset { } }","ref":"Glific.Templates.html#delete_session_template/1","title":"Glific.Templates.delete_session_template/1","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#get!/3","title":"Glific.Templates.get!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#get/3","title":"Glific.Templates.get/3","type":"function"},{"doc":"Gets a single session_template. Raises Ecto.NoResultsError if the SessionTemplate does not exist. Examples iex&gt; get_session_template! ( 123 ) % SessionTemplate { } iex&gt; get_session_template! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Templates.html#get_session_template!/1","title":"Glific.Templates.get_session_template!/1","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#head!/3","title":"Glific.Templates.head!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#head/3","title":"Glific.Templates.head/3","type":"function"},{"doc":"Imports pre approved templates from bsp","ref":"Glific.Templates.html#import_templates/2","title":"Glific.Templates.import_templates/2","type":"function"},{"doc":"Returns the list of session_templates. Examples iex&gt; list_session_templates ( ) [ % SessionTemplate { } , ... ]","ref":"Glific.Templates.html#list_session_templates/1","title":"Glific.Templates.list_session_templates/1","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#options!/3","title":"Glific.Templates.options!/3","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#options/3","title":"Glific.Templates.options/3","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Templates.html#patch!/4","title":"Glific.Templates.patch!/4","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Templates.html#patch/4","title":"Glific.Templates.patch/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Templates.html#post!/4","title":"Glific.Templates.post!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Templates.html#post/4","title":"Glific.Templates.post/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Templates.html#put!/4","title":"Glific.Templates.put!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"Glific.Templates.html#put/4","title":"Glific.Templates.put/4","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"Glific.Templates.html#request!/2","title":"Glific.Templates.request!/2","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#request/2","title":"Glific.Templates.request/2","type":"function"},{"doc":"get and update list of hsm of an organization","ref":"Glific.Templates.html#sync_hsms_from_bsp/1","title":"Glific.Templates.sync_hsms_from_bsp/1","type":"function"},{"doc":"Returns the count of variables in template","ref":"Glific.Templates.html#template_parameters_count/1","title":"Glific.Templates.template_parameters_count/1","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#trace!/3","title":"Glific.Templates.trace!/3","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"Glific.Templates.html#trace/3","title":"Glific.Templates.trace/3","type":"function"},{"doc":"Updates a session_template. Examples iex&gt; update_session_template ( session_template , %{ field : new_value } ) { :ok , % SessionTemplate { } } iex&gt; update_session_template ( session_template , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Templates.html#update_session_template/2","title":"Glific.Templates.update_session_template/2","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"Glific.Templates.html#t:option/0","title":"Glific.Templates.option/0","type":"type"},{"doc":"The InteractiveTemplate Context, which encapsulates and manages interactive templates","ref":"Glific.Templates.InteractiveTemplates.html","title":"Glific.Templates.InteractiveTemplates","type":"module"},{"doc":"Cleaning interactive template title as per WhatsApp policy","ref":"Glific.Templates.InteractiveTemplates.html#clean_template_title/1","title":"Glific.Templates.InteractiveTemplates.clean_template_title/1","type":"function"},{"doc":"Make a copy of a interactive_template","ref":"Glific.Templates.InteractiveTemplates.html#copy_interactive_template/2","title":"Glific.Templates.InteractiveTemplates.copy_interactive_template/2","type":"function"},{"doc":"Return the count of interactive templates, using the same filter as list_interactives","ref":"Glific.Templates.InteractiveTemplates.html#count_interactive_templates/1","title":"Glific.Templates.InteractiveTemplates.count_interactive_templates/1","type":"function"},{"doc":"Creates an interactive template Examples iex&gt; create_interactive_template ( %{ field : value } ) { :ok , % InteractiveTemplate { } } iex&gt; create_interactive_template ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Templates.InteractiveTemplates.html#create_interactive_template/1","title":"Glific.Templates.InteractiveTemplates.create_interactive_template/1","type":"function"},{"doc":"Deletes an interactive template Examples iex&gt; delete_interactive_template ( interactive ) { :ok , % InteractiveTemplate { } } iex&gt; delete_interactive_template ( interactive ) { :error , % Ecto.Changeset { } }","ref":"Glific.Templates.InteractiveTemplates.html#delete_interactive_template/1","title":"Glific.Templates.InteractiveTemplates.delete_interactive_template/1","type":"function"},{"doc":"Fetches a single interactive template Returns Resource not found if the Interactive Template does not exist. Examples iex&gt; fetch_interactive_template ( 123 , 1 ) { :ok , % InteractiveTemplate { } } iex&gt; fetch_interactive_template ( 456 , 1 ) { :error , [ &quot;Elixir.Glific.Templates.InteractiveTemplate&quot; , &quot;Resource not found&quot; ] }","ref":"Glific.Templates.InteractiveTemplates.html#fetch_interactive_template/1","title":"Glific.Templates.InteractiveTemplates.fetch_interactive_template/1","type":"function"},{"doc":"A single function to fetch all the interactive templates related info","ref":"Glific.Templates.InteractiveTemplates.html#formatted_data/2","title":"Glific.Templates.InteractiveTemplates.formatted_data/2","type":"function"},{"doc":"Returns interactive content based on send_interactive_title field","ref":"Glific.Templates.InteractiveTemplates.html#get_clean_interactive_content/3","title":"Glific.Templates.InteractiveTemplates.get_clean_interactive_content/3","type":"function"},{"doc":"get interactive body from the interactive content","ref":"Glific.Templates.InteractiveTemplates.html#get_interactive_body/1","title":"Glific.Templates.InteractiveTemplates.get_interactive_body/1","type":"function"},{"doc":"Gets a single interactive template Raises Ecto.NoResultsError if the Interactive Template does not exist. Examples iex&gt; get_interactive_template! ( 123 ) % InteractiveTemplate { } iex&gt; get_interactive_template! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Templates.InteractiveTemplates.html#get_interactive_template!/1","title":"Glific.Templates.InteractiveTemplates.get_interactive_template!/1","type":"function"},{"doc":"Create a message media from interactive content and return id","ref":"Glific.Templates.InteractiveTemplates.html#get_media/2","title":"Glific.Templates.InteractiveTemplates.get_media/2","type":"function"},{"doc":"Fetch for translation of interactive message","ref":"Glific.Templates.InteractiveTemplates.html#get_translations/2","title":"Glific.Templates.InteractiveTemplates.get_translations/2","type":"function"},{"doc":"Returns the list of interactive templates Examples iex&gt; list_interactives ( ) [ % InteractiveTemplate { } , ... ]","ref":"Glific.Templates.InteractiveTemplates.html#list_interactives/1","title":"Glific.Templates.InteractiveTemplates.list_interactives/1","type":"function"},{"doc":"Process dynamic interactive messages.","ref":"Glific.Templates.InteractiveTemplates.html#process_dynamic_interactive_content/3","title":"Glific.Templates.InteractiveTemplates.process_dynamic_interactive_content/3","type":"function"},{"doc":"Get translated interative template content","ref":"Glific.Templates.InteractiveTemplates.html#translated_content/2","title":"Glific.Templates.InteractiveTemplates.translated_content/2","type":"function"},{"doc":"Updates an interactive template Examples iex&gt; update_interactive_template ( interactive , %{ field : new_value } ) { :ok , % InteractiveTemplate { } } iex&gt; update_interactive_template ( interactive , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Templates.InteractiveTemplates.html#update_interactive_template/2","title":"Glific.Templates.InteractiveTemplates.update_interactive_template/2","type":"function"},{"doc":"The trigger manager for all the trigger system that starts flows within Glific","ref":"Glific.Triggers.html","title":"Glific.Triggers","type":"module"},{"doc":"Return the count of triggers, using the same filter as list_triggers","ref":"Glific.Triggers.html#count_triggers/1","title":"Glific.Triggers.count_triggers/1","type":"function"},{"doc":"Creates a trigger. Examples iex&gt; create_trigger ( %{ field : value } ) { :ok , % Trigger { } } iex&gt; create_trigger ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Triggers.html#create_trigger/1","title":"Glific.Triggers.create_trigger/1","type":"function"},{"doc":"Periodic call to execute the triggers outstanding for the day","ref":"Glific.Triggers.html#execute_triggers/2","title":"Glific.Triggers.execute_triggers/2","type":"function"},{"doc":"Gets a single trigger. Raises Ecto.NoResultsError if the Trigger does not exist. Examples iex&gt; get_trigger! ( 123 ) % Trigger { } iex&gt; get_trigger! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Triggers.html#get_trigger!/1","title":"Glific.Triggers.get_trigger!/1","type":"function"},{"doc":"Returns the list of triggers filtered by args Examples iex&gt; list_triggers ( ) [ % Trigger { } , ... ]","ref":"Glific.Triggers.html#list_triggers/1","title":"Glific.Triggers.list_triggers/1","type":"function"},{"doc":"Updates a trigger. Examples iex&gt; update_trigger ( trigger , %{ field : new_value } ) { :ok , % Trigger { } } iex&gt; update_trigger ( trigger , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Triggers.html#update_trigger/2","title":"Glific.Triggers.update_trigger/2","type":"function"},{"doc":"The trigger helper for the trigger system that deals with the complexity of time queries","ref":"Glific.Triggers.Helper.html","title":"Glific.Triggers.Helper","type":"module"},{"doc":"Given a time and the frequency of occurence, compute the next time the event can potentially occur","ref":"Glific.Triggers.Helper.html#compute_next/1","title":"Glific.Triggers.Helper.compute_next/1","type":"function"},{"doc":"This file has been copied (and modified a wee bit)from https://github.com/jerel/ecto_fields/blob/master/lib/fields/url.ex The ownership, author and license (MIT) remains with the original owner of that repository","ref":"Glific.URI.html","title":"Glific.URI","type":"module"},{"doc":"Validate that the given value is a valid fully qualified url Examples iex&gt; EctoFields.URL . cast ( &quot;http://1.1.1.1&quot; ) :ok iex&gt; EctoFields.URL . cast ( &quot;http://example.com&quot; ) :ok iex&gt; EctoFields.URL . cast ( &quot;https://example.com&quot; ) :ok iex&gt; EctoFields.URL . cast ( &quot;http://example.com/test/foo.html?search=1&amp;page=two#header&quot; ) :ok iex&gt; EctoFields.URL . cast ( &quot;http://example.com:8080/&quot; ) :ok iex&gt; EctoFields.URL . cast ( &quot;myblog.html&quot; ) :error iex&gt; EctoFields.URL . cast ( &quot;http://example.com\blog irst&quot; ) :error","ref":"Glific.URI.html#cast/1","title":"Glific.URI.cast/1","type":"function"},{"doc":"The Users context.","ref":"Glific.Users.html","title":"Glific.Users","type":"module"},{"doc":"Return the count of users, using the same filter as list_users","ref":"Glific.Users.html#count_users/1","title":"Glific.Users.count_users/1","type":"function"},{"doc":"Callback implementation for Pow.Context.create/1 .","ref":"Glific.Users.html#create/1","title":"Glific.Users.create/1","type":"function"},{"doc":"Creates a user. Examples iex&gt; create_user ( %{ field : value } ) { :ok , % User { } } iex&gt; create_user ( %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Users.html#create_user/1","title":"Glific.Users.create_user/1","type":"function"},{"doc":"Callback implementation for Pow.Context.delete/1 .","ref":"Glific.Users.html#delete/1","title":"Glific.Users.delete/1","type":"function"},{"doc":"Deletes a user. Examples iex&gt; delete_user ( user ) { :ok , % User { } } iex&gt; delete_user ( user ) { :error , % Ecto.Changeset { } }","ref":"Glific.Users.html#delete_user/1","title":"Glific.Users.delete_user/1","type":"function"},{"doc":"Callback implementation for Pow.Context.get_by/1 .","ref":"Glific.Users.html#get_by/1","title":"Glific.Users.get_by/1","type":"function"},{"doc":"Gets a single user. Raises Ecto.NoResultsError if the User does not exist. Examples iex&gt; get_user! ( 123 ) % User { } iex&gt; get_user! ( 456 ) ** (Ecto.NoResultsError)","ref":"Glific.Users.html#get_user!/1","title":"Glific.Users.get_user!/1","type":"function"},{"doc":"Returns the list of filtered users. Examples iex&gt; list_users ( ) [ % User { } , ... ]","ref":"Glific.Users.html#list_users/1","title":"Glific.Users.list_users/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_authenticate/1","title":"Glific.Users.pow_authenticate/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_create/1","title":"Glific.Users.pow_create/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_delete/1","title":"Glific.Users.pow_delete/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_get_by/1","title":"Glific.Users.pow_get_by/1","type":"function"},{"doc":"","ref":"Glific.Users.html#pow_update/2","title":"Glific.Users.pow_update/2","type":"function"},{"doc":"Promote the first user of the system to admin automatically. Ignore NGO or SaaS users which are automatically created","ref":"Glific.Users.html#promote_first_user/1","title":"Glific.Users.promote_first_user/1","type":"function"},{"doc":"Reset user password","ref":"Glific.Users.html#reset_user_password/2","title":"Glific.Users.reset_user_password/2","type":"function"},{"doc":"Callback implementation for Pow.Context.update/2 .","ref":"Glific.Users.html#update/2","title":"Glific.Users.update/2","type":"function"},{"doc":"Updates a user. Examples iex&gt; update_user ( user , %{ field : new_value } ) { :ok , % User { } } iex&gt; update_user ( user , %{ field : bad_value } ) { :error , % Ecto.Changeset { } }","ref":"Glific.Users.html#update_user/2","title":"Glific.Users.update_user/2","type":"function"},{"doc":"Cloak Vault","ref":"Glific.Vault.html","title":"Glific.Vault","type":"module"},{"doc":"Returns a specification to start this module under a supervisor. See Supervisor .","ref":"Glific.Vault.html#child_spec/1","title":"Glific.Vault.child_spec/1","type":"function"},{"doc":"","ref":"Glific.Vault.html#start_link/1","title":"Glific.Vault.start_link/1","type":"function"},{"doc":"The entrypoint for defining your web interface, such as controllers, views, channels and so on. This can be used in your application as: use GlificWeb , :controller use GlificWeb , :view The definitions below will be executed for every view, controller, etc, so keep them short and clean, focused on imports, uses and aliases. Do NOT define functions inside the quoted expressions below. Instead, define any helper function in modules and import those modules here.","ref":"GlificWeb.html","title":"GlificWeb","type":"module"},{"doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"GlificWeb.html#__using__/1","title":"GlificWeb.__using__/1","type":"macro"},{"doc":"","ref":"GlificWeb.html#channel/0","title":"GlificWeb.channel/0","type":"function"},{"doc":"","ref":"GlificWeb.html#controller/0","title":"GlificWeb.controller/0","type":"function"},{"doc":"","ref":"GlificWeb.html#live_component/0","title":"GlificWeb.live_component/0","type":"function"},{"doc":"","ref":"GlificWeb.html#live_view/0","title":"GlificWeb.live_view/0","type":"function"},{"doc":"","ref":"GlificWeb.html#router/0","title":"GlificWeb.router/0","type":"function"},{"doc":"","ref":"GlificWeb.html#view/0","title":"GlificWeb.view/0","type":"function"},{"doc":"The Glific Onboarding Controller","ref":"GlificWeb.API.V1.OnboardController.html","title":"GlificWeb.API.V1.OnboardController","type":"module"},{"doc":"The Pow User Registration Controller","ref":"GlificWeb.API.V1.RegistrationController.html","title":"GlificWeb.API.V1.RegistrationController","type":"module"},{"doc":"Function for generating verification code and sending otp verification message","ref":"GlificWeb.API.V1.RegistrationController.html#create_and_send_verification_code/1","title":"GlificWeb.API.V1.RegistrationController.create_and_send_verification_code/1","type":"function"},{"doc":"Controller function for reset password It also verifies OTP to authorize the request","ref":"GlificWeb.API.V1.RegistrationController.html#reset_password/2","title":"GlificWeb.API.V1.RegistrationController.reset_password/2","type":"function"},{"doc":"The Pow User Session Controller","ref":"GlificWeb.API.V1.SessionController.html","title":"GlificWeb.API.V1.SessionController","type":"module"},{"doc":"PoW error handler for API Authentication","ref":"GlificWeb.APIAuthErrorHandler.html","title":"GlificWeb.APIAuthErrorHandler","type":"module"},{"doc":"Setting the absinthe context, so we can store the current user there","ref":"GlificWeb.ContextPlug.html","title":"GlificWeb.ContextPlug","type":"module"},{"doc":"Return the current user context based on the authorization header","ref":"GlificWeb.ContextPlug.html#build_context/1","title":"GlificWeb.ContextPlug.build_context/1","type":"function"},{"doc":"This is a basic plug that ensure the organization is loaded. To plug it on your router, you can use: plug GlificWeb.EnsurePlug , callback : &amp; OrganizationHelper . callback / 2 failure_callback : &amp; OrganizationHelper . failure_callback / 2 See GlificWeb.EnsurePlugConfig to check all the allowed config flags.","ref":"GlificWeb.EnsurePlug.html","title":"GlificWeb.EnsurePlug","type":"module"},{"doc":"This is a struct that holds the configuration for GlificWeb.EnsurePlug . Here are the config keys allowed: assign : the name of the assign where we must save the organization. callback : function that might be called when the plug succeeded. It must return a connection. failure_callback : function that might be called when the plug failed. It must return a connection.","ref":"GlificWeb.EnsurePlugConfig.html","title":"GlificWeb.EnsurePlugConfig","type":"module"},{"doc":"","ref":"GlificWeb.EnsurePlugConfig.html#t:t/0","title":"GlificWeb.EnsurePlugConfig.t/0","type":"type"},{"doc":"Conveniences for translating and building error messages.","ref":"GlificWeb.ErrorHelpers.html","title":"GlificWeb.ErrorHelpers","type":"module"},{"doc":"Generates tag for inlined form input errors.","ref":"GlificWeb.ErrorHelpers.html#error_tag/2","title":"GlificWeb.ErrorHelpers.error_tag/2","type":"function"},{"doc":"Translates an error message using gettext.","ref":"GlificWeb.ErrorHelpers.html#translate_error/1","title":"GlificWeb.ErrorHelpers.translate_error/1","type":"function"},{"doc":"","ref":"GlificWeb.ErrorView.html","title":"GlificWeb.ErrorView","type":"module"},{"doc":"The resource name, as an atom, for this view","ref":"GlificWeb.ErrorView.html#__resource__/0","title":"GlificWeb.ErrorView.__resource__/0","type":"function"},{"doc":"Renders the given template locally.","ref":"GlificWeb.ErrorView.html#render/2","title":"GlificWeb.ErrorView.render/2","type":"function"},{"doc":"Callback invoked when no template is found. By default it raises but can be customized to render a particular template.","ref":"GlificWeb.ErrorView.html#template_not_found/2","title":"GlificWeb.ErrorView.template_not_found/2","type":"function"},{"doc":"The controller to process events received from exotel","ref":"GlificWeb.ExotelController.html","title":"GlificWeb.ExotelController","type":"module"},{"doc":"First implementation of processing optin contact callback from exotel for digital green. Will need to make it more generic for broader use case across other NGOs We use the callto and directon parameters to ensure a valid call from exotel","ref":"GlificWeb.ExotelController.html#optin/2","title":"GlificWeb.ExotelController.optin/2","type":"function"},{"doc":"The Flow Editor Controller","ref":"GlificWeb.Flows.FlowEditorController.html","title":"GlificWeb.Flows.FlowEditorController","type":"module"},{"doc":"This is used to checking if the connection between frontend and backend is established or not.","ref":"GlificWeb.Flows.FlowEditorController.html#activity/2","title":"GlificWeb.Flows.FlowEditorController.activity/2","type":"function"},{"doc":"A list of all the communication channels. For Glific it's just WhatsApp. We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#channels/2","title":"GlificWeb.Flows.FlowEditorController.channels/2","type":"function"},{"doc":"A list of all the NLP classifiers. For Glific it's just Dialogflow We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#classifiers/2","title":"GlificWeb.Flows.FlowEditorController.classifiers/2","type":"function"},{"doc":"instead of reading a file we can call it directly from Assets. We will come back on that when we have more clearity of the use cases","ref":"GlificWeb.Flows.FlowEditorController.html#completion/2","title":"GlificWeb.Flows.FlowEditorController.completion/2","type":"function"},{"doc":"Add Contact fields into the database. The response should be a map with 3 keys % { Key: Field name, name: Field display name value_type: type of the value} We are not supporting this for now. We will add that in future","ref":"GlificWeb.Flows.FlowEditorController.html#fields_post/2","title":"GlificWeb.Flows.FlowEditorController.fields_post/2","type":"function"},{"doc":"Let's get all the flows or a latest flow revision","ref":"GlificWeb.Flows.FlowEditorController.html#flows/2","title":"GlificWeb.Flows.FlowEditorController.flows/2","type":"function"},{"doc":"Fetching single interactive template and returning in format that is understood by flow editor or Return error Interactive message not found","ref":"GlificWeb.Flows.FlowEditorController.html#interactive_template/2","title":"GlificWeb.Flows.FlowEditorController.interactive_template/2","type":"function"},{"doc":"A list of all the interactive templates in format that is understood by flow editor","ref":"GlificWeb.Flows.FlowEditorController.html#interactive_templates/2","title":"GlificWeb.Flows.FlowEditorController.interactive_templates/2","type":"function"},{"doc":"Get all the tags so that user can apply them on incoming message. We are not supporting this for now. To enable It should return a list of map having uuid and name as keys [%{uuid: tag.uuid, name: tag.label}]","ref":"GlificWeb.Flows.FlowEditorController.html#labels/2","title":"GlificWeb.Flows.FlowEditorController.labels/2","type":"function"},{"doc":"Store a label (new tag) in the system. The return response should be a map of 3 keys. [%{uuid: tag.uuid, name: params[&quot;name&quot;], count}] We are not supporting them for now. We will come back to this in near future","ref":"GlificWeb.Flows.FlowEditorController.html#labels_post/2","title":"GlificWeb.Flows.FlowEditorController.labels_post/2","type":"function"},{"doc":"We are not using this for now but this is required for flow editor config.","ref":"GlificWeb.Flows.FlowEditorController.html#resthooks/2","title":"GlificWeb.Flows.FlowEditorController.resthooks/2","type":"function"},{"doc":"Get all or a specific revision for a flow","ref":"GlificWeb.Flows.FlowEditorController.html#revisions/2","title":"GlificWeb.Flows.FlowEditorController.revisions/2","type":"function"},{"doc":"Save a revision for a flow and get the revision id","ref":"GlificWeb.Flows.FlowEditorController.html#save_revisions/2","title":"GlificWeb.Flows.FlowEditorController.save_revisions/2","type":"function"},{"doc":"We are not sure how to use this but this endpoint is required for flow editor. Will come back to this in future.","ref":"GlificWeb.Flows.FlowEditorController.html#ticketers/2","title":"GlificWeb.Flows.FlowEditorController.ticketers/2","type":"function"},{"doc":"Validate media to send as attachment","ref":"GlificWeb.Flows.FlowEditorController.html#validate_media/2","title":"GlificWeb.Flows.FlowEditorController.validate_media/2","type":"function"},{"doc":"Experimental approach on trying to handle webhooks for NGOs within the system. This bypasses using a third party and hence makes things a lot more efficient","ref":"GlificWeb.Flows.WebhookController.html","title":"GlificWeb.Flows.WebhookController","type":"module"},{"doc":"Example implementation of survey computation for STiR","ref":"GlificWeb.Flows.WebhookController.html#stir_survey/2","title":"GlificWeb.Flows.WebhookController.stir_survey/2","type":"function"},{"doc":"A module providing Internationalization with a gettext-based API. By using Gettext , your module gains a set of macros for translations, for example: import GlificWeb.Gettext # Simple translation gettext ( &quot;Here is the string to translate&quot; ) # Plural translation ngettext ( &quot;Here is the string to translate&quot; , &quot;Here are the strings to translate&quot; , 3 ) # Domain-based translation dgettext ( &quot;errors&quot; , &quot;Here is the error message to translate&quot; ) See the Gettext Docs for detailed usage.","ref":"GlificWeb.Gettext.html","title":"GlificWeb.Gettext","type":"module"},{"doc":"Callback implementation for Gettext.Backend.dgettext/3 .","ref":"GlificWeb.Gettext.html#dgettext/3","title":"GlificWeb.Gettext.dgettext/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dgettext_noop/2 .","ref":"GlificWeb.Gettext.html#dgettext_noop/2","title":"GlificWeb.Gettext.dgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext/5 .","ref":"GlificWeb.Gettext.html#dngettext/5","title":"GlificWeb.Gettext.dngettext/5","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dngettext_noop/3 .","ref":"GlificWeb.Gettext.html#dngettext_noop/3","title":"GlificWeb.Gettext.dngettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpgettext/4 .","ref":"GlificWeb.Gettext.html#dpgettext/4","title":"GlificWeb.Gettext.dpgettext/4","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#dpgettext_noop/3","title":"GlificWeb.Gettext.dpgettext_noop/3","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.dpngettext/6 .","ref":"GlificWeb.Gettext.html#dpngettext/6","title":"GlificWeb.Gettext.dpngettext/6","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#dpngettext_noop/4","title":"GlificWeb.Gettext.dpngettext_noop/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext/2 .","ref":"GlificWeb.Gettext.html#gettext/2","title":"GlificWeb.Gettext.gettext/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_comment/1 .","ref":"GlificWeb.Gettext.html#gettext_comment/1","title":"GlificWeb.Gettext.gettext_comment/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.gettext_noop/1 .","ref":"GlificWeb.Gettext.html#gettext_noop/1","title":"GlificWeb.Gettext.gettext_noop/1","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_bindings/2 .","ref":"GlificWeb.Gettext.html#handle_missing_bindings/2","title":"GlificWeb.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_plural_translation/7 .","ref":"GlificWeb.Gettext.html#handle_missing_plural_translation/7","title":"GlificWeb.Gettext.handle_missing_plural_translation/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.handle_missing_translation/5 .","ref":"GlificWeb.Gettext.html#handle_missing_translation/5","title":"GlificWeb.Gettext.handle_missing_translation/5","type":"function"},{"doc":"","ref":"GlificWeb.Gettext.html#lgettext/5","title":"GlificWeb.Gettext.lgettext/5","type":"function"},{"doc":"","ref":"GlificWeb.Gettext.html#lngettext/7","title":"GlificWeb.Gettext.lngettext/7","type":"function"},{"doc":"Callback implementation for Gettext.Backend.ngettext/4 .","ref":"GlificWeb.Gettext.html#ngettext/4","title":"GlificWeb.Gettext.ngettext/4","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.ngettext_noop/2 .","ref":"GlificWeb.Gettext.html#ngettext_noop/2","title":"GlificWeb.Gettext.ngettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pgettext/3 .","ref":"GlificWeb.Gettext.html#pgettext/3","title":"GlificWeb.Gettext.pgettext/3","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#pgettext_noop/2","title":"GlificWeb.Gettext.pgettext_noop/2","type":"macro"},{"doc":"Callback implementation for Gettext.Backend.pngettext/5 .","ref":"GlificWeb.Gettext.html#pngettext/5","title":"GlificWeb.Gettext.pngettext/5","type":"macro"},{"doc":"","ref":"GlificWeb.Gettext.html#pngettext_noop/3","title":"GlificWeb.Gettext.pngettext_noop/3","type":"macro"},{"doc":"Simple macro to conditionally load Oban.Web only if already loaded. This allows us to include it only in the production release and hence make it a lot easier on potential open source contributors. We thus avoid the problem of sharing the oban key and/or them hacking the code to get it working Thanx to @manu from DataOGram and @benwilson from Absinthe/GraphQL for help with this feature.","ref":"GlificWeb.InjectOban.html","title":"GlificWeb.InjectOban","type":"module"},{"doc":"Code to cache the raw body in a conn variable before being processed by Phoenix. Used to validate the signature","ref":"GlificWeb.Misc.BodyReader.html","title":"GlificWeb.Misc.BodyReader","type":"module"},{"doc":"Store the raw body in the conn assigns array","ref":"GlificWeb.Misc.BodyReader.html#cache_raw_body/2","title":"GlificWeb.Misc.BodyReader.cache_raw_body/2","type":"function"},{"doc":"Verify that the signature matches from the incoming webhook","ref":"GlificWeb.Misc.HTTPSignature.html","title":"GlificWeb.Misc.HTTPSignature","type":"module"},{"doc":"This file and the below files have been &quot;borrowed and modified&quot; from triplex: https://github.com/ateliware/triplex The original copyright and license - MIT belong to the authors and contributors of Triplex plug.ex ensure_plug.ex ensure_plug_config.ex subdomain_plug.ex subdomain_plug_config.ex param_plug.ex param_plug_config.ex This module have some basic functions for our triplex plugs. The plugs we have for now are: GlificWeb.ParamPlug - loads the organization from a body or query param GlificWeb.SubdomainPlug - loads the organization from the url subdomain GlificWeb.EnsurePlug - ensures the current organization is loaded and halts if not","ref":"GlificWeb.Plug.html","title":"GlificWeb.Plug","type":"module"},{"doc":"Ensure the organization is loaded, and if not, halts the conn . The config map/struct must have: assign : the name of the assign where we must save the organization.","ref":"GlificWeb.Plug.html#ensure_organization/2","title":"GlificWeb.Plug.ensure_organization/2","type":"function"},{"doc":"Puts the given organization as an assign on the given conn , but only if the organization is not reserved. The config map/struct must have: organization_handler : function to handle the organization param. Its return will be used as the organization. assign : the name of the assign where we must save the organization.","ref":"GlificWeb.Plug.html#put_organization/3","title":"GlificWeb.Plug.put_organization/3","type":"function"},{"doc":"Global unauthorized error handler","ref":"GlificWeb.Plug.html#send_error/1","title":"GlificWeb.Plug.send_error/1","type":"function"},{"doc":"Dedicated controller to handle billing events from Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController","type":"module"},{"doc":"Message status when the message has been sent to gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.html#conversations/2","title":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.conversations/2","type":"function"},{"doc":"Callback for billing event","ref":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.html#handle_billing_event/2","title":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.handle_billing_event/2","type":"function"},{"doc":"Default handle for all billing event callbacks","ref":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.html#handler/2","title":"GlificWeb.Providers.Gupshup.Controllers.BillingEventController.handler/2","type":"function"},{"doc":"Dedicated controller to handle different types of inbound message from Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController","type":"module"},{"doc":"Callback for gupshup audio type","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#audio/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.audio/2","type":"function"},{"doc":"Callback for gupshup file type","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#file/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.file/2","type":"function"},{"doc":"Callback for gupshup image type","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#image/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.image/2","type":"function"},{"doc":"Callback for interactive list","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#list/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.list/2","type":"function"},{"doc":"Callback for interactive quick reply type","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#quick_reply/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.quick_reply/2","type":"function"},{"doc":"Callback for gupshup sticker image","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#sticker/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.sticker/2","type":"function"},{"doc":"Parse text message payload and convert that into Glific message struct","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#text/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.text/2","type":"function"},{"doc":"Callback for gupshup video type","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageController.html#video/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageController.video/2","type":"function"},{"doc":"Dedicated controller to handle all the message status requests like read, delivered etc..","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController","type":"module"},{"doc":"Message has been delivered to whats app","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#delivered/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.delivered/2","type":"function"},{"doc":"Message status when the message has been sent to gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#enqueued/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.enqueued/2","type":"function"},{"doc":"Message status when gupshup could not send the message to whats app","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#failed/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.failed/2","type":"function"},{"doc":"Default handle for all message event callbacks","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#handler/3","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.handler/3","type":"function"},{"doc":"Message has been read by the beneficiary","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#read/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.read/2","type":"function"},{"doc":"Message has been sent to whats app via Gupshup","ref":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.html#sent/2","title":"GlificWeb.Providers.Gupshup.Controllers.MessageEventController.sent/2","type":"function"},{"doc":"Dedicated controller to handle different types of user events requests like optin an optout form","ref":"GlificWeb.Providers.Gupshup.Controllers.UserEventController.html","title":"GlificWeb.Providers.Gupshup.Controllers.UserEventController","type":"module"},{"doc":"Dedicated controller to handle different types of inbound message form Gupshup","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController","type":"module"},{"doc":"Callback for gupshup enterprise audio","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#audio/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.audio/2","type":"function"},{"doc":"Parse button message payload and convert that into Glific message struct","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#button/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.button/2","type":"function"},{"doc":"Callback for gupshup enterprise document","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#document/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.document/2","type":"function"},{"doc":"Callback for gupshup enterprise image","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#image/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.image/2","type":"function"},{"doc":"Parse interactive list message payload and convert that into Glific message struct","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#interactive/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.interactive/2","type":"function"},{"doc":"Parse text message payload and convert that into Glific message struct","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#text/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.text/2","type":"function"},{"doc":"Callback for gupshup enterprise videos","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.html#video/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageController.video/2","type":"function"},{"doc":"Dedicated controller to handle all the message status requests like sent, delivered etc..","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageEventController.html","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageEventController","type":"module"},{"doc":"Default handle for all message event callbacks","ref":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageEventController.html#handler/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Controllers.MessageEventController.handler/2","type":"function"},{"doc":"A Gupshup shunt which will redirect all the incoming requests to the gupshup router based on there event type.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Plugs.Shunt.html","title":"GlificWeb.Providers.Gupshup.Enterprise.Plugs.Shunt","type":"module"},{"doc":"Build the context with the root user for all gupshup calls, this gives us permission to update contacts etc","ref":"GlificWeb.Providers.Gupshup.Enterprise.Plugs.Shunt.html#build_context/1","title":"GlificWeb.Providers.Gupshup.Enterprise.Plugs.Shunt.build_context/1","type":"function"},{"doc":"A Gupshup router which will redirect all the gupsup incoming request to there controller actions.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.html","title":"GlificWeb.Providers.Gupshup.Enterprise.Router","type":"module"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.html#call/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.html#init/1","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Providers.Gupshup.Enterprise.Router.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#default_path/3","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.default_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#default_path/4","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.default_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#default_url/3","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.default_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#default_url/4","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.default_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_event_path/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_event_path/3","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_event_url/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_event_url/3","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_event_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_path/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_path/3","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_url/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#message_url/3","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.message_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#path/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#static_path/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#static_url/2","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.html#url/1","title":"GlificWeb.Providers.Gupshup.Enterprise.Router.Helpers.url/1","type":"function"},{"doc":"A Gupshup shunt which will redirect all the incoming requests to the gupshup router based on there event type.","ref":"GlificWeb.Providers.Gupshup.Plugs.Shunt.html","title":"GlificWeb.Providers.Gupshup.Plugs.Shunt","type":"module"},{"doc":"Build the context with the root user for all gupshup calls, this gives us permission to update contacts etc","ref":"GlificWeb.Providers.Gupshup.Plugs.Shunt.html#build_context/1","title":"GlificWeb.Providers.Gupshup.Plugs.Shunt.build_context/1","type":"function"},{"doc":"A Gupshup router which will redirect all the gupsup incoming request to there controller actions.","ref":"GlificWeb.Providers.Gupshup.Router.html","title":"GlificWeb.Providers.Gupshup.Router","type":"module"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Providers.Gupshup.Router.html#call/2","title":"GlificWeb.Providers.Gupshup.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Providers.Gupshup.Router.html#init/1","title":"GlificWeb.Providers.Gupshup.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Providers.Gupshup.Router.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html","title":"GlificWeb.Providers.Gupshup.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#billing_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.billing_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#billing_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.billing_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#billing_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.billing_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#billing_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.billing_event_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_path/4","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#default_url/4","title":"GlificWeb.Providers.Gupshup.Router.Helpers.default_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_event_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#message_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.message_url/3","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#static_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.static_url/2","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#url/1","title":"GlificWeb.Providers.Gupshup.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_path/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_path/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_url/2","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Providers.Gupshup.Router.Helpers.html#user_event_url/3","title":"GlificWeb.Providers.Gupshup.Router.Helpers.user_event_url/3","type":"function"},{"doc":"Enforcing rate limits on our AP's both authenticated and non-authenticated","ref":"GlificWeb.RateLimitPlug.html","title":"GlificWeb.RateLimitPlug","type":"module"},{"doc":"Billing Resolver which sits between the GraphQL schema and Glific Billing Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Billings.html","title":"GlificWeb.Resolvers.Billings","type":"module"},{"doc":"Get a specific billing by id","ref":"GlificWeb.Resolvers.Billings.html#billing/3","title":"GlificWeb.Resolvers.Billings.billing/3","type":"function"},{"doc":"Consulting Hours Resolver which sits between the GraphQL schema and Glific Consulting Hour Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.ConsultingHours.html","title":"GlificWeb.Resolvers.ConsultingHours","type":"module"},{"doc":"Get the list of consulting hour filtered by args","ref":"GlificWeb.Resolvers.ConsultingHours.html#consulting_hours/3","title":"GlificWeb.Resolvers.ConsultingHours.consulting_hours/3","type":"function"},{"doc":"Get the count of consulting hours filtered by args","ref":"GlificWeb.Resolvers.ConsultingHours.html#count_consulting_hours/3","title":"GlificWeb.Resolvers.ConsultingHours.count_consulting_hours/3","type":"function"},{"doc":"Create consulting hour","ref":"GlificWeb.Resolvers.ConsultingHours.html#create_consulting_hour/3","title":"GlificWeb.Resolvers.ConsultingHours.create_consulting_hour/3","type":"function"},{"doc":"Delete consulting hour","ref":"GlificWeb.Resolvers.ConsultingHours.html#delete_consulting_hour/3","title":"GlificWeb.Resolvers.ConsultingHours.delete_consulting_hour/3","type":"function"},{"doc":"Fetches consulting hours between start_date and end_date","ref":"GlificWeb.Resolvers.ConsultingHours.html#fetch_consulting_hours/3","title":"GlificWeb.Resolvers.ConsultingHours.fetch_consulting_hours/3","type":"function"},{"doc":"Fetch consulting hour based id","ref":"GlificWeb.Resolvers.ConsultingHours.html#get_consulting_hours/3","title":"GlificWeb.Resolvers.ConsultingHours.get_consulting_hours/3","type":"function"},{"doc":"Update consulting hour","ref":"GlificWeb.Resolvers.ConsultingHours.html#update_consulting_hour/3","title":"GlificWeb.Resolvers.ConsultingHours.update_consulting_hour/3","type":"function"},{"doc":"Contact Resolver which sits between the GraphQL schema and Glific Contact Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Contacts.html","title":"GlificWeb.Resolvers.Contacts","type":"module"},{"doc":"Release a simulator contact or nil if possible for this user","ref":"GlificWeb.Resolvers.Contacts.html#contact_history/3","title":"GlificWeb.Resolvers.Contacts.contact_history/3","type":"function"},{"doc":"Get current location of the contact","ref":"GlificWeb.Resolvers.Contacts.html#contact_location/3","title":"GlificWeb.Resolvers.Contacts.contact_location/3","type":"function"},{"doc":"Release a simulator contact or nil if possible for this user","ref":"GlificWeb.Resolvers.Contacts.html#count_contact_history/3","title":"GlificWeb.Resolvers.Contacts.count_contact_history/3","type":"function"},{"doc":"Get the count of contacts filtered by args","ref":"GlificWeb.Resolvers.Contacts.html#count_contacts/3","title":"GlificWeb.Resolvers.Contacts.count_contacts/3","type":"function"},{"doc":"Import contacts to the database","ref":"GlificWeb.Resolvers.Contacts.html#import_contacts/3","title":"GlificWeb.Resolvers.Contacts.import_contacts/3","type":"function"},{"doc":"Upload a contact phone as opted in","ref":"GlificWeb.Resolvers.Contacts.html#optin_contact/3","title":"GlificWeb.Resolvers.Contacts.optin_contact/3","type":"function"},{"doc":"Grab a simulator contact or nil if possible for this user","ref":"GlificWeb.Resolvers.Contacts.html#simulator_get/3","title":"GlificWeb.Resolvers.Contacts.simulator_get/3","type":"function"},{"doc":"Release a simulator contact or nil if possible for this user","ref":"GlificWeb.Resolvers.Contacts.html#simulator_release/3","title":"GlificWeb.Resolvers.Contacts.simulator_release/3","type":"function"},{"doc":"Contact Field Resolver which sits between the GraphQL schema and Glific Contact Field Context API.","ref":"GlificWeb.Resolvers.ContactsField.html","title":"GlificWeb.Resolvers.ContactsField","type":"module"},{"doc":"Get a specific contact field by id","ref":"GlificWeb.Resolvers.ContactsField.html#contacts_field/3","title":"GlificWeb.Resolvers.ContactsField.contacts_field/3","type":"function"},{"doc":"Get the list of contacts_fields filtered by args","ref":"GlificWeb.Resolvers.ContactsField.html#contacts_fields/3","title":"GlificWeb.Resolvers.ContactsField.contacts_fields/3","type":"function"},{"doc":"Get the count of contacts_fields filtered by args","ref":"GlificWeb.Resolvers.ContactsField.html#count_contacts_fields/3","title":"GlificWeb.Resolvers.ContactsField.count_contacts_fields/3","type":"function"},{"doc":"Create contact field","ref":"GlificWeb.Resolvers.ContactsField.html#create_contacts_field/3","title":"GlificWeb.Resolvers.ContactsField.create_contacts_field/3","type":"function"},{"doc":"Delete an existing contact field","ref":"GlificWeb.Resolvers.ContactsField.html#delete_contacts_field/3","title":"GlificWeb.Resolvers.ContactsField.delete_contacts_field/3","type":"function"},{"doc":"Update existing contact field","ref":"GlificWeb.Resolvers.ContactsField.html#update_contacts_field/3","title":"GlificWeb.Resolvers.ContactsField.update_contacts_field/3","type":"function"},{"doc":"Tag Resolver which sits between the GraphQL schema and Glific Conversation Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Conversations.html","title":"GlificWeb.Resolvers.Conversations","type":"module"},{"doc":"Get the list of conversations filtered by args For an authenticated session, we can get the current user from the context via this pattern match %{context: %{current_user: current_user}}","ref":"GlificWeb.Resolvers.Conversations.html#conversations/3","title":"GlificWeb.Resolvers.Conversations.conversations/3","type":"function"},{"doc":"Extensions Resolver which sits between the GraphQL schema and Glific Extensions API.","ref":"GlificWeb.Resolvers.Extensions.html","title":"GlificWeb.Resolvers.Extensions","type":"module"},{"doc":"Create extension","ref":"GlificWeb.Resolvers.Extensions.html#create_extension/3","title":"GlificWeb.Resolvers.Extensions.create_extension/3","type":"function"},{"doc":"Delete consulting hour","ref":"GlificWeb.Resolvers.Extensions.html#delete_extension/3","title":"GlificWeb.Resolvers.Extensions.delete_extension/3","type":"function"},{"doc":"Get a specific extension by id","ref":"GlificWeb.Resolvers.Extensions.html#extension/3","title":"GlificWeb.Resolvers.Extensions.extension/3","type":"function"},{"doc":"Update extension","ref":"GlificWeb.Resolvers.Extensions.html#update_extension/3","title":"GlificWeb.Resolvers.Extensions.update_extension/3","type":"function"},{"doc":"Update organization extension","ref":"GlificWeb.Resolvers.Extensions.html#update_organization_extension/3","title":"GlificWeb.Resolvers.Extensions.update_organization_extension/3","type":"function"},{"doc":"Flow Labels Resolver which sits between the GraphQL schema and Glific Flow Label Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.FlowLabels.html","title":"GlificWeb.Resolvers.FlowLabels","type":"module"},{"doc":"Get the count of flow labels filtered by args","ref":"GlificWeb.Resolvers.FlowLabels.html#count_flow_labels/3","title":"GlificWeb.Resolvers.FlowLabels.count_flow_labels/3","type":"function"},{"doc":"Get a specific flow label by id","ref":"GlificWeb.Resolvers.FlowLabels.html#flow_label/3","title":"GlificWeb.Resolvers.FlowLabels.flow_label/3","type":"function"},{"doc":"Get the list of flow labels","ref":"GlificWeb.Resolvers.FlowLabels.html#flow_labels/3","title":"GlificWeb.Resolvers.FlowLabels.flow_labels/3","type":"function"},{"doc":"Flow Resolver which sits between the GraphQL schema and Glific Flow Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Flows.html","title":"GlificWeb.Resolvers.Flows","type":"module"},{"doc":"Get broadcast stats for a flow","ref":"GlificWeb.Resolvers.Flows.html#broadcast_stats/3","title":"GlificWeb.Resolvers.Flows.broadcast_stats/3","type":"function"},{"doc":"Make a copy a flow","ref":"GlificWeb.Resolvers.Flows.html#copy_flow/3","title":"GlificWeb.Resolvers.Flows.copy_flow/3","type":"function"},{"doc":"Get the count of flows filtered by args","ref":"GlificWeb.Resolvers.Flows.html#count_flows/3","title":"GlificWeb.Resolvers.Flows.count_flows/3","type":"function"},{"doc":"Get a specific flow by id","ref":"GlificWeb.Resolvers.Flows.html#flow/3","title":"GlificWeb.Resolvers.Flows.flow/3","type":"function"},{"doc":"Grab a flow or nil if possible for this user","ref":"GlificWeb.Resolvers.Flows.html#flow_get/3","title":"GlificWeb.Resolvers.Flows.flow_get/3","type":"function"},{"doc":"Release a flow or nil if possible for this user","ref":"GlificWeb.Resolvers.Flows.html#flow_release/3","title":"GlificWeb.Resolvers.Flows.flow_release/3","type":"function"},{"doc":"Get the list of flows","ref":"GlificWeb.Resolvers.Flows.html#flows/3","title":"GlificWeb.Resolvers.Flows.flows/3","type":"function"},{"doc":"Publish a flow","ref":"GlificWeb.Resolvers.Flows.html#publish_flow/3","title":"GlificWeb.Resolvers.Flows.publish_flow/3","type":"function"},{"doc":"Reset the flow counts for a specific flow","ref":"GlificWeb.Resolvers.Flows.html#reset_flow_count/3","title":"GlificWeb.Resolvers.Flows.reset_flow_count/3","type":"function"},{"doc":"Resume a flow for a contact","ref":"GlificWeb.Resolvers.Flows.html#resume_contact_flow/3","title":"GlificWeb.Resolvers.Flows.resume_contact_flow/3","type":"function"},{"doc":"Start a flow for a contact","ref":"GlificWeb.Resolvers.Flows.html#start_contact_flow/3","title":"GlificWeb.Resolvers.Flows.start_contact_flow/3","type":"function"},{"doc":"Start a flow for all contacts of a group","ref":"GlificWeb.Resolvers.Flows.html#start_group_flow/3","title":"GlificWeb.Resolvers.Flows.start_group_flow/3","type":"function"},{"doc":"Terminate all flows for a contact","ref":"GlificWeb.Resolvers.Flows.html#terminate_contact_flows/3","title":"GlificWeb.Resolvers.Flows.terminate_contact_flows/3","type":"function"},{"doc":"Group Resolver which sits between the GraphQL schema and Glific Group Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Groups.html","title":"GlificWeb.Resolvers.Groups","type":"module"},{"doc":"Get count of group contacts","ref":"GlificWeb.Resolvers.Groups.html#contacts_count/3","title":"GlificWeb.Resolvers.Groups.contacts_count/3","type":"function"},{"doc":"Get the count of groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#count_groups/3","title":"GlificWeb.Resolvers.Groups.count_groups/3","type":"function"},{"doc":"Creates an contact group entry","ref":"GlificWeb.Resolvers.Groups.html#create_contact_group/3","title":"GlificWeb.Resolvers.Groups.create_contact_group/3","type":"function"},{"doc":"Creates an group","ref":"GlificWeb.Resolvers.Groups.html#create_group/3","title":"GlificWeb.Resolvers.Groups.create_group/3","type":"function"},{"doc":"Creates an user group entry","ref":"GlificWeb.Resolvers.Groups.html#create_user_group/3","title":"GlificWeb.Resolvers.Groups.create_user_group/3","type":"function"},{"doc":"Deletes an group","ref":"GlificWeb.Resolvers.Groups.html#delete_group/3","title":"GlificWeb.Resolvers.Groups.delete_group/3","type":"function"},{"doc":"Get a specific group by id","ref":"GlificWeb.Resolvers.Groups.html#group/3","title":"GlificWeb.Resolvers.Groups.group/3","type":"function"},{"doc":"Get group info by id","ref":"GlificWeb.Resolvers.Groups.html#group_info/3","title":"GlificWeb.Resolvers.Groups.group_info/3","type":"function"},{"doc":"Get the list of groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#groups/3","title":"GlificWeb.Resolvers.Groups.groups/3","type":"function"},{"doc":"Get the list of organizations groups filtered by args","ref":"GlificWeb.Resolvers.Groups.html#organization_groups/3","title":"GlificWeb.Resolvers.Groups.organization_groups/3","type":"function"},{"doc":"Updates an group","ref":"GlificWeb.Resolvers.Groups.html#update_group/3","title":"GlificWeb.Resolvers.Groups.update_group/3","type":"function"},{"doc":"Get count of group users","ref":"GlificWeb.Resolvers.Groups.html#users_count/3","title":"GlificWeb.Resolvers.Groups.users_count/3","type":"function"},{"doc":"Helper funcations for GQL resolvers","ref":"GlificWeb.Resolvers.Helper.html","title":"GlificWeb.Resolvers.Helper","type":"module"},{"doc":"Will use this helper funcation to add the organization in into the filters for all the list and count funcations","ref":"GlificWeb.Resolvers.Helper.html#add_org_filter/2","title":"GlificWeb.Resolvers.Helper.add_org_filter/2","type":"function"},{"doc":"Interactives Resolver which sits between the GraphQL schema and Glific Interactives Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.InteractiveTemplates.html","title":"GlificWeb.Resolvers.InteractiveTemplates","type":"module"},{"doc":"Make a copy of interactive template","ref":"GlificWeb.Resolvers.InteractiveTemplates.html#copy_interactive_template/3","title":"GlificWeb.Resolvers.InteractiveTemplates.copy_interactive_template/3","type":"function"},{"doc":"Get the count of session Interactives filtered by args","ref":"GlificWeb.Resolvers.InteractiveTemplates.html#count_interactive_templates/3","title":"GlificWeb.Resolvers.InteractiveTemplates.count_interactive_templates/3","type":"function"},{"doc":"Get a specific session template by id","ref":"GlificWeb.Resolvers.InteractiveTemplates.html#interactive_template/3","title":"GlificWeb.Resolvers.InteractiveTemplates.interactive_template/3","type":"function"},{"doc":"Get the list of session Interactives filtered by args","ref":"GlificWeb.Resolvers.InteractiveTemplates.html#interactive_templates/3","title":"GlificWeb.Resolvers.InteractiveTemplates.interactive_templates/3","type":"function"},{"doc":"Location Resolver which sits between the GraphQL schema and Glific Location Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Locations.html","title":"GlificWeb.Resolvers.Locations","type":"module"},{"doc":"Get a specific message media by id","ref":"GlificWeb.Resolvers.Locations.html#location/3","title":"GlificWeb.Resolvers.Locations.location/3","type":"function"},{"doc":"Resolver to deal with file uploads, which we send directly to GCS","ref":"GlificWeb.Resolvers.Media.html","title":"GlificWeb.Resolvers.Media","type":"module"},{"doc":"Upload a file given its extension","ref":"GlificWeb.Resolvers.Media.html#upload/3","title":"GlificWeb.Resolvers.Media.upload/3","type":"function"},{"doc":"Upload a blob encoded in base64 given its extension","ref":"GlificWeb.Resolvers.Media.html#upload_blob/3","title":"GlificWeb.Resolvers.Media.upload_blob/3","type":"function"},{"doc":"Message Resolver which sits between the GraphQL schema and Glific Message Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Messages.html","title":"GlificWeb.Resolvers.Messages","type":"module"},{"doc":"Delete all messages of a contact","ref":"GlificWeb.Resolvers.Messages.html#clear_messages/3","title":"GlificWeb.Resolvers.Messages.clear_messages/3","type":"function"},{"doc":"Get the count of messages filtered by args","ref":"GlificWeb.Resolvers.Messages.html#count_messages/3","title":"GlificWeb.Resolvers.Messages.count_messages/3","type":"function"},{"doc":"Get the count of message media","ref":"GlificWeb.Resolvers.Messages.html#count_messages_media/3","title":"GlificWeb.Resolvers.Messages.count_messages_media/3","type":"function"},{"doc":"Create and send message to contacts of a group","ref":"GlificWeb.Resolvers.Messages.html#create_and_send_message_to_group/3","title":"GlificWeb.Resolvers.Messages.create_and_send_message_to_group/3","type":"function"},{"doc":"Get a specific message by id","ref":"GlificWeb.Resolvers.Messages.html#message/3","title":"GlificWeb.Resolvers.Messages.message/3","type":"function"},{"doc":"Get a specific message media by id","ref":"GlificWeb.Resolvers.Messages.html#message_media/3","title":"GlificWeb.Resolvers.Messages.message_media/3","type":"function"},{"doc":"Get the list of messages filtered by args","ref":"GlificWeb.Resolvers.Messages.html#messages/3","title":"GlificWeb.Resolvers.Messages.messages/3","type":"function"},{"doc":"Validate a media url and type","ref":"GlificWeb.Resolvers.Messages.html#validate_media/3","title":"GlificWeb.Resolvers.Messages.validate_media/3","type":"function"},{"doc":"Notification Resolver which sits between the GraphQL schema and Glific Notification Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Notifications.html","title":"GlificWeb.Resolvers.Notifications","type":"module"},{"doc":"Get the count of notifications filtered by args","ref":"GlificWeb.Resolvers.Notifications.html#count_notifications/3","title":"GlificWeb.Resolvers.Notifications.count_notifications/3","type":"function"},{"doc":"Mark all the unread messages as read","ref":"GlificWeb.Resolvers.Notifications.html#mark_notification_as_read/3","title":"GlificWeb.Resolvers.Notifications.mark_notification_as_read/3","type":"function"},{"doc":"Get the list of notifications filtered by args","ref":"GlificWeb.Resolvers.Notifications.html#notifications/3","title":"GlificWeb.Resolvers.Notifications.notifications/3","type":"function"},{"doc":"Partners Resolver which sits between the GraphQL schema and Glific Partners Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Partners.html","title":"GlificWeb.Resolvers.Partners","type":"module"},{"doc":"Get a specific bsp balance by organization id","ref":"GlificWeb.Resolvers.Partners.html#bspbalance/3","title":"GlificWeb.Resolvers.Partners.bspbalance/3","type":"function"},{"doc":"Get the count of organizations filtered by args","ref":"GlificWeb.Resolvers.Partners.html#count_organizations/3","title":"GlificWeb.Resolvers.Partners.count_organizations/3","type":"function"},{"doc":"Get the count of providers filtered by args","ref":"GlificWeb.Resolvers.Partners.html#count_providers/3","title":"GlificWeb.Resolvers.Partners.count_providers/3","type":"function"},{"doc":"Creates an organization's credential","ref":"GlificWeb.Resolvers.Partners.html#create_credential/3","title":"GlificWeb.Resolvers.Partners.create_credential/3","type":"function"},{"doc":"Creates an organization","ref":"GlificWeb.Resolvers.Partners.html#create_organization/3","title":"GlificWeb.Resolvers.Partners.create_organization/3","type":"function"},{"doc":"Creates a provider","ref":"GlificWeb.Resolvers.Partners.html#create_provider/3","title":"GlificWeb.Resolvers.Partners.create_provider/3","type":"function"},{"doc":"Get organization's credential by shorcode/service","ref":"GlificWeb.Resolvers.Partners.html#credential/3","title":"GlificWeb.Resolvers.Partners.credential/3","type":"function"},{"doc":"Delete an inactive organization","ref":"GlificWeb.Resolvers.Partners.html#delete_inactive_organization/3","title":"GlificWeb.Resolvers.Partners.delete_inactive_organization/3","type":"function"},{"doc":"Deletes an organization","ref":"GlificWeb.Resolvers.Partners.html#delete_organization/3","title":"GlificWeb.Resolvers.Partners.delete_organization/3","type":"function"},{"doc":"Deletes a provider","ref":"GlificWeb.Resolvers.Partners.html#delete_provider/3","title":"GlificWeb.Resolvers.Partners.delete_provider/3","type":"function"},{"doc":"Get a specific organization by id","ref":"GlificWeb.Resolvers.Partners.html#organization/3","title":"GlificWeb.Resolvers.Partners.organization/3","type":"function"},{"doc":"Get the organizations services","ref":"GlificWeb.Resolvers.Partners.html#organization_services/3","title":"GlificWeb.Resolvers.Partners.organization_services/3","type":"function"},{"doc":"Get the list of organizations filtered by args","ref":"GlificWeb.Resolvers.Partners.html#organizations/3","title":"GlificWeb.Resolvers.Partners.organizations/3","type":"function"},{"doc":"Get a specific provider by id","ref":"GlificWeb.Resolvers.Partners.html#provider/3","title":"GlificWeb.Resolvers.Partners.provider/3","type":"function"},{"doc":"Get the list of providers","ref":"GlificWeb.Resolvers.Partners.html#providers/3","title":"GlificWeb.Resolvers.Partners.providers/3","type":"function"},{"doc":"Get the quality rating details of provider","ref":"GlificWeb.Resolvers.Partners.html#quality_rating/3","title":"GlificWeb.Resolvers.Partners.quality_rating/3","type":"function"},{"doc":"Resets table and some columns of an organization","ref":"GlificWeb.Resolvers.Partners.html#reset_organization/3","title":"GlificWeb.Resolvers.Partners.reset_organization/3","type":"function"},{"doc":"Updates an organization's credential","ref":"GlificWeb.Resolvers.Partners.html#update_credential/3","title":"GlificWeb.Resolvers.Partners.update_credential/3","type":"function"},{"doc":"Updates an organization","ref":"GlificWeb.Resolvers.Partners.html#update_organization/3","title":"GlificWeb.Resolvers.Partners.update_organization/3","type":"function"},{"doc":"Updates an organization status is_active/is_approved. We will add checks to validate approval and activation","ref":"GlificWeb.Resolvers.Partners.html#update_organization_status/3","title":"GlificWeb.Resolvers.Partners.update_organization_status/3","type":"function"},{"doc":"Updates a provider","ref":"GlificWeb.Resolvers.Partners.html#update_provider/3","title":"GlificWeb.Resolvers.Partners.update_provider/3","type":"function"},{"doc":"Profile Resolver which sits between the GraphQL schema and Glific Profile Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Profiles.html","title":"GlificWeb.Resolvers.Profiles","type":"module"},{"doc":"This method will create a profile","ref":"GlificWeb.Resolvers.Profiles.html#create_profile/3","title":"GlificWeb.Resolvers.Profiles.create_profile/3","type":"function"},{"doc":"This methhod will delete a profile","ref":"GlificWeb.Resolvers.Profiles.html#delete_profile/3","title":"GlificWeb.Resolvers.Profiles.delete_profile/3","type":"function"},{"doc":"This method will update a profile","ref":"GlificWeb.Resolvers.Profiles.html#update_profile/3","title":"GlificWeb.Resolvers.Profiles.update_profile/3","type":"function"},{"doc":"Roles Resolver which sits between the GraphQL schema and Glific role Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Roles.html","title":"GlificWeb.Resolvers.Roles","type":"module"},{"doc":"Get the list of roles filtered by args","ref":"GlificWeb.Resolvers.Roles.html#count_roles/3","title":"GlificWeb.Resolvers.Roles.count_roles/3","type":"function"},{"doc":"Get a specific role by id","ref":"GlificWeb.Resolvers.Roles.html#role/3","title":"GlificWeb.Resolvers.Roles.role/3","type":"function"},{"doc":"Get the list of roles filtered by args","ref":"GlificWeb.Resolvers.Roles.html#roles/3","title":"GlificWeb.Resolvers.Roles.roles/3","type":"function"},{"doc":"Updates the role","ref":"GlificWeb.Resolvers.Roles.html#update_role/3","title":"GlificWeb.Resolvers.Roles.update_role/3","type":"function"},{"doc":"Searches Resolver which sits between the GraphQL schema and Glific saved_search Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Searches.html","title":"GlificWeb.Resolvers.Searches","type":"module"},{"doc":"Get the collection count","ref":"GlificWeb.Resolvers.Searches.html#collection_stats/3","title":"GlificWeb.Resolvers.Searches.collection_stats/3","type":"function"},{"doc":"Get the count of saved_searches","ref":"GlificWeb.Resolvers.Searches.html#count_saved_searches/3","title":"GlificWeb.Resolvers.Searches.count_saved_searches/3","type":"function"},{"doc":"Get a specific saved_search by id","ref":"GlificWeb.Resolvers.Searches.html#saved_search/3","title":"GlificWeb.Resolvers.Searches.saved_search/3","type":"function"},{"doc":"Get the list of saved_searches","ref":"GlificWeb.Resolvers.Searches.html#saved_searches/3","title":"GlificWeb.Resolvers.Searches.saved_searches/3","type":"function"},{"doc":"Settings Resolver which sits between the GraphQL schema and Glific Settings Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Settings.html","title":"GlificWeb.Resolvers.Settings","type":"module"},{"doc":"Get the count of languages filtered by args","ref":"GlificWeb.Resolvers.Settings.html#count_languages/3","title":"GlificWeb.Resolvers.Settings.count_languages/3","type":"function"},{"doc":"Create a new language. Since language is a basic system data type, this operation is an upsert","ref":"GlificWeb.Resolvers.Settings.html#create_language/3","title":"GlificWeb.Resolvers.Settings.create_language/3","type":"function"},{"doc":"Get a specific language by id","ref":"GlificWeb.Resolvers.Settings.html#language/3","title":"GlificWeb.Resolvers.Settings.language/3","type":"function"},{"doc":"Get the list of languages filtered by args","ref":"GlificWeb.Resolvers.Settings.html#languages/3","title":"GlificWeb.Resolvers.Settings.languages/3","type":"function"},{"doc":"Update language data fields","ref":"GlificWeb.Resolvers.Settings.html#update_language/3","title":"GlificWeb.Resolvers.Settings.update_language/3","type":"function"},{"doc":"Tag Resolver which sits between the GraphQL schema and Glific Tag Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Tags.html","title":"GlificWeb.Resolvers.Tags","type":"module"},{"doc":"Get the count of tags filtered by args","ref":"GlificWeb.Resolvers.Tags.html#count_tags/3","title":"GlificWeb.Resolvers.Tags.count_tags/3","type":"function"},{"doc":"Create entry for tag mapped to template","ref":"GlificWeb.Resolvers.Tags.html#create_template_tag/3","title":"GlificWeb.Resolvers.Tags.create_template_tag/3","type":"function"},{"doc":"Get a specific tag by id","ref":"GlificWeb.Resolvers.Tags.html#tag/3","title":"GlificWeb.Resolvers.Tags.tag/3","type":"function"},{"doc":"Get the list of tags filtered by args","ref":"GlificWeb.Resolvers.Tags.html#tags/3","title":"GlificWeb.Resolvers.Tags.tags/3","type":"function"},{"doc":"Creates and/or deletes a list of contact tags, each tag attached to the same contact","ref":"GlificWeb.Resolvers.Tags.html#update_contact_tags/3","title":"GlificWeb.Resolvers.Tags.update_contact_tags/3","type":"function"},{"doc":"Creates and/or deletes a list of template tags, each tag attached to the same template","ref":"GlificWeb.Resolvers.Tags.html#update_template_tags/3","title":"GlificWeb.Resolvers.Tags.update_template_tags/3","type":"function"},{"doc":"Templates Resolver which sits between the GraphQL schema and Glific Templates Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Templates.html","title":"GlificWeb.Resolvers.Templates","type":"module"},{"doc":"Get the count of session templates filtered by args","ref":"GlificWeb.Resolvers.Templates.html#count_session_templates/3","title":"GlificWeb.Resolvers.Templates.count_session_templates/3","type":"function"},{"doc":"Converting a message to message template","ref":"GlificWeb.Resolvers.Templates.html#create_template_from_message/3","title":"GlificWeb.Resolvers.Templates.create_template_from_message/3","type":"function"},{"doc":"Import pre approved templates","ref":"GlificWeb.Resolvers.Templates.html#import_templates/3","title":"GlificWeb.Resolvers.Templates.import_templates/3","type":"function"},{"doc":"Get a specific session template by id","ref":"GlificWeb.Resolvers.Templates.html#session_template/3","title":"GlificWeb.Resolvers.Templates.session_template/3","type":"function"},{"doc":"Get the list of session templates filtered by args","ref":"GlificWeb.Resolvers.Templates.html#session_templates/3","title":"GlificWeb.Resolvers.Templates.session_templates/3","type":"function"},{"doc":"Sync hsm with bsp","ref":"GlificWeb.Resolvers.Templates.html#sync_hsm_template/3","title":"GlificWeb.Resolvers.Templates.sync_hsm_template/3","type":"function"},{"doc":"Trigger Resolver which sits between the GraphQL schema and Glific Trigger Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Triggers.html","title":"GlificWeb.Resolvers.Triggers","type":"module"},{"doc":"Get the count of triggers filtered by args","ref":"GlificWeb.Resolvers.Triggers.html#count_triggers/3","title":"GlificWeb.Resolvers.Triggers.count_triggers/3","type":"function"},{"doc":"Get the list of triggers filtered by args","ref":"GlificWeb.Resolvers.Triggers.html#triggers/3","title":"GlificWeb.Resolvers.Triggers.triggers/3","type":"function"},{"doc":"Update a trigger","ref":"GlificWeb.Resolvers.Triggers.html#update_trigger/3","title":"GlificWeb.Resolvers.Triggers.update_trigger/3","type":"function"},{"doc":"User Resolver which sits between the GraphQL schema and Glific User Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.Users.html","title":"GlificWeb.Resolvers.Users","type":"module"},{"doc":"Get the count of users filtered by args","ref":"GlificWeb.Resolvers.Users.html#count_users/3","title":"GlificWeb.Resolvers.Users.count_users/3","type":"function"},{"doc":"Update current user","ref":"GlificWeb.Resolvers.Users.html#update_current_user/3","title":"GlificWeb.Resolvers.Users.update_current_user/3","type":"function"},{"doc":"Update user Later on this end point will be accessible only to role admin","ref":"GlificWeb.Resolvers.Users.html#update_user/3","title":"GlificWeb.Resolvers.Users.update_user/3","type":"function"},{"doc":"WebhookLog Resolver which sits between the GraphQL schema and Glific WebhookLog Context API. This layer basically stiches together one or more calls to resolve the incoming queries.","ref":"GlificWeb.Resolvers.WebhookLogs.html","title":"GlificWeb.Resolvers.WebhookLogs","type":"module"},{"doc":"Get the count of webhook_logs filtered by args","ref":"GlificWeb.Resolvers.WebhookLogs.html#count_webhook_logs/3","title":"GlificWeb.Resolvers.WebhookLogs.count_webhook_logs/3","type":"function"},{"doc":"Get the list of webhook_logs filtered by args","ref":"GlificWeb.Resolvers.WebhookLogs.html#webhook_logs/3","title":"GlificWeb.Resolvers.WebhookLogs.webhook_logs/3","type":"function"},{"doc":"a default gateway for all the external requests","ref":"GlificWeb.Router.html","title":"GlificWeb.Router","type":"module"},{"doc":"","ref":"GlificWeb.Router.html#api/2","title":"GlificWeb.Router.api/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#api_protected/2","title":"GlificWeb.Router.api_protected/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#auth_protected/2","title":"GlificWeb.Router.auth_protected/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.html#browser/2","title":"GlificWeb.Router.browser/2","type":"function"},{"doc":"Callback invoked by Plug on every request.","ref":"GlificWeb.Router.html#call/2","title":"GlificWeb.Router.call/2","type":"function"},{"doc":"Callback required by Plug that initializes the router for serving web requests.","ref":"GlificWeb.Router.html#init/1","title":"GlificWeb.Router.init/1","type":"function"},{"doc":"Module with named helpers generated from GlificWeb.Router.","ref":"GlificWeb.Router.Helpers.html","title":"GlificWeb.Router.Helpers","type":"module"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_onboard_path/2","title":"GlificWeb.Router.Helpers.api_v1_onboard_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_onboard_path/3","title":"GlificWeb.Router.Helpers.api_v1_onboard_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_onboard_url/2","title":"GlificWeb.Router.Helpers.api_v1_onboard_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_onboard_url/3","title":"GlificWeb.Router.Helpers.api_v1_onboard_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_path/2","title":"GlificWeb.Router.Helpers.api_v1_registration_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_path/3","title":"GlificWeb.Router.Helpers.api_v1_registration_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_url/2","title":"GlificWeb.Router.Helpers.api_v1_registration_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_registration_url/3","title":"GlificWeb.Router.Helpers.api_v1_registration_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_path/2","title":"GlificWeb.Router.Helpers.api_v1_session_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_path/3","title":"GlificWeb.Router.Helpers.api_v1_session_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_url/2","title":"GlificWeb.Router.Helpers.api_v1_session_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#api_v1_session_url/3","title":"GlificWeb.Router.Helpers.api_v1_session_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#exotel_path/2","title":"GlificWeb.Router.Helpers.exotel_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#exotel_path/3","title":"GlificWeb.Router.Helpers.exotel_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#exotel_url/2","title":"GlificWeb.Router.Helpers.exotel_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#exotel_url/3","title":"GlificWeb.Router.Helpers.exotel_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/2","title":"GlificWeb.Router.Helpers.flow_editor_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/3","title":"GlificWeb.Router.Helpers.flow_editor_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_path/4","title":"GlificWeb.Router.Helpers.flow_editor_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/2","title":"GlificWeb.Router.Helpers.flow_editor_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/3","title":"GlificWeb.Router.Helpers.flow_editor_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#flow_editor_url/4","title":"GlificWeb.Router.Helpers.flow_editor_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/2","title":"GlificWeb.Router.Helpers.live_dashboard_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/3","title":"GlificWeb.Router.Helpers.live_dashboard_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/4","title":"GlificWeb.Router.Helpers.live_dashboard_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_path/5","title":"GlificWeb.Router.Helpers.live_dashboard_path/5","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/2","title":"GlificWeb.Router.Helpers.live_dashboard_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/3","title":"GlificWeb.Router.Helpers.live_dashboard_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/4","title":"GlificWeb.Router.Helpers.live_dashboard_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_dashboard_url/5","title":"GlificWeb.Router.Helpers.live_dashboard_url/5","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_path/2","title":"GlificWeb.Router.Helpers.live_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_path/3","title":"GlificWeb.Router.Helpers.live_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_url/2","title":"GlificWeb.Router.Helpers.live_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#live_url/3","title":"GlificWeb.Router.Helpers.live_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_path/2","title":"GlificWeb.Router.Helpers.oban_dashboard_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_path/3","title":"GlificWeb.Router.Helpers.oban_dashboard_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_path/4","title":"GlificWeb.Router.Helpers.oban_dashboard_path/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_path/5","title":"GlificWeb.Router.Helpers.oban_dashboard_path/5","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_url/2","title":"GlificWeb.Router.Helpers.oban_dashboard_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_url/3","title":"GlificWeb.Router.Helpers.oban_dashboard_url/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_url/4","title":"GlificWeb.Router.Helpers.oban_dashboard_url/4","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#oban_dashboard_url/5","title":"GlificWeb.Router.Helpers.oban_dashboard_url/5","type":"function"},{"doc":"Generates the path information including any necessary prefix.","ref":"GlificWeb.Router.Helpers.html#path/2","title":"GlificWeb.Router.Helpers.path/2","type":"function"},{"doc":"Generates an integrity hash to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_integrity/2","title":"GlificWeb.Router.Helpers.static_integrity/2","type":"function"},{"doc":"Generates path to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_path/2","title":"GlificWeb.Router.Helpers.static_path/2","type":"function"},{"doc":"Generates url to a static asset given its file path.","ref":"GlificWeb.Router.Helpers.html#static_url/2","title":"GlificWeb.Router.Helpers.static_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#stripe_path/2","title":"GlificWeb.Router.Helpers.stripe_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#stripe_path/3","title":"GlificWeb.Router.Helpers.stripe_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#stripe_url/2","title":"GlificWeb.Router.Helpers.stripe_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#stripe_url/3","title":"GlificWeb.Router.Helpers.stripe_url/3","type":"function"},{"doc":"Generates the connection/endpoint base URL without any path information.","ref":"GlificWeb.Router.Helpers.html#url/1","title":"GlificWeb.Router.Helpers.url/1","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_path/2","title":"GlificWeb.Router.Helpers.webhook_path/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_path/3","title":"GlificWeb.Router.Helpers.webhook_path/3","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_url/2","title":"GlificWeb.Router.Helpers.webhook_url/2","type":"function"},{"doc":"","ref":"GlificWeb.Router.Helpers.html#webhook_url/3","title":"GlificWeb.Router.Helpers.webhook_url/3","type":"function"},{"doc":"This is the container for the top level Absinthe GraphQL schema which encapsulates the entire Glific Public API. This file is primarily a container and pulls in the relevant information for data type specific files.","ref":"GlificWeb.Schema.html","title":"GlificWeb.Schema","type":"module"},{"doc":"Validation function for all subscriptions received by the system","ref":"GlificWeb.Schema.html#config_fun/2","title":"GlificWeb.Schema.config_fun/2","type":"function"},{"doc":"Used to set some values in the context that we may need in order to run. We store the organization id and the current user in the context once the user has been authenticated","ref":"GlificWeb.Schema.html#context/1","title":"GlificWeb.Schema.context/1","type":"function"},{"doc":"Used to apply middleware on all or a group of fields based on pattern matching. It is passed the existing middleware for a field, the field itself, and the object that the field is a part of.","ref":"GlificWeb.Schema.html#middleware/3","title":"GlificWeb.Schema.middleware/3","type":"function"},{"doc":"Used to define the list of plugins to run before and after resolution.","ref":"GlificWeb.Schema.html#plugins/0","title":"GlificWeb.Schema.plugins/0","type":"function"},{"doc":"GraphQL Representation of Glific's Billing DataType","ref":"GlificWeb.Schema.BillingTypes.html","title":"GlificWeb.Schema.BillingTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Consulting Hours DataType","ref":"GlificWeb.Schema.ConsultingHourTypes.html","title":"GlificWeb.Schema.ConsultingHourTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact Group DataType","ref":"GlificWeb.Schema.ContactGroupTypes.html","title":"GlificWeb.Schema.ContactGroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact Tag DataType","ref":"GlificWeb.Schema.ContactTagTypes.html","title":"GlificWeb.Schema.ContactTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact DataType","ref":"GlificWeb.Schema.ContactTypes.html","title":"GlificWeb.Schema.ContactTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Contact Field DataType","ref":"GlificWeb.Schema.ContactsFieldTypes.html","title":"GlificWeb.Schema.ContactsFieldTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Organization Credential DataType","ref":"GlificWeb.Schema.CredentialTypes.html","title":"GlificWeb.Schema.CredentialTypes","type":"module"},{"doc":"Representing our enums in the style Absinthe expects them. We can now use these atoms in the object definitions within the GraphQL Schema","ref":"GlificWeb.Schema.EnumTypes.html","title":"GlificWeb.Schema.EnumTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Extension DataType","ref":"GlificWeb.Schema.ExtensionTypes.html","title":"GlificWeb.Schema.ExtensionTypes","type":"module"},{"doc":"GraphQL Representation of FlowLabel DataType","ref":"GlificWeb.Schema.FlowLabelTypes.html","title":"GlificWeb.Schema.FlowLabelTypes","type":"module"},{"doc":"GraphQL Representation of Flow DataType","ref":"GlificWeb.Schema.FlowTypes.html","title":"GlificWeb.Schema.FlowTypes","type":"module"},{"doc":"GraphQL Representation of common data representations used across different Glific's DataType","ref":"GlificWeb.Schema.GenericTypes.html","title":"GlificWeb.Schema.GenericTypes","type":"module"},{"doc":"A forgivable parser which allows integers or strings to represent integers","ref":"GlificWeb.Schema.GenericTypes.html#parse_maybe_integer/1","title":"GlificWeb.Schema.GenericTypes.parse_maybe_integer/1","type":"function"},{"doc":"GraphQL Representation of Glific's Group DataType","ref":"GlificWeb.Schema.GroupTypes.html","title":"GlificWeb.Schema.GroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Interactive DataType","ref":"GlificWeb.Schema.InteractiveTemplateTypes.html","title":"GlificWeb.Schema.InteractiveTemplateTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Language DataType","ref":"GlificWeb.Schema.LanguageTypes.html","title":"GlificWeb.Schema.LanguageTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Location DataType","ref":"GlificWeb.Schema.LocationTypes.html","title":"GlificWeb.Schema.LocationTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Location DataType","ref":"GlificWeb.Schema.MediaTypes.html","title":"GlificWeb.Schema.MediaTypes","type":"module"},{"doc":"GraphQL Representation of Glific's MessageMedia DataType","ref":"GlificWeb.Schema.MessageMediaTypes.html","title":"GlificWeb.Schema.MessageMediaTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Message Tag DataType","ref":"GlificWeb.Schema.MessageTagTypes.html","title":"GlificWeb.Schema.MessageTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Message DataType","ref":"GlificWeb.Schema.MessageTypes.html","title":"GlificWeb.Schema.MessageTypes","type":"module"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.AddOrganization.html","title":"GlificWeb.Schema.Middleware.AddOrganization","type":"module"},{"doc":"This is the main middleware callback. It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.AddOrganization.html#call/2","title":"GlificWeb.Schema.Middleware.AddOrganization.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.Authorize.html","title":"GlificWeb.Schema.Middleware.Authorize","type":"module"},{"doc":"This is the main middleware callback. It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.Authorize.html#call/2","title":"GlificWeb.Schema.Middleware.Authorize.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Ecto Changeset into a format consumable and displayable to the API user. This version is specifically for mutations.","ref":"GlificWeb.Schema.Middleware.ChangesetErrors.html","title":"GlificWeb.Schema.Middleware.ChangesetErrors","type":"module"},{"doc":"This is the main middleware callback. It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.ChangesetErrors.html#call/2","title":"GlificWeb.Schema.Middleware.ChangesetErrors.call/2","type":"function"},{"doc":"Implementing middleware functions to transform errors from Elixir and friends into a format consumable and displayable to the API user. This version is specifically for queries.","ref":"GlificWeb.Schema.Middleware.QueryErrors.html","title":"GlificWeb.Schema.Middleware.QueryErrors","type":"module"},{"doc":"This is the main middleware callback. It receives an %Absinthe.Resolution{} struct and it needs to return an %Absinthe.Resolution{} struct. The second argument will be whatever value was passed to the middleware call that setup the middleware.","ref":"GlificWeb.Schema.Middleware.QueryErrors.html#call/2","title":"GlificWeb.Schema.Middleware.QueryErrors.call/2","type":"function"},{"doc":"GraphQL Representation of Glific's Notification DataType","ref":"GlificWeb.Schema.NotificationTypes.html","title":"GlificWeb.Schema.NotificationTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Organization DataType","ref":"GlificWeb.Schema.OrganizationTypes.html","title":"GlificWeb.Schema.OrganizationTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Profile","ref":"GlificWeb.Schema.ProfileTypes.html","title":"GlificWeb.Schema.ProfileTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Provider DataType","ref":"GlificWeb.Schema.ProviderTypes.html","title":"GlificWeb.Schema.ProviderTypes","type":"module"},{"doc":"GraphQL Representation of Role DataType","ref":"GlificWeb.Schema.RoleTypes.html","title":"GlificWeb.Schema.RoleTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Search DataType","ref":"GlificWeb.Schema.SearchTypes.html","title":"GlificWeb.Schema.SearchTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Session Template DataType","ref":"GlificWeb.Schema.SessionTemplateTypes.html","title":"GlificWeb.Schema.SessionTemplateTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Tag DataType","ref":"GlificWeb.Schema.TagTypes.html","title":"GlificWeb.Schema.TagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Template Tag DataType","ref":"GlificWeb.Schema.TemplateTagTypes.html","title":"GlificWeb.Schema.TemplateTagTypes","type":"module"},{"doc":"GraphQL Representation of Glific's Trigger DataType","ref":"GlificWeb.Schema.TriggerTypes.html","title":"GlificWeb.Schema.TriggerTypes","type":"module"},{"doc":"GraphQL Representation of Glific's User Group DataType","ref":"GlificWeb.Schema.UserGroupTypes.html","title":"GlificWeb.Schema.UserGroupTypes","type":"module"},{"doc":"GraphQL Representation of Glific's User DataType","ref":"GlificWeb.Schema.UserTypes.html","title":"GlificWeb.Schema.UserTypes","type":"module"},{"doc":"GraphQL Representation of Glific's WebhookLog DataType","ref":"GlificWeb.Schema.WebhookLogTypes.html","title":"GlificWeb.Schema.WebhookLogTypes","type":"module"},{"doc":"StatsLive uses phoenix live view to show current stats","ref":"GlificWeb.StatsLive.html","title":"GlificWeb.StatsLive","type":"module"},{"doc":"Wires up socket assigns necessary for rendering the view","ref":"GlificWeb.StatsLive.html#mount/3","title":"GlificWeb.StatsLive.mount/3","type":"function"},{"doc":"Receives the socket.assigns and is responsible for returning rendered content","ref":"GlificWeb.StatsLive.html#render/1","title":"GlificWeb.StatsLive.render/1","type":"function"},{"doc":"The controller for all events received from Stripe","ref":"GlificWeb.StripeController.html","title":"GlificWeb.StripeController","type":"module"},{"doc":"The top level API used by the router. Use pattern matching to handle specific events","ref":"GlificWeb.StripeController.html#stripe_webhook/2","title":"GlificWeb.StripeController.stripe_webhook/2","type":"function"},{"doc":"Simple plug to handle and authenticate incoming webhook calls from Stripe","ref":"GlificWeb.StripeWebhook.html","title":"GlificWeb.StripeWebhook","type":"module"},{"doc":"This is a basic plug that loads the current organization assign from a given value set on subdomain. To plug it on your router, you can use: plug GlificWeb.SubdomainPlug , endpoint : MyApp.Endpoint , organization_handler : &amp; OrganizationHelper . organization_handler / 1 See GlificWeb.SubdomainPlugConfig to check all the allowed config flags.","ref":"GlificWeb.SubdomainPlug.html","title":"GlificWeb.SubdomainPlug","type":"module"},{"doc":"This is a struct that holds the configuration for GlificWeb.SubdomainPlug . Here are the config keys allowed: organization_handler : function to handle the organization param. Its return will be used as the organization. assign : the name of the assign where we must save the organization. endpoint : the Phoenix.Endpoint to get the host name to dicover the subdomain.","ref":"GlificWeb.SubdomainPlugConfig.html","title":"GlificWeb.SubdomainPlugConfig","type":"module"},{"doc":"","ref":"GlificWeb.SubdomainPlugConfig.html#t:t/0","title":"GlificWeb.SubdomainPlugConfig.t/0","type":"type"},{"doc":"This is the main module of multi-tenancy in Glific. It has been borrowed from Triplex. ( https://github.com/ateliware/triplex ). However we are going to us postgres row level security instead, and hence copying the code from there. The original copyright and license (MIT) belong to the contributors to Triplex. The main objetive of it is to make a little bit easier to manage organizations through postgres db schemas or equivalents, executing queries and commands inside and outside the organization without much boilerplate code.","ref":"GlificWeb.Tenants.html","title":"GlificWeb.Tenants","type":"module"},{"doc":"Given a string from the connection info (subdomain), check and retrieve the organization id. For the short term, we'll default to organization id Glific, if we cannot resolve the sub-domain, we'll remove this in v0.4","ref":"GlificWeb.Tenants.html#organization_handler/1","title":"GlificWeb.Tenants.organization_handler/1","type":"function"},{"doc":"Given a conn object, get the remote ip of the user as a string","ref":"GlificWeb.Tenants.html#remote_ip/1","title":"GlificWeb.Tenants.remote_ip/1","type":"function"},{"doc":"Returns if the given organization is reserved or not. The function to_prefix/1 will be applied to the organization.","ref":"GlificWeb.Tenants.html#reserved_organization?/1","title":"GlificWeb.Tenants.reserved_organization?/1","type":"function"},{"doc":"Returns the list of reserved organizations. By default, there are some limitations for the name of a organization depending on the database, like &quot;public&quot; or anything that start with &quot;pg_&quot;. Notice that you can use regexes, and they will be applied to the organization names.","ref":"GlificWeb.Tenants.html#reserved_organizations/0","title":"GlificWeb.Tenants.reserved_organizations/0","type":"function"},{"doc":"","ref":"readme.html","title":"Glific - Two Way Open Source Communication Platform","type":"extras"},{"doc":"There is level of understanding middle to advanced level. It is assumed that you know how to use a terminal, install things and have git; for the backend, and for the frontend use install npm / yarn and react. Software dependency - Postgres server Software dependency - Erlang / Elixir Backend - Download External service - Gupshup. &lt;-- Get a Free trial to get API-key External service - Oban. &lt;-- Needs 100 Euro per month Backend - Install certificate Backend - Config Frontend 1. Software dependency - Postgres server Download and start postgres server For Postgres, for the development server, we default to using postgres/postgres as the username/password. This is configurable We tested and developed against the following version: - postgres : v13.x 2. Software dependency - Erlang / Elixir Install Elixir (check package versions below) For Ubuntu users you also need to install the inotify-tools package We tested and developed against the following versions: - erlang : 24.3.4 - elixir : 1.13.4-otp-24 3. Backend - Download Download the latest code from GitHub git clone https://github.com/glific/glific DO NOT run mix deps.get until the next steps are completed. 4. External service - Gupshup Create and link your Gupshup Account Gupshup is an external service that connects to WhatsApp You will need to do the following: a. Create a Gupshup Account b. Create an app and select Access API c. You can name it NewNameHere &quot;GlificTest &lt;-- Bot Name is already in use, then use anotherone&quot; d. Edit glific_backend/config/dev.secret.exs e. Find your API Key, check top left corner or inside the curl sample message f. Enter your APP name 5. External service - Oban Pro Oban is a cron-like library. Glific depends 100% on job processing. Oban is required before running mix for Glific to operate. You must purchase license. When purchashing you must buy WEB+PRO . After you purchased Go to account and get this information and run this in glific_backend mix hex.repo add oban https://getoban.pro/repo --fetch-public-key SHA256:4/abc/edf/gef+aIWPc --auth-key abdedcqweasdj__KEY_AUTH__asdafasdf Copy the --auth KEY and run this other command mix hex.organization auth oban --key abdedcqweasdj__KEY_AUTH__asdafasdf Make sure your key is in the list mix hex.repo list Name URL Public key Auth key oban https :// getoban . pro / repo SHA256 : 4 / abc / edf / gef + aIWPc abdedcqweasdj__KEY_AUTH__asdafasdf If you see it twice, it will not work and fail, since Oban moved from public repository to private this is how an example of failing looks like Name URL Public key Auth key hexpm :oban https :// repo . hex . pm / repos / oban SHA256 :abc / edf / gef + aIWPc abdedcqweasdj__KEY_AUTH__asdafasdf oban https :// getoban . pro / repo SHA256 : 4 / abc / edf / gef + aIWPc abdedcqweasdj__KEY_AUTH__asdafasdf this is wrong, and you run mix deps.get it will try to fetch from public and ignore private and fail simply remove the public one mix hex.repo remove hexpm:oban Now check again mix hex.repo list Name URL Public key Auth key oban https :// getoban . pro / repo SHA256 : 4 / abc / edf / gef + aIWPc abdedcqweasdj__KEY_AUTH__asdafasdf 6. Install certificate - Use SSL for frontend and backend Before install also you need to create this SSL cert simila to this Go to glific_backend folder in the terminal console. a. Install mkcert ( https://github.com/FiloSottile/mkcert ) b. mkcert --install c. mkcert glific.test api.glific.test d. mkdir priv/cert e. mv glific.test* priv/cert f. cd priv/cert g. ls -1 Check that glific.test+1-key.pem and glific.test+1.pem exists if not then copy any certificate found in there to the correct names for example if I see : ❯ ls -1 glific.test+6-key.pem glific.test+6.pem glific.test+7-key.pem glific.test+7.pem ❯ cp glific.test+6-key.pem glific.test+1-key.pem ❯ cp glific.test+6.pem glific.test+1.pem And check again ❯ ls -1 glific.test+1-key.pem glific.test+1.pem glific.test+6-key.pem glific.test+6.pem glific.test+7-key.pem glific.test+7.pem h. Check port 4001 sudo lsof -n -i:4001 | grep LISTEN should return nothing. i. Check hosts file grep glific /etc/hosts if returns nothing then make sure hosts file has those names added ` sudo bash - c &#39;echo &quot;127.0.0.1 glific.test api.glific.test&quot; &gt;&gt; /etc/hosts&#39; ` 7. Backend - Config a. Copy the file: cp config/dev.secret.exs.txt config/dev.secret.exs and edit b. Copy the file: cp config/.env.dev.txt config/.env.dev and edit c. Run source config/.env.dev d. Run mix deps.get if this fails try first mix local.hex --force then mix deps.get if you see this error, then Oban key is wrong or failing. Check step 5. Or contact Oban. ❯ mix deps.get Failed to fetch record for 'hexpm:oban/oban_pro' from registry (using cache instead) This could be because the package does not exist, it was spelled incorrectly or you don't have permissions to it Failed to fetch record for 'hexpm:oban/oban_web' from registry (using cache instead) This could be because the package does not exist, it was spelled incorrectly or you don't have permissions to it ** (Mix) Unknown package oban_pro in lockfile e. Run mix setup f. Run mix phx.server g. Another tab of terminal - Start the backend server in iex session: iex -S mix h. Inside the iex - Update HSM templates: Glific.Templates.sync_hsms_from_bsp(1) Now you can visit localhost:4000 from your browser. 8. Frontend - Install glific_frontend You cannot do much from the glific_backend unless you are an API developer. To see Glific in its glory, please install Glific Frontend git clone https://github.com/glific/glific_frontend cd glific_frontend open package.json and update start script nano package.json from &quot;start&quot; : &quot;HTTPS=true SSL_CRT_FILE=../glific/priv/cert/glific.test+1.pem SSL_KEY_FILE=../glific/priv/cert/glific.test+1-key.pem react-scripts start&quot; to &quot;start&quot; : &quot;HTTPS=true SSL_CRT_FILE=../glific_backend/priv/cert/glific.test+1.pem SSL_KEY_FILE=../glific_backend/priv/cert/glific.test+1-key.pem react-scripts start&quot; Copy config file cp .env.example .env Make sure the .env config file looks like this REACT_APP_API_PREFIX=&quot;api&quot; # localhost REACT_APP_GLIFIC_API_PORT=4001 REACT_APP_GLIFIC_BACKEND_URL=&quot;&quot; REACT_APP_APPSIGNAL_API_KEY=&quot;&quot; REACT_APP_APPLICATION_NAME=&quot;Glific: Two way communication platform&quot; REACT_APP_LOGFLARE_API_KEY=&quot;&quot; REACT_APP_LOGFLARE_SOURCE_TOKEN=&quot;&quot; REACT_APP_STRIPE_PUBLISH_KEY=&quot;&quot; REACT_APP_RECAPTCHA_CLIENT_KEY=&quot;Your recaptch key&quot; USE Double quotes &quot; &quot; , not single ' ' quotes. And do not leave spaces before or after. Do not use '' for after the = or leave spaces Broken For example 1 REACT_APP_GLIFIC_BACKEND_URL=&#39;gitflic.test&#39; this will be read like this by react https://%27gitflic.test%27 . notice the %27 which will fail the connection Broken For example 2 REACT_APP_GLIFIC_BACKEND_URL= gitflic.test&#39; this will be read like this by react https://%32gitflic.test%27 . notice the %32 which will fail the connection Broken For example 3 REACT_APP_GLIFIC_BACKEND_URL=&quot;gitflic.test &quot; this will be read like this by react https://gitflic.test%32 . notice the %32 which will fail the connection Broken For example 4 REACT_APP_GLIFIC_BACKEND_URL=&quot;https://gitflic.test&quot; this will be read like this by react https://https://gitflic.test . notice the extra https:// which will fail the connection Correct For examples REACT_APP_GLIFIC_BACKEND_URL=&quot;gitflic.test&quot; REACT_APP_GLIFIC_BACKEND_URL=gitflic.test Now run install yarn setup If there were no failures yarn start Go to localhost:3000 from your browser. Front end credentials Phone 917834811114 Password secret1234","ref":"readme.html#pre-requisites","title":"Glific - Two Way Open Source Communication Platform - Pre-requisites","type":"extras"},{"doc":"Install ngrok Start ngrok to proxy port 4000: Start the backend server: mix phx.server $ ngrok http 4000 --host-header=localhost:4000 (do this in a new window)) Remember the URL it assigns you, something like: https://9f6a7c7822d2.ngrok.io Goto the Settings Page On that page, Search for Manage your Template messaging settings and enable it On same page, Search for Callback URL / Link your Bot Enter your callback URL that ngrok gave you, add: /gupshup to the end. Something like: https://9f6a7c7822d2.ngrok.io/gupshup/ Click Set . It should give you a Callback set successfully message. If not, check the above steps.","ref":"readme.html#optional-using-ngrok","title":"Glific - Two Way Open Source Communication Platform - Optional - Using NGROK","type":"extras"},{"doc":"For v0.x releases, we will be resetting the DB and not saving existing state. Run the following commands to update your codebase from the glific repository. Ensure you are in the top level directory of the glific api code. Get the latest code from master: git switch master; git pull Ensure you have not modified any files in this directory, by running: git status Run the setup command: mix setup","ref":"readme.html#updating-your-instance","title":"Glific - Two Way Open Source Communication Platform - Updating your instance","type":"extras"},{"doc":"Postman API docs GraphQL API docs Code Documentation User Guide Recipes - Code smaples for some common use cases in glific.","ref":"readme.html#documentation","title":"Glific - Two Way Open Source Communication Platform - Documentation","type":"extras"},{"doc":"Glific Demo Video One Pager Product Features Glific Blogs Google Drive","ref":"readme.html#learn-more","title":"Glific - Two Way Open Source Communication Platform - Learn more","type":"extras"},{"doc":"Chat on Discord","ref":"readme.html#chat-with-us","title":"Glific - Two Way Open Source Communication Platform - Chat with us","type":"extras"},{"doc":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","ref":"changelog.html","title":"Changelog","type":"extras"},{"doc":"Add/Edit Stripe customer and TDS support. Added contact variables suggestion. Added in-office flow in the form structure. Added support for media-url in messages BigQuery Added support for button templates Export flows as a json file. Template variable issue. Now we are parsing the parameter consulting hours/TDS and many more enhancements on Stripe API Added SaaS deployments Billing Consulting Hours Code Extensions Button template HSM messages in simulator Floweditor improvements Split by Intent (integration with Dialogflow) Attachments support Is Active field for Flows Contact fields edit/update/delete Propagating parent and child flow results in flows Bugfixes in webhook calls (allowing 200..299) as valid response","ref":"changelog.html#1-7-0-2021-06-22","title":"Changelog - [1.7.0] -- 2021-06-22","type":"extras"},{"doc":"Added SaaS deployments Billing Consulting Hours Code Extensions Button template HSM messages in simulator Floweditor improvements Split by Intent (integration with Dialogflow) Attachments support Is Active field for Flows Contact fields edit/update/delete Propagating parent and child flow results in flows Bugfixes in webhook calls (allowing 200..299) as valid response","ref":"changelog.html#1-6-x-2021-06-01","title":"Changelog - [1.6.x] -- 2021-06-01","type":"extras"},{"doc":"Added Finalize Stripe integration, which allows our users to leverage already existing secure systems to make payments. This way we do not collect or store any of the private card details. Integrated stripe Customer portal. Now NGOs can also easily update card details whenever it is required to make a switch to a different credit card. Stripe has further enabled us to support a reduced monthly pricing when NGOs want to pause the use of platform for a few months. All your flows and staff accounts will continue to be supported at a lower than normal monthly price. Added first cut of the organization onboarding form. New NGOs will simply fill out a form with some important details to start with glific. In the flow editor The has_any_words selection for contact’s response was not working as expected with multiple words. This has been fixed. the updates from new feature releases were not showing up immediately due to some caching. It would take some time or hard reload to get the latest version. We’ve made improvements in that. WhatsApp has a reply feature which allows users to contextually respond to a message. Now, whenever a contact replies to a particular message you will be able to see it through contextual formatting in the contact's chat. In the previous release we added the ability for users to change the interface language to Hindi if they wanted. We’ve been making progress to cover the entire application and leave no spots un-translated. For windows, horizontal scrolling was slightly difficult since the scroll was not visible. We’ve corrected that so that there’s a greater control in accessing the flows horizontally. NGOs will be able to directly record a voice message from the interface similar to how the WhatsApp supports it, and send to a contact from the Glific chat window. Previously the interface only supported attachment URLs to be included while sending a message, now you can also upload the file from your local computer if you have Google Cloud Storage(GCS) integration enabled. This way a GCS link gets automatically generated for your uploads.","ref":"changelog.html#1-5-x-2021-05-09","title":"Changelog - [1.5.x] -- 2021-05-09","type":"extras"},{"doc":"Added Made frontend interface localizable. Using lokalise.com to manage transalations Integrated Stripe Billing into code base, so we can switch to credit card payments Lazy loading of javascript on frontend Support for variables lookup between parent and children flows Preview of HSM templates","ref":"changelog.html#1-4-0-2021-04-15","title":"Changelog - [1.4.0] -- 2021-04-15","type":"extras"},{"doc":"Added Stats Table - Centralize all stats on an hourly basis Notifications - Notification system to report out-of-band errors to NGOs (Flows, BigQuery etc) Support for media in HSM templates Display collection's contact status information Display flow status by last saved date - draft/publish Display specific error messages if a message is not sent (like 24 hour window expire, contact not opted etc) Added view details and add a contact option for collection from the chat screen Added Organization phone number in settings Fixed An updated version of the BigQuery implementation, with a new version of the DataStudio Report Message subscription enhancement Bug fixes for links with underscores","ref":"changelog.html#1-3-0-2021-03-31","title":"Changelog - [1.3.0] -- 2021-03-31","type":"extras"},{"doc":"Added Triggers Ability to optionally delete / optin Contcts via import Ability for NGOs to customize some glific operations via integrated elixir code Fixed Quick access to saved searches Fixed showing all messages in the conversation Improved UI for adding contacts to a collection Database optimizations for inserting messages Removed No longer use Postgres full text search, simplified search","ref":"changelog.html#1-2-0-2021-03-19","title":"Changelog - [1.2.0] -- 2021-03-19","type":"extras"},{"doc":"Added Add import functionality via CSV for contacts Fixed Allow flows to proceed always. Checks are performed within flow execution","ref":"changelog.html#1-1-2-2021-03-11","title":"Changelog - [1.1.2] - 2021-03-11","type":"extras"},{"doc":"Fixed Ensure that the status search queries limit number of contacts","ref":"changelog.html#0-11-1-2021-02-14","title":"Changelog - [0.11.1] - 2021-02-14","type":"extras"},{"doc":"Fixed Eliminate search count in saved searches GraphQL Skip reporting Exit Loop? as appsignal error","ref":"changelog.html#0-11-0-2021-02-14","title":"Changelog - [0.11.0] - 2021-02-14","type":"extras"},{"doc":"Fixed Found and fixed infinite loop issue Take advantage of prepared schema's for pg 12+ Continue with our DB optimization quest Improve subscription performance, especially for saved search","ref":"changelog.html#0-10-8-2021-02-11","title":"Changelog - [0.10.8] - 2021-02-11","type":"extras"},{"doc":"Fixed Use json maps rather than our own pseudo-maps Improve GCS and BigQuery code Improve garbage collection in consumer worker More learning on GenServer","ref":"changelog.html#0-10-4-2021-02-08","title":"Changelog - [0.10.4] - 2021-02-08","type":"extras"},{"doc":"Added Trigger for updating messages's updated_at when message is tagged Trigger for updating contacts's updated_at when contact is tagged Added size validation for media attachments","ref":"changelog.html#0-9-7-2021-01-25","title":"Changelog - [0.9.7] - 2021-01-25","type":"extras"},{"doc":"Added Support for failed authentication Added plugins and versioning for appsignal in frontend Fixed BigQuery updating mesages periodically BigQuery updating contacts periodically Simulator scroll issue Jump to latest button position","ref":"changelog.html#0-9-6-2021-01-23","title":"Changelog - [0.9.6] - 2021-01-23","type":"extras"},{"doc":"Added Trigger for updating contact's updated_at when contact is added to group Message status subscription Redirection to https Fixed Making description fields as text field Updated README.md BigQuery Cleanups Removed GlificProxy server Making message body as nullable in case of media speed sends Search conversation errors Order by column error","ref":"changelog.html#0-9-5-2021-01-22","title":"Changelog - [0.9.5] - 2021-01-22","type":"extras"},{"doc":"Added Webhook signature field Validate media URL in while sending media in flows Added CORS proxy server Flow editor media URL validation Fixed Optimize fetching opted in contacts from BSP server Sending errors in case of wrong API keys API Client cleanups Handle null message error Wallet balance error Not displaying last message media types Background change for contact bar icons","ref":"changelog.html#0-9-4-2021-01-18","title":"Changelog - [0.9.4] - 2021-01-18","type":"extras"},{"doc":"Added Making keyword as Nullable when creating a new flow Sending Message status subcription Added seeder for flow results Fixed Contact id jump when contact optout","ref":"changelog.html#0-9-3-2021-01-14","title":"Changelog - [0.9.3] - 2021-01-14","type":"extras"},{"doc":"Added Responsive chat screen for mobile view Renamed collections to searches Support for location in messages Status in Webhook logs Support for filtering webhook logs with part URL Updated Seeder for dev Fixed Optimizing organization subscription by checking for active organizations Updating all HSM templates","ref":"changelog.html#0-9-2-2021-01-11","title":"Changelog - [0.9.2] - 2021-01-11","type":"extras"},{"doc":"Added Floweditor maximum attachments support set to 1 Support in flow engine for &quot;wait for time&quot; node Validation for template list Upgrade elixir packages to latest version Fixed Fixed contact field with name containing underscore","ref":"changelog.html#0-9-1-2021-01-06","title":"Changelog - [0.9.1] - 2021-01-06","type":"extras"},{"doc":"Added Support for &quot;wait for time&quot; node Updating Flow results that were updated in last 90 mins Support for sending media HSMs Support for showing webhook logs Fixed Fixed issue of contact field being saved to Bigquery with label as nil Fixed appsignal errors","ref":"changelog.html#0-9-0-2021-01-04","title":"Changelog - [0.9.0] - 2021-01-04","type":"extras"},{"doc":"Added Store messages sent to group in messages table API to retrieve group conversations flow_context id to flow results table so we store each run through the flow","ref":"changelog.html#0-8-7-2020-12-28","title":"Changelog - [0.8.7] - 2020-12-28","type":"extras"},{"doc":"Added Stir usecase, computing score based on answers of survey Stir usecase, returning list of wrongly answered Support for message variable parser Support for fetching hsm templates from gupshup periodically Fixed fixed message variable parsing in webhook, route and contact field Using dot syntax in webhook results","ref":"changelog.html#0-8-6-2020-12-22","title":"Changelog - [0.8.6] - 2020-12-22","type":"extras"},{"doc":"Added Support for retrieving HSM messages from gupshup Switched to new API to send HSM messages","ref":"changelog.html#0-8-5-2020-12-17","title":"Changelog - [0.8.5] - 2020-12-17","type":"extras"},{"doc":"Added Rescheduling oban jobs in case of failure for ensuring data archival Added Check for bigquery tables and dataset in case of Bigquery Jobs failure Clearing cache on encrypting data with new key Adding custom data as JSON in Webhook Fixed Webhook fixes Fetching all details for bigquery integration from single JSON Cloak Key migration fixes","ref":"changelog.html#0-8-4-2020-12-15","title":"Changelog - [0.8.4] - 2020-12-15","type":"extras"},{"doc":"Added Support for translations in templates Attachment support for various translations in flow editor and templates Cannot block simulator contact anymore. UI/UX enhancements Added opt-in instructions on the registration page Timer display corrections Automations are renamed to &quot;Flows&quot; Fixed Tweak settings in AppSignal to ignore DB queries","ref":"changelog.html#0-8-3-2020-12-08","title":"Changelog - [0.8.3] - 2020-12-08","type":"extras"},{"doc":"Added Add caches expiration and refreshes support for keeping check that only frequently used data is cached. Added logging for tracking various events Added has all words option in automation for user responded messages. Archiving Flow results in Bigquery Stickers have transparent background Placeholder in chat input Upgrade to 2.0 version of AppSignal Fixed High memory utilization problem Flow keyword issue, saving clean strings Saving only recent five messages in flow recent messages Autosave calls after moving away from flow configure screen","ref":"changelog.html#0-8-2-2020-12-07","title":"Changelog - [0.8.2] - 2020-12-07","type":"extras"},{"doc":"Added Attachment support from the chat window Sticker Support in messages Send Media HSM templates from flow editor Showing BSP balance on the dashboard Added flows information on the bigquery Mask phone numbers in the profile page Sync contact fields in Bigquery Archiving Flows in Bigquery Media HSM files Showing BSP balance on the dashboard Updated Documentation Fixed Fixed login timeout issue. Update the readme file Adding contact to group from automation","ref":"changelog.html#0-8-0-and-prior-2020-12-01","title":"Changelog - [0.8.0 and prior] - 2020-12-01","type":"extras"},{"doc":"Added Logging high level actions Attachment support to sending messages in frontend Support for stickers type Support in BigQuery for updating contacts, messages and new tables for flows, groups. Changed Removed most of the standard flows from production Fixed Improved support for rate limiting when communicating with Gupshup Upgraded floweditor version","ref":"changelog.html#0-7-3-2020-11-30","title":"Changelog - [0.7.3] - 2020-11-30","type":"extras"},{"doc":"Added Support for webhooks (preliminary) Support for permissioning at the staff level Display of remaining budget on Gupshup Support for HSM's including Quick Reply and Call to Action Fixed Keywords for flows are now all lowercase","ref":"changelog.html#0-7-2-2020-11-23","title":"Changelog - [0.7.2] - 2020-11-23","type":"extras"},{"doc":"Added Core Glific DB Structure and functionality Phoenix Schema and Context Structure GraphQL API as main interface to the core platform User Authentication and Permissioning Tags, Collections, Conversations, Groups as core building blocks Settings to store and manage credentials of various services Integration with 3rd party communication providers Unit Tests for all glific code with 80%+ code and documentation coverage CI system via GitHub Actions CD system to Gigalixir Community documentation (README, LICENSE, CHANGELOG, CODE_OF_CONDUCT)","ref":"changelog.html#0-7-1-and-prior-2020-11-16","title":"Changelog - [0.7.1 and prior] - 2020-11-16","type":"extras"}]